[tiles]
# Our tiles are split into two domains; those that can have their patterns autogenerated, and those that are special one-off arrangements or variations which can't be automatically generated.

# To save maintenance time, we're trying to keep the files with autogen content in them "pure" - such that absolutely nothing is in the file that can't be regenerated by the script.  In fact we have the command+params to generate the file listed at the top of the script as well.  The only files that have anything defined by hand are the files with the ending "_custom".

# In order to handle variations, which have to be defined inside an existing tile pattern for a kind of tile, we use a bit of a hack/trick.  Only the first match of any pattern is used.  If there are multiple definitions of that pattern, all the rest will be overridden by the first one.  Thus, if we need to override a tile pattern that is otherwise autogenerated, we put it in the "_custom" file, include it before the autogenerated files, and it overrides them.  This comes at the cost of a very minor amount of WML bloat.


@include "data/tiles/decorations-background.png_custom.cfg"

@include "data/tiles/decorations-foreground.png_custom.cfg"



@include "data/tiles/rocks.png_custom.cfg"

@include "data/tiles/rocks.png_cement-blocks.cfg"

@include "data/tiles/rocks-foreground.png_rocks.cfg"

@include "data/tiles/rocks.png_blocks.cfg"

@include "data/tiles/rocks.png_forest-ground.cfg"

@include "data/tiles/rocks.png_interior-house-walls.cfg"

@include "data/tiles/rocks.png_pink-rocks.cfg"

@include "data/tiles/rocks.png_grey-rocks.cfg"





@include "data/tiles/walls.png_custom.cfg"

@include "data/tiles/walls.png_wood-paneling.cfg"

@include "data/tiles/walls.png_stone-background.cfg"

@include "data/tiles/walls.png_fences.cfg"

[/tiles]
