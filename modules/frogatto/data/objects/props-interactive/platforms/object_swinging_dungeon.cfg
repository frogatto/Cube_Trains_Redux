{
id: "object_swinging_dungeon",
hidden_in_game: true,

editor_info: {
	category: "platforms",
	help: "A chain with an object attached to the end of it.
		  Set the position by dragging the x/y values.
		  x controls how wide the swing is. (warning: keep it to the right of the midline)
		  y controls how long the chain is.",
	var: [
		{
			name: "moving_object_type",
			type: "enum",
			value: "'spiked_ball'",
			enum_values: "platform,spiked_ball",
		},
		{
			name: "length",
			type: "y",
			value: "self.y+200",
		},
		{
			name: "arc",
			type: "x",
			value: "self.x+100",
		},
		{
			name: "speed",
			value: "1000",
		},
	],
},
properties:	{
	weight_rotates: "switch(moving_object_type,
						'platform', false,
						'spiked_ball', true)",
	orbit_length: "length(vars.length, vars.arc, self.midpoint_y, self.midpoint_x)",
	act_b:	"orbit_length * 2.5",
},
#on_editor_changed_variable: "[remove_object(chain),remove_object(attached_obj),fire_event('create')]",

on_create: "[
		set(activation_border, act_b),
		[	set(vars.chain, chain),
			set(chain.animation, 'chain'),
			set(chain.z, self.z-1),
			set(chain.activation_border, act_b),
			add_object(chain),
		]	where chain = object('rope_angled_controller', self.x, self.y, 0),
		spawn(type+'.mount',mid_x,mid_y,facing),
		spawn(type+'.'+moving_object_type,x,y,0,
			[set(me.attached_obj, child),
			set(child.x_schedule, map(targets, value[0]-child.img_w/2)),
			set(child.y_schedule, map(targets, value[1]-child.img_h/2)),
			set(child.schedule_speed, 2),
			set(child.activation_border, act_b)]),
			

		] where targets = map( map(range(360/_speed), value*_speed),
			orbit(	midpoint_x,
					midpoint_y,
					sin(decimal(value))*angle+90,
					orbit_length))
		#where arc_size = zip(
			orbit(	mid_x, mid_y, angle, orbit_length),	orbit(	mid_x, mid_y, 90, orbit_length), a - b)#
			
		where _speed = 1000/orbit_length
		where angle = 90-angle_to(self, {'midpoint_y' -> length, 'midpoint_x' -> arc})",
		
on_process: "[
			vars.chain.set_ends(self.midpoint_x+5, #Off-center otherwise for some reason.#
							self.midpoint_y, 
							vars.attached_obj.x+attached_obj.img_w/2, 
							vars.attached_obj.y+attached_obj.img_h/2),
			if(weight_rotates, set(attached_obj.rotate, angle_to(attached_obj, self)+90)),
		]",
animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 210,
	y: 166,
	w: 28,
	h: 28,
	duration: -1,
},
object_type: [
{
	platform_area: [0,10,15,11],
	id: "mount",
	animation: {
		id: "normal",
		image: "props/spiked-ball.png",
		rect: [0,0,15,31],
		duration: -1,
		palettes: "@include data/palettes.cfg:dungeon_palettes",
	},
},
{
	id: "spiked_ball",
		properties: {
			team: "'neutral'",
			attack_damage: 400,
			attack_damage_to_player: "if(level.player.difficulty > level.player.difficulty_casual, 6, 2)",
		},
	animation: {
		id: "normal",
		image: "props/spiked-ball.png",
		rect: [22,6,62,46],
		duration: -1,
		attack_area: "all",
		palettes: "@include data/palettes.cfg:dungeon_palettes",
	},
},
{
	id: "platform",
	on_create: "spawn('object_swinging_dungeon.platform_weight',mid_x,mid_y - 8, facing, [set(child.parent,me),set(vars.attached_obj,child)])",
	on_die: "[remove_object(weight),set(vars.attached_obj,null)]",
	platform_area: [0,11,47,12],
	animation: {
		id: "normal",
		image: "props/spiked-ball.png",
		rect: [0,48,47,79],
		duration: -1,
		palettes: "@include data/palettes.cfg:dungeon_palettes",
	},
},
{
	id: "platform_weight",
	zorder: -2,
	animation: {
		id: "normal",
		image: "props/spiked-ball.png",
		rect: [48,48,79,79],
		duration: -1,
		palettes: "@include data/palettes.cfg:dungeon_palettes",
	},
},
],
}