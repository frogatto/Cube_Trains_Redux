{
id: "ct-train",
zorder: 20,
zsub_order: 4,
always_active: true,
properties: {
	set_zrot: "def(rot) [animation(vars.baseAnimation + '-' + str(integer(rot/10.0))), set(vars.oldRot, rot)]",
},
vars: {
	group: ["train"],
	baseAnimation: "engine",
	yOffset: -15,
	angleOffset: 140,
	on_track: null,
	speed: 10,
	track: 0,
	reversed: 0,
	offset: 0,
	
},
consts: {
	nosave: 1,
	},
on_create: "[fire_event('solve'), fire_event('advance')]",
on_solve: "if(not solved.error, [
		set(midpoint_x, solved.pos[0]),
		set(midpoint_y, solved.pos[1] + vars.yOffset),
		set(vars.on_track, solvedLess.obj),
		set(vars.offset, solvedLess.pixels),
		set(vars.track, solvedLess.track),
		set(vars.reversed, solvedLess.reversed),
		if(not self.vars.lockrot,
			set_zrot(
				if(constrain(-360, rawAngle, 360) = rawAngle, 
					if(rawAngle < 0, 
						360+rawAngle, 
						rawAngle), 
					vars.oldRot
				)	where rawAngle = if(solvedMore.error or solvedLess.error,
						angle(midpoint_x, midpoint_y*1.75, solved.pos[0], (solved.pos[1] + vars.yOffset)*1.75) + angleOffset,
						angle(solvedLess.pos[0], solvedLess.pos[1]*1.75, solvedMore.pos[0], solvedMore.pos[1]*1.75) + angleOffset
						)
				),
			set_zrot(self.vars.lockrot)
			),
		if(vars.on_track != solvedLess.obj, [
			fire_event(vars.on_track, 'train_exit', self),
			fire_event(solvedLess.obj, 'train_enter', self)]
		)],[
		fire_event(vars.on_track, 'train_exit', self),
		fire_event(vars.on_track, 'train_crash', self),
		level.player.train_crashed(self, solved.error),
		remove_object(self),
		]) where solved = vars.on_track.solve(vars.offset+vars.speed+10,vars.track,vars.reversed),
		where solvedLess = vars.on_track.solve(vars.offset+vars.speed,vars.track,vars.reversed),
		where solvedMore = vars.on_track.solve(vars.offset+vars.speed+20,vars.track,vars.reversed)",
on_advance: "[fire_event('solve'), schedule(2, fire_event('advance'))]",
}