{
id: "ct-group-spawner",
prototype: ["ct-block"],
properties: {
	message: "
		'a/o/e or equivalent to edit:\n' + 
		'  Crowd Diameter: {vars.save_val[0]} {if(vars.save_val[0] > 1, tiles, tile)}' + if(sve = 0, ' {selector}', '') + '\n' + 
		'  Crowd Population: {vars.save_val[1]} {if(vars.save_val[1] > 1, people, person)}' + if(sve = 1, ' {selector}', '')
		where selector = 'Ð¤' 
		where sve = vars.save_val_edit",
		
	change_save_val: "def(val) switch(vars.save_val_edit, 
		0, set(vars.save_val, list_replace_elements(vars.save_val, 0, [max(vars.save_val[0]+val,   1)])),
		1, set(vars.save_val, list_replace_elements(vars.save_val, 1, [max(vars.save_val[1]+val*4, 1)])),
		debug('change_save_val error in {self.type}. Index {vars.save_val_edit} is not registered.'))",
	
	set_alpha: "def(val) map(objs, 'obj', set(obj.alpha, val+200 #Sort of nudge the alpha down a level so it matches the blocks below it, since it looks kind of funny otherwise.#)) where objs = vars.overlays + [self]",
	additionalPlacementRequirementsMet: "def(chars) if('ground' in groups, {'ok' -> 1}, {'ok' -> 0, 'error' -> 'There was nothing suitable to spawn a group of people on.'}) where groups = groups_at(list_add(location, [0,0,-1]), chars)",
},

vars: {
	group: ["group-spawner"],
	save_val: [2,25,'general'],
	save_val_edit: 0,
},

on_create: "[%PROTO%, debug('Adding crowd at {location} w/ {vars.s}.')]",

on_ctrl_select: "set(save_val_edit, (save_val_edit+1)%(size(save_val)-1))",

animation: {
	id: "normal",
	image: "experimental/cube trains/0148.png",
	rect: [0,0,255,255],
},
}
