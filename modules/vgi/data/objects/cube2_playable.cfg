{
	id: "cube2_playable",
	is_human: true,
	hitpoints: 4,
	editor_info: { category: "player" },
    vars: { selected: false },
    consts: {
        tile_size_x: 32,
        tile_size_y: 32,
        search_radius: 96,
    },
    properties: {
        pt_in_rect: "def (px, py, rx, ry, rw, rh) 
            if(px >= rx and px < rx+rw and py >= ry and py < ry+rh, true, false)",
        snap_pt: "def(x,y) [x-x%consts.tile_size_x, y-y%consts.tile_size_y]",
    },
	animation: [
		{
            id: "stand",
            image: "cube.png",
            rect: [0,0,15,15]
		}
	],
	on_load: "[
        debug('Loaded level graph'), 
        set(vars.level_graph, 
            weighted_graph(
                create_graph_from_level(level, consts.tile_size_x, consts.tile_size_y), 
                distance(a,b)))
    ]",
    on_process: "if(not tmp.possible_moves,
        set(tmp.possible_moves, path_cost_search(vars.level_graph, snap_pt(x,y), consts.search_radius)))",
	"on_mouse_up*": "
        if(mouse_button=1 and tmp.possible_moves,
            map(tmp.possible_moves, v, if(pt_in_rect(mouse_x,mouse_y, v[0],v[1],consts.tile_size_x,consts.tile_size_y),
            [set(x,mouse_x), set(y,mouse_y), set(tmp.possible_moves,null)]))
        )
    ",
    on_draw: "if(tmp.possible_moves, 
        map(tmp.possible_moves, v, 
            debug_rect(v[0]+8, v[1]+8, consts.tile_size_x-16, consts.tile_size_y-16)))",
}
