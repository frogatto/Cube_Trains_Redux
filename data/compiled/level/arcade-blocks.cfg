{
	"air_resistance": 20,
	"auto_move_camera": [0,0],
	"character": [
		{
			"_addr": "0xadfc39d0",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"is_human": 1,
			"label": "_5024de5b",
			"objects_destroyed": {
				"level": "arcade-blocks.cfg",
				"objects": []
			},
			"time_in_frame": 0,
			"type": "frogatto_playable",
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 224,
			"y": 416
		},
		{
			"_addr": "0xadfc4250",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_168efe17",
			"on_add_hole": "[set(vars.seq.vars.skip_count, 2d3),
	              map(range(8 + 1d6), fire_event(vars.seq, 'add_block_right'))]
	  where seg_length = 8",
			"on_cleanup_blocks": "if(vars.seq.vars.blocks.size > 200, vars.seq.remove_blocks(vars.seq.vars.blocks.size - 200))",
			"on_create": "[if(level.in_editor, die()), swallow_event(),
	            set(vars.starting_pos, level.player.x),
	            set(alpha, 0),
				set(level.dimensions, [0, 0, 1024, 600]),
				set(vars.seq, seq),
				add_object(seq),
	            add_level_module('0', 0, 0)] where seq = object('retracting_block_sequence', 448 + 16, 448 + 32, 1)",
			"on_extend_sequence": "[add(level.player.difficulty, 1), fire_event('new_challenge_' + new_challenge), set(vars.current_challenge, new_challenge), fire_event('cleanup_blocks')] where new_challenge = choose(filter(vars.challenge_choices, 'c', c != vars.current_challenge))",
			"on_new_challenge_aiming_cannons": "[
	           map(range(40), fire_event(vars.seq, 'add_block_right')),
			   add_level_module('3', vars.seq.xpos-16, vars.seq.ypos-11*32)]",
			"on_new_challenge_ants": "[
	           map(range(40), fire_event(vars.seq, 'add_block_right')),
			   add_level_module('4', vars.seq.xpos-16, vars.seq.ypos-14*32)]",
			"on_new_challenge_cannon": "[
	           map(range(10), fire_event(vars.seq, 'add_block_right')),
			   map(range(3), fire_event(vars.seq, 'add_block_up')),
	           map(range(3), fire_event(vars.seq, 'add_block_right')),
			   map(range(3), fire_event(vars.seq, 'add_block_up')),
	           map(range(3), fire_event(vars.seq, 'add_block_right')),
			   map(range(3), fire_event(vars.seq, 'add_block_down')),
	           map(range(3), fire_event(vars.seq, 'add_block_right')),
			   map(range(3), fire_event(vars.seq, 'add_block_up')),
	           map(range(3), fire_event(vars.seq, 'add_block_right')),
			   map(range(3), fire_event(vars.seq, 'add_block_down')),
	           map(range(3), fire_event(vars.seq, 'add_block_right')),
			   map(range(3), fire_event(vars.seq, 'add_block_up')),
	           map(range(10), fire_event(vars.seq, 'add_block_right')),
	           add_level_module('6', vars.seq.xpos-16, vars.seq.ypos-13*32)]",
			"on_new_challenge_downward_spikes": "[
	           map(range(40), fire_event(vars.seq, 'add_block_right')),
			   add_level_module('5', vars.seq.xpos-16, vars.seq.ypos-14*32)]",
			"on_new_challenge_holes": "[
	      map(range(3d3), 'n', fire_event('add_hole'))
	]",
			"on_new_challenge_normal": "[
	            map(range(3), fire_event(vars.seq, 'add_block_up')),
	            map(range(40), fire_event(vars.seq, 'add_block_right'))]",
			"on_new_challenge_snake": "[
	      map(range(6), fire_event(vars.seq, 'add_block_right')),
	      map(range(up_tick), fire_event(vars.seq, 'add_block_up')),
	      map(range(6), fire_event(vars.seq, 'add_block_left')),
	      map(range(up_tick), fire_event(vars.seq, 'add_block_up')),
	      map(range(6), fire_event(vars.seq, 'add_block_right')),
	      map(range(up_tick), fire_event(vars.seq, 'add_block_up')),
	      map(range(6), fire_event(vars.seq, 'add_block_left')),
	      map(range(up_tick), fire_event(vars.seq, 'add_block_up')),
	      map(range(20), fire_event(vars.seq, 'add_block_right'))
	    ] where up_tick = if(level.player.difficulty > 20, 4, 3)",
			"on_new_challenge_snake_down": "[
	      map(range(6), fire_event(vars.seq, 'add_block_right')),
	      map(range(4), fire_event(vars.seq, 'add_block_down')),
	      map(range(6), fire_event(vars.seq, 'add_block_left')),
	      map(range(4), fire_event(vars.seq, 'add_block_down')),
	      map(range(6), fire_event(vars.seq, 'add_block_right')),
	      map(range(4), fire_event(vars.seq, 'add_block_down')),
	      map(range(6), fire_event(vars.seq, 'add_block_left')),
	      map(range(4), fire_event(vars.seq, 'add_block_down')),
	      map(range(20), fire_event(vars.seq, 'add_block_right'))
	    ]",
			"on_new_challenge_spike_ball": "[
	           map(range(40), fire_event(vars.seq, 'add_block_right')),
			   add_level_module('1', vars.seq.xpos-16, vars.seq.ypos - 13*32)]",
			"on_new_challenge_spikes": "[
	           map(range(40), fire_event(vars.seq, 'add_block_right')),
			   add_level_module('2', vars.seq.xpos-16, vars.seq.ypos-14*32)]",
			"on_player_death": "if(level.player.score > registry.arcade_blocks_high_score,
	    [set(registry.arcade_blocks_high_score, level.player.score),
		 set(globals.arcade_msg, [~You got {level.player.score} points in the Blocks Run!~,
		                          ~This is a new high score!~])],
		 set(globals.arcade_msg, [~You got {level.player.score} points in the Blocks Run!~,
		                          ~The high score is {registry.arcade_blocks_high_score}.~]))",
			"on_process": "[set(level.player.score, max(level.player.score,(level.player.x - vars.starting_pos)/10)),

	   #here we keep the player's hitpoints at 10, but anytime the player#
	   #gets hurt, we reduce the size of the platform the player is on by 1.#
	   if(level.player.hitpoints < 10,
		  [if(vars.seq.vars.platform_length > 0, add(vars.seq.vars.platform_length, -1)), if(level.player.y < level.dimensions[3], set(level.player.hitpoints, 10))]),
	  if(level.player.midpoint_x > vars.cosmic_shift_threshhold, [cosmic_shift(-vars.cosmic_shift_amount, 0),
	    add(vars.starting_pos, -vars.cosmic_shift_amount),
	    add(vars.left_edge, -vars.cosmic_shift_amount), add(vars.right_edge, -vars.cosmic_shift_amount)],

	  if(level.dimensions[2] < level.player.x + 800 and level.player.is_standing,
	    [set(level.dimensions, [level.dimensions[0],
		                        level.player.y - 600,
								level.player.x + 800,
								max(800, level.player.y + 800)]),
		 if(vars.seq.vars.xpos < level.dimensions[2]+64,
		    fire_event('extend_sequence'))
	     ])),
	swallow_event()]",
			"on_recycle_segment": "swallow_event()",
			"time_in_frame": 0,
			"type": "level_controller_neverending",
			"vars": {
				"challenge_choices": ["cannon","downward_spikes","holes","snake","snake_down","aiming_cannons","ants","spikes","spike_ball"],
				"cosmic_shift_amount": 8192,
				"cosmic_shift_threshhold": 16384,
				"current_challenge": "",
				"last_xpos": 0,
				"left_edge": 0,
				"right_edge": 0,
				"scroll_amount": 0,
				"scroll_speed": 0,
				"scroll_speed_cap": 0,
				"scroll_speed_incr": 0,
				"scroll_xpos": 0,
				"segments": [],
				"starting_pos": 0
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": -128,
			"y": 352
		},
		{
			"_addr": "0xab209b88",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_4fc4d600",
			"on_triggered": "[set(find(level.chars, type = 'retracting_block_sequence').vars.activated, 1)]",
			"time_in_frame": 0,
			"type": "level_controller_onetime",
			"vars": {
				"last_triggered": -400,
				"x2_bound": 730,
				"x_bound": 524,
				"y2_bound": 496,
				"y_bound": 188
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": -128,
			"y": 288
		},
		{
			"_addr": "0xab20a838",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_23c1c5b9",
			"time_in_frame": 0,
			"type": "chain_base",
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 1344,
			"y": 128
		},
		{
			"_addr": "0xab20e420",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_5c17530c",
			"time_in_frame": 0,
			"type": "retracting_spike_machine",
			"vars": {
				"delay_ticks": 0,
				"extended_ticks": 50,
				"is_upside_down": 0,
				"retract_ticks": 40,
				"retracted_ticks": 80,
				"stab_ticks": 4
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 2048,
			"y": 352
		},
		{
			"_addr": "0xab21e290",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_1d91467c",
			"time_in_frame": 0,
			"type": "retracting_spike_machine",
			"vars": {
				"delay_ticks": 0,
				"extended_ticks": 50,
				"is_upside_down": 0,
				"retract_ticks": 40,
				"retracted_ticks": 80,
				"stab_ticks": 4
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 2080,
			"y": 352
		},
		{
			"_addr": "0xab220498",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_1ddbc66",
			"time_in_frame": 0,
			"type": "retracting_spike_machine",
			"vars": {
				"delay_ticks": 0,
				"extended_ticks": 50,
				"is_upside_down": 0,
				"retract_ticks": 40,
				"retracted_ticks": 80,
				"stab_ticks": 4
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 2112,
			"y": 352
		},
		{
			"_addr": "0xab220928",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_27179c0b",
			"time_in_frame": 0,
			"type": "retracting_spike_machine",
			"vars": {
				"delay_ticks": 0,
				"extended_ticks": 50,
				"is_upside_down": 0,
				"retract_ticks": 40,
				"retracted_ticks": 80,
				"stab_ticks": 4
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 2400,
			"y": 352
		},
		{
			"_addr": "0xab220db8",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_53280662",
			"time_in_frame": 0,
			"type": "retracting_spike_machine",
			"vars": {
				"delay_ticks": 0,
				"extended_ticks": 50,
				"is_upside_down": 0,
				"retract_ticks": 40,
				"retracted_ticks": 80,
				"stab_ticks": 4
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 2432,
			"y": 352
		},
		{
			"_addr": "0xab221248",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_57ce66b4",
			"time_in_frame": 0,
			"type": "retracting_spike_machine",
			"vars": {
				"delay_ticks": 0,
				"extended_ticks": 50,
				"is_upside_down": 0,
				"retract_ticks": 40,
				"retracted_ticks": 80,
				"stab_ticks": 4
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 2464,
			"y": 352
		},
		{
			"_addr": "0xab2216d8",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_15b71329",
			"time_in_frame": 0,
			"type": "ant_red",
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 3808,
			"y": 141
		},
		{
			"_addr": "0xab239940",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 0,
			"label": "_706b674e",
			"time_in_frame": 0,
			"type": "ant_red",
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 3872,
			"y": 141
		},
		{
			"_addr": "0xab2222a8",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_4a66051",
			"time_in_frame": 0,
			"type": "ant_red",
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 4032,
			"y": 141
		},
		{
			"_addr": "0xab222920",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_6b057295",
			"time_in_frame": 0,
			"type": "ant_red",
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 4128,
			"y": 141
		},
		{
			"_addr": "0xab2b8428",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 0,
			"label": "_2771ac80",
			"time_in_frame": 0,
			"type": "ant_red",
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 4224,
			"y": 141
		},
		{
			"_addr": "0xab228130",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_e0bb885",
			"time_in_frame": 0,
			"type": "ant_red",
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 4352,
			"y": 141
		},
		{
			"_addr": "0xab225110",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 0,
			"label": "_19a52566",
			"time_in_frame": 0,
			"type": "ant_red",
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 4576,
			"y": 141
		},
		{
			"_addr": "0xab227ae0",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_69d3947c",
			"min_difficulty": 20,
			"time_in_frame": 0,
			"type": "chain_base",
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 1696,
			"y": 128
		},
		{
			"_addr": "0xab2b9210",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_684eed59",
			"time_in_frame": 0,
			"type": "retracting_spike_machine",
			"vars": {
				"delay_ticks": 0,
				"extended_ticks": 30,
				"is_upside_down": 1,
				"retract_ticks": 40,
				"retracted_ticks": 80,
				"stab_ticks": 4
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 4896,
			"y": 320
		},
		{
			"_addr": "0xab2b96a0",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_e0bb885",
			"time_in_frame": 0,
			"type": "retracting_spike_machine",
			"vars": {
				"delay_ticks": 0,
				"extended_ticks": 30,
				"is_upside_down": 1,
				"retract_ticks": 40,
				"retracted_ticks": 80,
				"stab_ticks": 4
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 4928,
			"y": 320
		},
		{
			"_addr": "0xab2b9b30",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_5c17530c",
			"time_in_frame": 0,
			"type": "retracting_spike_machine",
			"vars": {
				"delay_ticks": 0,
				"extended_ticks": 30,
				"is_upside_down": 1,
				"retract_ticks": 40,
				"retracted_ticks": 80,
				"stab_ticks": 4
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 5184,
			"y": 320
		},
		{
			"_addr": "0xab2b9fc0",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_28677b7c",
			"time_in_frame": 0,
			"type": "retracting_spike_machine",
			"vars": {
				"delay_ticks": 0,
				"extended_ticks": 30,
				"is_upside_down": 1,
				"retract_ticks": 40,
				"retracted_ticks": 80,
				"stab_ticks": 4
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 5216,
			"y": 320
		},
		{
			"_addr": "0xab2ba450",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_6dc45e83",
			"min_difficulty": 14,
			"time_in_frame": 0,
			"type": "retracting_spike_machine",
			"vars": {
				"delay_ticks": 0,
				"extended_ticks": 30,
				"is_upside_down": 1,
				"retract_ticks": 40,
				"retracted_ticks": 80,
				"stab_ticks": 4
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 4960,
			"y": 320
		},
		{
			"_addr": "0xab2ba8e0",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_539f7f12",
			"min_difficulty": 14,
			"time_in_frame": 0,
			"type": "retracting_spike_machine",
			"vars": {
				"delay_ticks": 0,
				"extended_ticks": 30,
				"is_upside_down": 1,
				"retract_ticks": 40,
				"retracted_ticks": 80,
				"stab_ticks": 4
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 4992,
			"y": 320
		},
		{
			"_addr": "0xab2bad70",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_567bd50a",
			"min_difficulty": 18,
			"time_in_frame": 0,
			"type": "retracting_spike_machine",
			"vars": {
				"delay_ticks": 0,
				"extended_ticks": 30,
				"is_upside_down": 1,
				"retract_ticks": 40,
				"retracted_ticks": 80,
				"stab_ticks": 4
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 5248,
			"y": 320
		},
		{
			"_addr": "0xab2bb200",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_327fac77",
			"min_difficulty": 18,
			"time_in_frame": 0,
			"type": "retracting_spike_machine",
			"vars": {
				"delay_ticks": 0,
				"extended_ticks": 30,
				"is_upside_down": 1,
				"retract_ticks": 40,
				"retracted_ticks": 80,
				"stab_ticks": 4
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 5280,
			"y": 320
		},
		{
			"_addr": "0xab2bb690",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_3da97044",
			"time_in_frame": 0,
			"type": "cannon",
			"vars": {
				"load": 0,
				"loading_time": 10,
				"proj_velocity": 8
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 5696,
			"y": 151
		},
		{
			"_addr": "0xab2bff18",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_4c54e2c3",
			"time_in_frame": 0,
			"type": "aiming_cannon",
			"vars": {
				"is_upside_down": 1,
				"load": 0,
				"loading_time": 10
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 3360,
			"y": 204
		},
		{
			"_addr": "0xab2ca840",
			"current_frame": "normal",
			"custom": "yes",
			"face_right": 1,
			"label": "_48249dbf",
			"time_in_frame": 0,
			"type": "aiming_cannon",
			"vars": {
				"is_upside_down": 1,
				"load": 0,
				"loading_time": 10
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 3072,
			"y": 204
		}
	],
	"compiled_tiles": {
		"tiles": "12o,136,138,136,12m,
13E,12T,12T,12T,13B,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12o,136,136,138,136,136,12m,,,,,12o,138,136,138,136,138,12m,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12n,137,135,135,135,135,137,137,137,137,137,137,12l,
13D,12T,12T,12T,13C,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13D,12T,12T,12T,12T,12T,13C,,,,,13D,12T,12T,12T,12T,12T,13B,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12o,138,136,136,136,136,138,138,138,138,138,138,12m,
13D,12T,12T,12T,13C,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13D,12T,12T,12T,12T,12T,13C,,,,,13D,12T,12T,12T,12T,12T,13B,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13D,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,13C,
13D,12T,12T,12T,13C,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13D,12T,12T,12T,12T,12T,13C,,,,,13D,12T,12T,12T,12T,12T,13B,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13D,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,13C,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12n,135,137,137,137,135,137,137,137,137,135,137,137,135,137,135,12l,
13D,12T,12T,12T,13C,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,134,13A,13A,139,13A,13A,12p,,,,,134,139,13A,139,13A,139,12p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13D,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,13C,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12o,136,138,138,138,136,138,138,138,138,136,138,138,136,138,136,12m,
13E,12T,12T,12T,13B,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13E,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,13B,,,,,,,,,,,12n,137,137,137,12l,,,,12n,137,135,135,135,135,12l,,,,12n,135,135,137,137,137,137,12l,,,,,,,,13E,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,13C,
13D,12T,12T,12T,13C,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,134,13A,139,139,139,139,13A,13A,13A,13A,13A,13A,12p,,,,,,,,,,,12o,138,138,138,12m,,,,12o,138,136,136,136,136,12m,,,,12o,136,136,138,138,138,138,12m,,,,,,,,13D,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,13B,,,,,,,,,,,12n,135,12l,
13E,12T,12T,12T,13B,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13D,12T,12T,12T,13B,,,,13E,12T,12T,12T,12T,12T,13B,,,,13D,12T,12T,12T,12T,12T,12T,13C,,,,,,,,13E,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,13C,,,,,,,,,,,12o,136,12m,
13E,12T,12T,12T,13B,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,134,139,139,139,12p,,,,134,139,13A,13A,13A,13A,12p,,,,134,13A,13A,139,139,139,139,12p,,,,,,,,13E,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,13C,,,,,,,,,,,134,139,12p,
13E,12T,12T,12T,13B,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13E,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,13C,
13D,12T,12T,12T,13C,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12n,137,137,135,137,135,12l,,,,,12n,137,137,135,135,135,12l,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13D,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,13B,
13E,12T,12T,12T,13B,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12o,138,138,136,138,136,12m,,,,,12o,138,138,136,136,136,12m,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,134,13A,139,139,139,13A,139,139,139,139,13A,139,139,13A,139,13A,12p,
13D,12T,12T,12T,13C,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13E,12T,12T,12T,12T,12T,13C,,,,,13E,12T,12T,12T,12T,12T,13C,
13E,12T,12T,12T,13B,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,134,13A,13A,139,13A,139,12p,,,,,134,13A,13A,139,139,139,12p,
13D,12T,12T,12T,12d,12e,137,137,135,137,137,135,135,137,135,12l,
13D,12T,12T,12T,12f,12g,138,138,136,138,138,136,136,138,136,12m,
13E,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,13C,
13E,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,13C,
13E,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,13C,
13D,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,12T,13B,
134,139,13A,139,13A,13A,13A,13A,139,13A,13A,139,139,13A,139,12p,",
		"x": -64,
		"y": -32,
		"zorder": -10
	},
	"dimensions": [0,0,6495,599],
	"gui": "arcade",
	"id": "arcade-blocks.cfg",
	"music": "",
	"num_compiled_tiles": 646,
	"opaque_rects": "4864,128,5343,383:-64,-32,95,639:3072,32,3423,223:96,480,415,671:",
	"preloads": "",
	"segment_height": 0,
	"segment_width": 928,
	"serialized_objects": {
		"character": []
	},
	"tile_map": [
		{
			"tiles": "",
			"unique_tiles": "",
			"variations": "",
			"x": -96,
			"x_speed": 100,
			"y": -32,
			"y_speed": 100,
			"zorder": -10
		},
		{
			"tiles": "",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": 0
		},
		{
			"tiles": "",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": 20
		},
		{
			"tiles": "",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": 50
		}
	],
	"title": "Blocks Run",
	"vars": {
	},
	"version": "1.2",
	"water_resistance": 100,
	"xscale": 100,
	"yscale": 100
}