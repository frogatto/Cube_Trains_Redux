[prototype]
feet_width="4"
friction="1000"
has_feet="no"
hitpoints="2"
id="white_shooting_flower"
mass="5"
on_add_object_fail="[if(collide_with.team != team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]"
on_bounced_on="[if(jumped_on_by.mass >= 1000, die(), animation('spring'))]"
on_change_animation_failure="fire_event('solidity_fail')"
on_change_solid_dimensions_fail="fire_event('solidity_fail')"
on_collide_object_body="if(collide_with.team != team and collide_with_area in ['attack'], get_hit_by(collide_with))"
on_die="[score(level,points_value), spawn_item(self), death_burst_tracked(self)]"
on_end_hurt_anim="animation('normal')"
on_end_normal_anim="if(facing != desired_facing, animation('turn'), if(1d3=1,animation('shoot'),animation('normal'))) where desired_facing = if(level.player.x < x, -1, 1)"
on_end_shoot_anim="animation('normal')"
on_end_spring_anim="animation('normal')"
on_end_turn_anim="[facing(if(level.player.x < x, -1, 1)), animation('normal')]"
on_enter_anim="set(tmp, 'already_hit', [])"
on_process="[
	   set(rotate, -facing*((midpoint_y - level.player.midpoint_y)*55)/
	     max(abs(midpoint_x - level.player.midpoint_x), abs(midpoint_y - level.player.midpoint_y))),
	   set(x,x+  if(3d4 >3, if(target_x > midpoint_x,1,-1)))]"
on_shoot="[spawn('pollen_ball_weightless', midpoint_x, midpoint_y, facing,
	      [set(zorder, zorder-1),
		   set(velocity_x,400*facing),
	       set(velocity_y, -(400*(midpoint_y - level.player.midpoint_y))/
		                   max(abs(midpoint_x - level.player.midpoint_x), abs(midpoint_y - level.player.midpoint_y)))]),sound('FlowerShot.ogg')]"
on_solidity_fail="if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1,60),
			   resolve_solid(me,2,-1,250),
			   resolve_solid(me,-2,-1,250),
			   resolve_solid(me,0,-1,500),
			   set(tmp.in_solidity_fail, 0)
			  ])"
on_surface_damage="die()"
solid_area="20,6,52,24"
springiness="100"
timer_frequency="2"
traction="1000"
traction_in_air="1000"
zorder="8"
	[consts]
	basic_type="'white_shooting_flower'"
	flinch_threshold="3"
	frogourmet_tag="'white_shooting_flower'"
	[/consts]

	[properties]
	attack_damage="0"
	attack_knockback="0"
	cause_flinch="def(collide_with) execute(me, [
			add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y),
			if('hurt' in available_animations,set(me.animation, 'hurt'))
			])"
	damage_cooldown="0"
	display_hurt_visuals="def() execute(me, 
					[
					hurt_flash_sequence()
					])"
	display_posthit_invincibility_flash_sequence="def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )"
	flash_bright="def() [set(me.brightness, 1023)]"
	flash_off="def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]"
	flash_red="def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]"
	get_hit_by="def(collide_with) execute(me, [
						if((not is_invincible) and (collide_with.attack_damage > 0) and (collide_with.attack_damage >= consts.armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])"
	handle_damage="def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))"
	handle_damage_type="def(collide_with) null() #virtual#"
	handle_flinch="def(collide_with) 
			execute(me, if(collide_with.attack_damage >= consts.flinch_threshold, cause_flinch(collide_with)))"
	handle_knockback="def(collide_with) execute(me,add(velocity_x, collide_with.facing * collide_with.attack_knockback))"
	hurt_flash_sequence="def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]"
	hurt_velocity_x="-200"
	hurt_velocity_y="-400"
	is_invincible="if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)"
	is_invincible_posthit="if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)"
	[/properties]

	[vars]
	damage="1"
	points_value="12"
	[/vars]

	[properties]
	hurt_velocity_x="0"
	hurt_velocity_y="0"
	team="'evil'"
	[/properties]

	[animation]
	body_area="all"
	duration="10"
	frame_info="23,5,15,5,430,470,33,18,24,3,13,2,463,470,34,23,25,1,13,0,497,470,33,27"
	frames="3"
	frames_per_row="1"
	id="normal"
	image="compiled-2.png"
	rect="407,465,477,492"
	[/animation]

	[animation]
	body_area="all"
	duration="10"
	frame_info="23,5,15,5,430,470,33,18,24,3,13,2,463,470,34,23,25,1,13,0,497,470,33,27"
	frames="3"
	frames_per_row="1"
	id="spring"
	image="compiled-2.png"
	rect="407,465,477,492"
	[/animation]

	[animation]
	body_area="all"
	duration="6"
	events="6:shoot"
	frame_info="19,5,19,5,788,654,33,18,18,2,21,2,821,654,32,24,20,5,1,6,853,654,50,17,21,5,13,5,903,654,37,18"
	frames="4"
	frames_per_row="1"
	id="shoot"
	image="compiled-2.png"
	rect="769,649,839,676"
	[/animation]

	[animation]
	body_area="all"
	duration="10"
	frame_info="23,1,23,1,0,577,25,26"
	frames="1"
	id="turn"
	image="compiled-2.png"
	rect="-23,576,47,603"
	[/animation]

	[animation]
	body_area="all"
	duration="18"
	frame_info="23,5,15,5,228,765,33,18"
	frames="1"
	id="hurt"
	image="compiled-2.png"
	rect="205,760,275,787"
	[/animation]

	[properties]
	team="'evil'"
	[/properties]

[/prototype]

