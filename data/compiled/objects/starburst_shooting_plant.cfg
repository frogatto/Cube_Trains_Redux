{
	"animation": [
		{
			"accel_y": 0,
			"body_area": "all",
			"duration": 6,
			"frame_info": [2,3,2,0,588,756,23,24,2,4,2,0,611,756,23,23,1,5,1,0,634,756,25,22,1,6,1,0,659,756,25,21],
			"frames": 4,
			"frames_per_row": 4,
			"id": "normal",
			"image": "compiled-2.png",
			"rect": [586,753,612,779],
			"reverse": true
		},
		{
			"accel_y": 0,
			"body_area": "all",
			"duration": 6,
			"frame_info": [2,18,2,0,203,405,27,15,4,9,4,0,230,405,23,24,6,6,6,0,253,405,19,27,6,6,6,0,272,405,19,27,6,4,6,0,291,405,19,29],
			"frames": 5,
			"frames_per_row": 5,
			"id": "hurt",
			"image": "compiled-2.png",
			"rect": [201,387,231,419],
			"solid_area": [6,19,25,33]
		},
		{
			"accel_y": 0,
			"body_area": "all",
			"duration": 4,
			"events": "4:shoot",
			"frame_info": [6,6,6,0,167,405,19,27,7,4,7,0,186,405,17,29],
			"frames": 2,
			"frames_per_row": 2,
			"id": "shoot",
			"image": "compiled-2.png",
			"rect": [161,399,191,431],
			"reverse": false,
			"solid_area": [6,19,25,33]
		},
		{
			"accel_y": 0,
			"body_area": "all",
			"duration": 4,
			"frame_info": [2,18,2,0,535,960,27,15,2,18,2,0,562,960,27,15],
			"frames": 2,
			"frames_per_row": 2,
			"id": "chargeup",
			"image": "compiled-2.png",
			"rect": [533,942,563,974],
			"reverse": true,
			"solid_area": [6,19,25,33]
		},
		{
			"accel_y": 0,
			"body_area": "all",
			"duration": 6,
			"frame_info": [4,9,4,0,476,756,23,24,3,15,3,0,499,756,25,18],
			"frames": 2,
			"frames_per_row": 2,
			"id": "prepare",
			"image": "compiled-2.png",
			"rect": [472,747,502,779],
			"reverse": false,
			"solid_area": [6,19,25,33]
		}
	],
	"consts": {
		"basic_type": "super_shooting_plant",
		"frogourmet_tag": "super_shooting_plant"
	},
	"editor_info": {
		"category": "plants",
		"help": "says to leaf him alone!",
		"var": [
			{
				"name": "normal_repeat",
				"value": 1
			},
			{
				"name": "chargeup_repeat",
				"value": 1
			}
		]
	},
	"feet_width": 4,
	"friction": 1000,
	"hitpoints": 200,
	"id": "starburst_shooting_plant",
	"mass": 5,
	"object_type": [
		{
			"affected_by_currents": true,
			"always_active": true,
			"animation": {
				"accel_y": 20,
				"attack_area": "all",
				"body_area": "all",
				"duration": 2,
				"frames": 4,
				"id": "normal",
				"image": "enemies/starburst-shooting-plant.png",
				"pad": 3,
				"rect": [1,157,18,174],
				"velocity_x": 0
			},
			"id": "stage_1_pollen_ball",
			"object_level_collisions": true,
			"on_create": "[schedule(50,fire_event('pop')),add_particles('particles')]",
			"on_die": "[set(type,'starburst_shooting_plant.particle_system_holder'),set(particles.generation_rate,0)]",
			"on_end_anim": "animation(animation)",
			"on_pop": "[
			spawn('pollen_impact_particle',midpoint_x,midpoint_y,0),
			transform(range(0,18),
				spawn(inside_type, midpoint_x, midpoint_y, facing, [set(velocity_x, 300*sin(v)+velocity_x), set(velocity_y, 300*cos(v)-200*down+velocity_y)])
				where v = v*20
				),
			die()]",
			"particle_system": {
				"colors": ["b0f555ff","b0f555ff","4cd02c55","4cd02c55","4cd02c55"],
				"dot_rounded": true,
				"dot_size": 5,
				"generation_rate_millis": 250,
				"id": "particles",
				"pos_x": 20,
				"pos_y": 20,
				"time_to_live": 12,
				"time_to_live_rand": 24,
				"type": "point",
				"velocity_x": -1500,
				"velocity_x_rand": 3000,
				"velocity_y": -1500,
				"velocity_y_rand": 3000
			},
			"properties": {
				"attack_damage": 2,
				"team": "'evil'"
			},
			"prototype": ["shot"],
			"vars": {
				"inside_type": "Location Y3tuk9OA: object type not set by parent"
			}
		},
		{
			"affected_by_currents": true,
			"always_active": true,
			"animation": {
				"accel_y": 20,
				"attack_area": "all",
				"body_area": "all",
				"duration": 2,
				"frames": 8,
				"id": "normal",
				"image": "enemies/starburst-shooting-plant.png",
				"pad": 3,
				"rect": [1,144,10,153],
				"reverse": true
			},
			"id": "stage_2_pollen_ball",
			"object_level_collisions": true,
			"on_create": "[set(time_in_animation,1d14),add_particles('particles'),schedule(250,die())]",
			"on_die": "[spawn('starburst_shooting_plant.splash_effect',midpoint_x,midpoint_y,0)]",
			"on_end_anim": "animation(animation)",
			"on_enter_water": "[add_wave(midpoint_x, y2,  500, velocity_y, 10*velocity_y, 100, 100),
						 add_wave(midpoint_x, y2, -500, velocity_y, 10*velocity_y, 100, 100), die()]",
			"on_timer": "set(rotate, sin(cycle)*10)",
			"particle_system": {
				"colors": ["b0f555ff","b0f555ff","4cd02c55","4cd02c55","4cd02c55"],
				"dot_rounded": true,
				"dot_size": 3,
				"generation_rate_millis": 250,
				"id": "particles",
				"pos_x": 10,
				"pos_y": 10,
				"time_to_live": 12,
				"time_to_live_rand": 24,
				"type": "point",
				"velocity_x": -1500,
				"velocity_x_rand": 3000,
				"velocity_y": -1500,
				"velocity_y_rand": 3000
			},
			"prototype": ["shot"],
			"timer_frequency": 4,
			"zorder": 10
		},
		{
			"animation": {
				"duration": 3,
				"frames": 8,
				"frames_per_row": 4,
				"id": "normal",
				"image": "enemies/starburst-shooting-plant.png",
				"pad": 3,
				"rect": [1,178,24,201]
			},
			"id": "splash_effect",
			"on_end_anim": "die()"
		},
		{
			"animation": {
				"id": "normal",
				"image": "enemies/starburst-shooting-plant.png",
				"rect": [1,178,2,179]
			},
			"id": "particle_system_holder",
			"on_create": "schedule(20,die())",
			"serializable": false
		}
	],
	"on_add_object_fail": "[if(collide_with.team != team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]",
	"on_bounced_on": "[if(jumped_on_by.mass >= 1000, die(), animation('spring'))]",
	"on_change_animation_failure": "fire_event('solidity_fail')",
	"on_change_solid_dimensions_fail": "fire_event('solidity_fail')",
	"on_collide_object_body": "if(collide_with.team != team and collide_with_area in ['attack'], get_hit_by(collide_with))",
	"on_die": "[score(level,points_value), spawn_item(self), death_burst_tracked(self)]",
	"on_end_chargeup_anim": "if(tmp.anim_repeat > consts.vars,
			[animation('shoot'), set(tmp.anim_repeat, 0)],
			[animation('chargeup'), add(tmp.anim_repeat, 1)])",
	"on_end_hurt_anim": "animation('normal')",
	"on_end_normal_anim": "if(tmp.anim_repeat > vars.normal_repeat,
			[animation('prepare'), set(tmp.anim_repeat, 0)],
			[animation('normal'), add(tmp.anim_repeat, 1)])",
	"on_end_prepare_anim": "animation('chargeup')",
	"on_end_shoot_anim": "animation('normal')",
	"on_enter_anim": "set(tmp, 'already_hit', [])",
	"on_shoot": "[
		add_object(obj),
		set(obj.velocity_y, -500*down-500),
		set(obj.down, down),
		] where obj = object(
		'{self.type}.stage_1_pollen_ball', 
		midpoint_x, 
		midpoint_y, 
		facing, 
		{	'inside_type' -> '{self.type}.stage_2_pollen_ball',
		})",
	"on_solidity_fail": "if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1,60),
			   resolve_solid(me,2,-1,250),
			   resolve_solid(me,-2,-1,250),
			   resolve_solid(me,0,-1,500),
			   resolve_solid(me),
			   set(tmp.in_solidity_fail, 0)
			  ])",
	"on_surface_damage": "die()",
	"properties": {
		"attack_damage": 0,
		"attack_knockback": 0,
		"cause_flinch": "def(collide_with) execute(me, [
			add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y),
			if('hurt' in available_animations,set(me.animation, 'hurt'))
			])",
		"damage_cooldown": 0,
		"difficulty_casual": 0,
		"difficulty_intense": 1,
		"difficulty_unfair": 2,
		"display_hurt_visuals": "def() execute(me, 
					[
					hurt_flash_sequence()
					])",
		"display_posthit_invincibility_flash_sequence": "def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )",
		"flash_bright": "def() [set(me.brightness, 1023)]",
		"flash_off": "def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]",
		"flash_red": "def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]",
		"flinch_threshold": 3,
		"get_hit_by": "def(collide_with) execute(me, [
						if((not is_invincible) and (collide_with.attack_damage > 0) and (collide_with.attack_damage >= armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])",
		"handle_damage": "def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))",
		"handle_damage_type": "def(collide_with) null #virtual#",
		"handle_flinch": "def(collide_with) 
			execute(me, if(collide_with.attack_damage >= flinch_threshold, cause_flinch(collide_with)))",
		"handle_knockback": "def(collide_with) null",
		"hurt_flash_sequence": "def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]",
		"hurt_velocity_x": 0,
		"hurt_velocity_y": 0,
		"is_invincible": "if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)",
		"is_invincible_posthit": "if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)",
		"standard_thrown_damage": 400,
		"team": "'evil'"
	},
	"solid_area": [4,13,23,27],
	"springiness": 100,
	"timer_frequency": 2,
	"tmp": {
		"anim_repeat": 0
	},
	"traction": 1000,
	"traction_in_air": 1000,
	"variations": null,
	"vars": {
		"damage": 1,
		"points_value": 7
	},
	"zorder": 30
}