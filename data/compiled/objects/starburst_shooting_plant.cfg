[prototype]
feet_width="4"
friction="1000"
hitpoints="200"
id="starburst_shooting_plant"
mass="5"
on_add_object_fail="[if(collide_with.team != team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]"
on_bounced_on="[if(jumped_on_by.mass >= 1000, die(), animation('spring'))]"
on_change_animation_failure="fire_event('solidity_fail')"
on_change_solid_dimensions_fail="fire_event('solidity_fail')"
on_collide_object_body="if(collide_with.team != team and collide_with_area in ['attack'], get_hit_by(collide_with))"
on_die="[score(level,points_value), spawn_item(self), death_burst_tracked(self)]"
on_end_chargeup_anim="if(tmp.anim_repeat > consts.vars,
			[animation('shoot'), set(tmp.anim_repeat, 0)],
			[animation('chargeup'), add(tmp.anim_repeat, 1)])"
on_end_hurt_anim="animation('normal')"
on_end_normal_anim="if(tmp.anim_repeat > vars.normal_repeat,
			[animation('prepare'), set(tmp.anim_repeat, 0)],
			[animation('normal'), add(tmp.anim_repeat, 1)])"
on_end_prepare_anim="animation('chargeup')"
on_end_shoot_anim="animation('normal')"
on_enter_anim="set(tmp, 'already_hit', [])"
on_shoot="[
		add_object(obj),
		set(obj.velocity_y, -500*down-500),
		set(obj.down, down),
		] where obj = object(
		'{self.type}.stage_1_pollen_ball', 
		midpoint_x, 
		midpoint_y, 
		facing, 
		{	'inside_type' -> '{self.type}.stage_2_pollen_ball',
		})"
on_solidity_fail="if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1,60),
			   resolve_solid(me,2,-1,250),
			   resolve_solid(me,-2,-1,250),
			   resolve_solid(me,0,-1,500),
			   set(tmp.in_solidity_fail, 0)
			  ])"
on_surface_damage="die()"
solid_area="4,13,23,27"
springiness="100"
timer_frequency="2"
traction="1000"
traction_in_air="1000"
zorder="30"
	[properties]
	attack_damage="0"
	attack_knockback="0"
	cause_flinch="def(collide_with) execute(me, [
			add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y),
			if('hurt' in available_animations,set(me.animation, 'hurt'))
			])"
	damage_cooldown="0"
	display_hurt_visuals="def() execute(me, 
					[
					hurt_flash_sequence()
					])"
	display_posthit_invincibility_flash_sequence="def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )"
	flash_bright="def() [set(me.brightness, 1023)]"
	flash_off="def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]"
	flash_red="def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]"
	flinch_threshold="3"
	get_hit_by="def(collide_with) execute(me, [
						if((not is_invincible) and (collide_with.attack_damage > 0) and (collide_with.attack_damage >= armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])"
	handle_damage="def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))"
	handle_damage_type="def(collide_with) null() #virtual#"
	handle_flinch="def(collide_with) 
			execute(me, if(collide_with.attack_damage >= flinch_threshold, cause_flinch(collide_with)))"
	handle_knockback="def(collide_with) execute(me,add(velocity_x, collide_with.facing * collide_with.attack_knockback))"
	hurt_flash_sequence="def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]"
	hurt_velocity_x="-200"
	hurt_velocity_y="-400"
	is_invincible="if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)"
	is_invincible_posthit="if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)"
	[/properties]

	[vars]
	damage="1"
	points_value="7"
	[/vars]

	[properties]
	hurt_velocity_x="0"
	hurt_velocity_y="0"
	team="'evil'"
	[/properties]

	[animation]
	accel_y="0"
	body_area="all"
	duration="6"
	frame_info="0,0,0,0,859,469,27,27,0,1,0,0,886,469,27,26,0,2,0,0,913,469,27,25,0,3,0,0,940,469,27,24"
	frames="4"
	frames_per_row="4"
	id="normal"
	image="compiled-2.png"
	rect="859,469,885,495"
	reverse="yes"
	[/animation]

	[animation]
	accel_y="0"
	body_area="all"
	duration="6"
	frame_info="0,15,0,0,829,205,31,18,2,6,2,0,860,205,27,27,4,3,4,0,887,205,23,30,4,3,4,0,910,205,23,30,4,1,4,0,933,205,23,32"
	frames="5"
	frames_per_row="5"
	id="hurt"
	image="compiled-2.png"
	rect="829,190,859,222"
	solid_area="6,19,25,33"
	[/animation]

	[animation]
	accel_y="0"
	body_area="all"
	duration="4"
	events="4:shoot"
	frame_info="4,3,4,0,381,205,23,30,4,1,4,0,404,205,23,32"
	frames="2"
	frames_per_row="2"
	id="shoot"
	image="compiled-2.png"
	rect="377,202,407,234"
	reverse="no"
	solid_area="6,19,25,33"
	[/animation]

	[animation]
	accel_y="0"
	body_area="all"
	duration="4"
	frame_info="0,15,0,0,257,782,31,18,0,15,0,0,288,782,31,18"
	frames="2"
	frames_per_row="2"
	id="chargeup"
	image="compiled-2.png"
	rect="257,767,287,799"
	reverse="yes"
	solid_area="6,19,25,33"
	[/animation]

	[animation]
	accel_y="0"
	body_area="all"
	duration="6"
	frame_info="2,6,2,0,732,469,27,27,1,12,1,0,759,469,29,21"
	frames="2"
	frames_per_row="2"
	id="prepare"
	image="compiled-2.png"
	rect="730,463,760,495"
	reverse="no"
	solid_area="6,19,25,33"
	[/animation]

	[editor_info]
	category="plants"
	help="says to leaf him alone!"
		[var]
		name="normal_repeat"
		value="1"
		[/var]

		[var]
		name="chargeup_repeat"
		value="1"
		[/var]

	[/editor_info]

	[properties]
	handle_knockback="def(collide_with) null()"
	[/properties]

	[consts]
	basic_type="'super_shooting_plant'"
	frogourmet_tag="'super_shooting_plant'"
	[/consts]

	[tmp]
	anim_repeat="0"
	[/tmp]

	[object_type]
	affected_by_currents="yes"
	always_active="yes"
	id="stage_1_pollen_ball"
	object_level_collisions="yes"
	on_die="spawn('pollen_impact_particle',midpoint_x,midpoint_y,0)"
	on_end_anim="[
			spawn('pollen_impact_particle',midpoint_x,midpoint_y,0),
			transform(range(0,18),
				spawn(inside_type, midpoint_x, midpoint_y, facing, [set(velocity_x, 300*sin(v)+velocity_x), set(velocity_y, 300*cos(v)-200*down+velocity_y)])
				where v = v*20
				),
			die()]"
	on_process="[set(rotate, cycle*10),if((cycle % 5) = 0,spawn('pollen_particle',midpoint_x + 1d20 -10,midpoint_y + 1d20 -10,facing),)]"
	prototype="shot"
	xon_end_anim="[spawn('pollen_impact_particle',midpoint_x,midpoint_y,0),spawn(inside_type, midpoint_x-10*up, midpoint_y, facing, set(velocity_x, 150)),spawn(inside_type, midpoint_x-10, midpoint_y, facing, set(velocity_x, -350)),die()]"
		[properties]
		attack_damage="2"
		team="'evil'"
		[/properties]

		[vars]
		inside_type="'Location Y3tuk9OA: object type not set by parent'"
		[/vars]

		[animation]
		accel_y="20"
		attack_area="all"
		body_area="all"
		duration="50"
		frames="1"
		id="normal"
		image="enemies/shooting-plant.png"
		rect="104,2,118,16"
		velocity_x="0"
		[/animation]

	[/object_type]

	[object_type]
	affected_by_currents="yes"
	always_active="yes"
	id="stage_2_pollen_ball"
	object_level_collisions="yes"
	on_create="add_particles('particles')"
	on_die="[spawn('pollen_impact_particle',midpoint_x,midpoint_y,0)]"
	on_end_anim="die()"
	on_enter_water="[add_wave(midpoint_x, y2,  500, velocity_y, 10*velocity_y, 100, 100),
						 add_wave(midpoint_x, y2, -500, velocity_y, 10*velocity_y, 100, 100), die()]"
	on_timer="set(rotate, cycle*10)"
	prototype="shot"
	timer_frequency="4"
	zorder="10"
		[animation]
		accel_y="20"
		attack_area="all"
		body_area="all"
		duration="250"
		frames="1"
		id="normal"
		image="enemies/shooting-plant.png"
		rect="90,2,100,12"
		velocity_x="0"
		velocity_y="-500"
		[/animation]

		[particle_system]
		colors="f9f9dbff,ffc20eff,ffc20e55,ff7e0055,ae4a2855"
		generation_rate_millis="250"
		id="particles"
		pos_x="10"
		pos_y="10"
		time_to_live="12"
		time_to_live_rand="24"
		type="point"
		velocity_x="-1500"
		velocity_x_rand="3000"
		velocity_y="-1500"
		velocity_y_rand="3000"
		[/particle_system]

	[/object_type]

[/prototype]

