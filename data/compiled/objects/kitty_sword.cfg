[prototype]
always_active="yes"
friction="1000"
functions="#looks for the player and turns to face it#	
	  def set_facing(obj,level) if(desired_facing != obj.facing, [animation('turn'),set(obj.facing, desired_facing)], animation('walk')
	           ) where desired_facing = if(level.player.x < obj.x, -1, 1);


	  #if the player is in an opportune spot, attack it#	
	  def consider_attacking(obj,level) if((desired_facing = obj.facing) and (abs(level.player.x - obj.x) < 150) and (abs(level.player.y - obj.y) < 50), animation('prepare_jump'), animation('walk')
	           ) where desired_facing = if(level.player.x < obj.x, -1, 1);
	1"
hitpoints="12"
id="kitty_sword"
mass="64"
on_bounced_on="if(is_invincible_posthit,null(),[add(hitpoints, -2),set(tmp.time_last_hit, cycle), set(me.green, 0), set(me.blue, 0), schedule(4, [set(me.green, 255), set(me.blue, 255)]), if(jumped_on_by.mass >= 1000, die(), animation('spring'))])"
on_collide_object_body="if(collide_with.vars.team != vars.team, if(collide_with_area = 'attack', get_hit_by(collide_with)))"
on_collide_side="if(collide_with = level.player,
   #make it so if we collide with the player we immediately jump/attack.
    this ensures the kitty can't simply get stuck between the player and a wall#
   animation('jump'),
  [
  if(animation = 'lunge_attack' and (not collide_with),
		    [animation('lunge_stuck'), add(x,-50*facing),set(velocity_x,0), set(tmp.stuck_count, 0)]),
  if(not (animation in ['jump_attack', 'lunge_attack', 'lunge_stuck', 'lunge_unstuck']), [set(facing, -facing), animation('turn'), set(velocity_x, 0)])
		 ])"
on_create="set(level.gui.vars.bosses, level.gui.vars.bosses + [me])"
on_die="[score(level,points_value), spawn_item(self), death_burst(self)]"
on_end_hurt_anim="animation('stand')"
on_end_jump_attack_anim="[animation('walk'), set(tmp.can_attack_at, cycle+50)]"
on_end_lunge_anim="animation('walk')"
on_end_lunge_attack_anim="[animation('walk')]"
on_end_lunge_stuck_anim="if(tmp.stuck_count > 4, animation('lunge_unstuck'), [animation('lunge_stuck'), set(tmp.stuck_count, tmp.stuck_count+1)])"
on_end_lunge_unstuck_anim="animation('stand')"
on_end_prepare_jump_anim="if(cycle - vars.began_charging > consts.charge_duration,fire_event('initiate_jump'),animation('prepare_jump'))"
on_end_prepare_lunge_anim="if(cycle - vars.began_charging > consts.charge_duration,animation('lunge'),animation('prepare_lunge'))"
on_end_spring_anim="animation('stand')"
on_end_stand_anim="if(is_standing, animation('walk'), animation('stand'))"
on_end_turn_anim="animation('walk')"
on_end_walk_anim="if((not facing_player),
  if(abs(level.player.midpoint_x - midpoint_x) < 800, set(facing, -facing)),

  if(cycle > tmp.can_attack_at and abs(level.player.midpoint_x - midpoint_x) < (300 + 1d200),

   if((1d4 = 1) or (abs(level.player.y - y) > 50),
    [animation('prepare_jump'),set(vars.began_charging,cycle)],
	[animation('prepare_lunge'),set(vars.began_charging,cycle)]
	),

if(distance_to_cliff < 80, [set(facing, -facing), animation('turn')], animation('walk'))))"
on_enter_water="die()"
on_hurtflicker="if(green = 100,[set(green, 255), set(blue, 255)],[set(green, 100), set(blue, 100)])"
on_initiate_jump="[animation('jump'), if(level.player.x > midpoint_x,facing(1),facing(-1)),set(velocity_x, (level.player.midpoint_x - midpoint_x)*4), if(level.player.y > y2 and is_standing_on_platform, [set(fall_through_platforms, 20), set(velocity_y, 0)], if(midpoint_y - level.player.midpoint_y > 200, [set(velocity_y, -2200)]))]"
on_leave_hurt_anim="[set(green, 255), set(blue, 255)]"
on_process_jump="if(abs(level.player.midpoint_x - midpoint_x) < 80 and level.player.y2 > y,
                       [animation('jump_attack')],
						if(is_standing, animation('stand')))"
on_process_lunge="if(abs(level.player.midpoint_x - midpoint_x) < 200,
                     animation('lunge_attack'))"
on_timer="if(is_invincible_posthit, set(alpha,(wave(cycle*300)+1000)/10 + 100), set(alpha,255))"
solid_area="13,9,33,34"
solid_dimensions="common"
timer_frequency="2"
traction="1000"
traction_in_air="200"
	[consts]
	bounce_roundness="200"
	charge_duration="80"
	flinch_threshold="2"
	posthit_invicibility_period="100"
	spring_amount="1400"
	springiness="200"
	[/consts]

	[properties]
	attack_damage="0"
	attack_knockback="0"
	damage_cooldown="0"
	flash_color="def(collide_with) execute(me, if(collide_with.attack_damage < me.hitpoints,
					[schedule(4, [set(me.green, 255), set(me.blue, 255)]), set(me.animation, 'hurt'), set(me.green, 100), set(me.blue, 100)]))"
	get_hit_by="def(collide_with) execute(me, [
						if((not is_invincible_posthit) and (collide_with.attack_damage > 0) and (collide_with.attack_damage > consts.armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[flash_color(collide_with),handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])"
	handle_damage="def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))"
	handle_damage_type="def(collide_with) null() #virtual#"
	handle_flinch="def(collide_with) 
			execute(me, if(collide_with.attack_damage > consts.flinch_threshold, [add(me.velocity_x,me.hurt_velocity_x), add(me.velocity_y,me.hurt_velocity_y)]))"
	handle_knockback="def(collide_with) execute(me,add(velocity_x, collide_with.facing * collide_with.attack_knockback))"
	hurt_velocity_x="200"
	hurt_velocity_y="-400"
	is_invincible_posthit="if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)"
	[/properties]

	[tmp]
	can_attack_at="-1"
	time_last_hit="0"
	[/tmp]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="18"
	frame_info="5,5,5,1,308,192,31,30"
	frames="1"
	id="stand"
	image="compiled-2.png"
	rect="303,187,343,222"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="2"
	frame_info="5,5,5,1,308,192,31,30"
	frames="1"
	frames_per_row="1"
	id="turn"
	image="compiled-2.png"
	rect="303,187,343,222"
	[/animation]

	[animation]
	accel_x="360"
	accel_y="80"
	body_area="all"
	duplicates="6"
	duration="6"
	frame_info="5,5,5,1,835,99,31,30,5,4,5,1,866,99,31,31,5,3,5,1,897,99,31,32"
	frames="3"
	id="walk"
	image="compiled-2.png"
	rect="830,94,870,129"
	[/animation]

	[animation]
	accel_x="300"
	accel_y="80"
	body_area="all"
	duration="6"
	frame_info="5,5,5,1,515,67,31,30,5,4,5,1,546,67,31,31,5,3,5,1,577,67,31,32"
	frames="3"
	frames_per_row="3"
	id="walk"
	image="compiled-2.png"
	rect="510,62,550,97"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="2"
	frame_info="9,8,1,1,320,67,41,27,7,8,1,1,361,67,43,27,9,6,1,1,404,67,41,29,13,5,2,1,445,67,36,30,14,3,3,1,481,67,34,32"
	frames="5"
	frames_per_row="5"
	id="spring"
	image="compiled-2.png"
	rect="311,59,361,94"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="18"
	events="6:12:18:hurtflicker"
	frame_info="5,5,5,1,308,192,31,30"
	frames="1"
	id="hurt"
	image="compiled-2.png"
	rect="303,187,343,222"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="2"
	frame_info="3,7,1,1,58,280,37,28,3,8,1,1,95,280,37,27,2,8,1,1,132,280,38,27"
	frames="3"
	frames_per_row="3"
	id="prepare_lunge"
	image="compiled-2.png"
	rect="55,273,95,308"
	[/animation]

	[animation]
	accel_x="2800"
	accel_y="80"
	body_area="all"
	duration="10"
	frame_info="0,6,0,1,601,222,41,29,4,6,0,1,642,222,37,29,6,7,7,1,679,222,28,28"
	frames="3"
	id="lunge"
	image="compiled-2.png"
	rect="601,216,641,251"
	[/animation]

	[animation]
	accel_x="2800"
	accel_y="80"
	attack_area="12,0,40,34"
	body_area="all"
	duration="6"
	frame_info="1,7,2,1,775,251,52,28,1,7,2,1,827,251,52,28,4,9,3,1,879,251,48,26"
	frames="3"
	frames_per_row="3"
	id="lunge_attack"
	image="compiled-2.png"
	rect="774,244,828,279"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	frame_info="12,7,1,1,642,251,42,28,10,8,1,1,684,251,44,27,7,7,1,1,728,251,47,28"
	frames="3"
	frames_per_row="3"
	id="lunge_stuck"
	image="compiled-2.png"
	rect="630,244,684,279"
	rows="2"
	solid_area="10,10,30,35"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="10"
	frame_info="1,23,2,2,397,599,38,29,6,5,8,2,435,599,27,47,7,5,8,2,462,599,26,47"
	frames="3"
	frames_per_row="3"
	id="jump"
	image="compiled-1.png"
	rect="396,576,436,629"
	solid_area="13,29,33,54"
	velocity_y="-1600"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="2"
	frame_info="7,10,6,2,529,893,28,37,7,10,6,2,557,893,28,37"
	frames="2"
	frames_per_row="2"
	id="prepare_jump"
	image="compiled-1.png"
	rect="522,883,562,931"
	[/animation]

	[animation]
	accel_x="-80"
	accel_y="120"
	attack_area="12,0,40,34"
	body_area="all"
	duration="10"
	frame_info="6,3,6,5,457,222,48,28,6,6,6,1,505,222,48,29,6,9,6,1,553,222,48,26"
	frames="3"
	frames_per_row="3"
	id="jump_attack"
	image="compiled-2.png"
	rect="451,219,510,254"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="10"
	frame_info="13,2,11,2,644,67,31,32"
	frames="1"
	frames_per_row="1"
	id="lunge_unstuck"
	image="compiled-2.png"
	rect="631,65,685,100"
	solid_area="10,10,30,35"
	[/animation]

	[properties]
	attack_damage="2"
	facing_player="if(level.player.x < x, facing < 0, facing > 0)"
	hurt_velocity_x="0"
	hurt_velocity_y="0"
	[/properties]

	[vars]
	began_charging="0"
	points_value="500"
	team="'evil'"
	turns_at_cliffs="1"
	turns_towards_player="1"
	[/vars]

[/prototype]

