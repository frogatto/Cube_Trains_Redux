{
	"animation": [
		{
			"body_area": [0,16,47,63],
			"duration": 1000000,
			"frame_info": [0,10,0,14,507,439,48,56],
			"frames": 1,
			"id": "normal5",
			"image": "compiled-1.png",
			"rect": [507,429,554,508]
		},
		{
			"body_area": [0,16,47,63],
			"duration": 1000000,
			"frame_info": [0,10,0,14,555,439,48,56],
			"frames": 1,
			"id": "normal4",
			"image": "compiled-1.png",
			"rect": [555,429,602,508]
		},
		{
			"body_area": [0,16,47,63],
			"duration": 1000000,
			"frame_info": [0,10,0,14,603,439,48,56],
			"frames": 1,
			"id": "normal3",
			"image": "compiled-1.png",
			"rect": [603,429,650,508]
		},
		{
			"body_area": [0,16,47,63],
			"duration": 1000000,
			"frame_info": [0,9,0,14,964,382,48,57],
			"frames": 1,
			"id": "normal2",
			"image": "compiled-1.png",
			"rect": [964,373,1011,452]
		},
		{
			"body_area": [0,16,47,63],
			"duration": 1000000,
			"frame_info": [0,9,16,14,940,130,48,57],
			"frames": 1,
			"id": "normal1",
			"image": "compiled-1.png",
			"rect": [940,121,1003,200]
		}
	],
	"consts": null,
	"editor_info": {
		"category": "props"
	},
	"has_feet": false,
	"hitpoints": 5,
	"id": "large_breakable_block",
	"mass": 5,
	"on_add_object_fail": "[if(collide_with.team != team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]",
	"on_change_animation_failure": "fire_event('solidity_fail')",
	"on_change_solid_dimensions_fail": "fire_event('solidity_fail')",
	"on_collide_object_body": "if(collide_with.team != team and collide_with.team != 'evil_harmless' and (not (collide_with.team = 'evil' and team = 'evil_harmless')), if(collide_with_area = 'attack', get_hit_by(collide_with)))",
	"on_die": "[spawn('breakable_block_chunk.particle_system_holder', x,y,facing),
			sound('BlockBreak.ogg'),
			map([0]*3d2, spawn('breakable_block_chunk',x+1d30, y+1d30, if(1d2=2,1,-1))),
			map([0]*3d2, spawn('breakable_block_chunk',x+1d30, y+1d30, if(1d2=2,1,-1), add(variations, ['big'])))
			]",
	"on_solidity_fail": "if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1,60),
			   resolve_solid(me,2,-1,250),
			   resolve_solid(me,-2,-1,250),
			   resolve_solid(me,0,-1,500),
			   resolve_solid(me),
			   set(tmp.in_solidity_fail, 0)
			  ])",
	"properties": {
		"attack_damage": 0,
		"attack_knockback": 0,
		"cause_flinch": "def(collide_with) execute(me, [
			add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y),
			if('hurt' in available_animations,set(me.animation, 'hurt'))
			])",
		"damage_cooldown": 0,
		"difficulty_casual": 0,
		"difficulty_intense": 1,
		"difficulty_unfair": 2,
		"display_hurt_visuals": "def() execute(me, 
					[
					hurt_flash_sequence()
					])",
		"display_posthit_invincibility_flash_sequence": "def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )",
		"flash_bright": "def() [set(me.brightness, 1023)]",
		"flash_color": "def(collide_with) null",
		"flash_off": "def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]",
		"flash_red": "def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]",
		"flinch_threshold": 3,
		"get_hit_by": "def(collide_with) execute(me, [
						if((not is_invincible) and (collide_with.attack_damage > 0) and (collide_with.attack_damage >= armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])",
		"handle_damage": "def(collide_with) execute(me, [add(me.hitpoints, -1),if(hitpoints > 1, set(animation, 'normal' + (hitpoints-1)))])",
		"handle_damage_type": "def(collide_with) null #virtual#",
		"handle_flinch": "def(collide_with) 
			execute(me, if(collide_with.attack_damage >= flinch_threshold, cause_flinch(collide_with)))",
		"handle_knockback": "def(collide_with) null",
		"hurt_flash_sequence": "def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]",
		"hurt_velocity_x": 0,
		"hurt_velocity_y": 0,
		"is_invincible": "if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)",
		"is_invincible_posthit": "if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)",
		"standard_thrown_damage": 400
	},
	"solid_area": [0,16,47,63],
	"tmp": null,
	"variations": null,
	"vars": null,
	"zorder": -2
}