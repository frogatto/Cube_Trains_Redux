[prototype]
hitpoints="400"
id="bunny_ball_tosser"
mass="5"
on_add_object_fail="[if(collide_with.team != team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]"
on_change_animation_failure="fire_event('solidity_fail')"
on_change_solid_dimensions_fail="fire_event('solidity_fail')"
on_child_spawned="if(child.type = 'bunny_ball_tosser.cannonball_pile', add(vars.children, [child]))"
on_collide_object_body="if(collide_with.team != team and collide_with.team != 'evil_harmless' and (not (collide_with.team = 'evil' and team = 'evil_harmless')), if(collide_with_area = 'attack', get_hit_by(collide_with)))"
on_die="[map(vars.children, 'child', remove_object(child)), death_burst(self)]"
on_end_hurt_anim="animation('normal')"
on_end_stand_anim="[set(vars.charge_up, vars.charge_up+1), if(vars.charge_up >= vars.charge_time, set(animation, 'throw'), set(animation, 'stand'))]"
on_end_throw_anim="[set(vars.charge_up, 0), set(animation, 'stand')]"
on_launch_ball="spawn('bunny_ball_tosser.thrown_metal_ball', midpoint_x, y, facing, [set(velocity_x, -facing*600-1d200),set(velocity_y, -400)])"
on_solidity_fail="if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1,60),
			   resolve_solid(me,2,-1,250),
			   resolve_solid(me,-2,-1,250),
			   resolve_solid(me,0,-1,500),
			   set(tmp.in_solidity_fail, 0)
			  ])"
on_start_level="[spawn('bunny_ball_tosser.cannonball_pile', midpoint_x + 64 * facing, midpoint_y + 36, facing)]"
solid_area="20,18,42,56"
	[consts]
	basic_type="'bunny_ball_tosser'"
	flinch_threshold="1000"
	frogourmet_tag="'bunny_ball_tosser'"
	[/consts]

	[properties]
	attack_damage="0"
	attack_knockback="0"
	cause_flinch="def(collide_with) execute(me, [
			add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y),
			if('hurt' in available_animations,set(me.animation, 'hurt'))
			])"
	damage_cooldown="0"
	display_hurt_visuals="def() execute(me, 
					[
					hurt_flash_sequence()
					])"
	display_posthit_invincibility_flash_sequence="def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )"
	flash_bright="def() [set(me.brightness, 1023)]"
	flash_off="def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]"
	flash_red="def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]"
	get_hit_by="def(collide_with) execute(me, [
						if((not is_invincible) and (collide_with.attack_damage > 0) and (collide_with.attack_damage >= consts.armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])"
	handle_damage="def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))"
	handle_damage_type="def(collide_with) null() #virtual#"
	handle_flinch="def(collide_with) 
			execute(me, if(collide_with.attack_damage >= consts.flinch_threshold, cause_flinch(collide_with)))"
	handle_knockback="def(collide_with) execute(me,add(velocity_x, collide_with.facing * collide_with.attack_knockback))"
	hurt_flash_sequence="def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]"
	hurt_velocity_x="-200"
	hurt_velocity_y="-400"
	is_invincible="if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)"
	is_invincible_posthit="if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)"
	[/properties]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="4"
	frame_info="5,10,3,2,323,430,54,50,4,11,2,2,377,430,56,49,3,12,1,2,433,430,58,48"
	frames="3"
	frames_per_row="1"
	id="stand"
	image="compiled-1.png"
	rect="318,420,379,481"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="4"
	frame_info="5,10,3,2,323,430,54,50,4,11,2,2,377,430,56,49,3,12,1,2,433,430,58,48"
	frames="3"
	frames_per_row="1"
	id="hurt"
	image="compiled-1.png"
	rect="318,420,379,481"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	events="42:launch_ball"
	frame_info="24,14,22,2,0,255,55,50,21,14,15,2,55,255,65,50,23,14,11,2,120,255,67,50,23,14,11,2,187,255,67,50,23,14,9,2,254,255,69,50,23,14,8,2,323,255,70,50,8,9,3,3,393,255,90,54,13,10,0,3,483,255,88,53,2,1,13,3,571,255,86,62,3,15,30,0,657,255,68,51,26,12,40,0,725,255,35,54,34,12,32,2,760,255,35,52"
	frames="12"
	frames_per_row="4"
	id="throw"
	image="compiled-1.png"
	rect="-24,241,76,306"
	reverse="no"
	solid_area="40,22,62,60"
	[/animation]

	[editor_info]
	category="milgramen"
		[var]
		name="charge_time"
		value="2"
		[/var]

		[var]
		name="always_active"
		type="boolean"
		value="0"
		[/var]

	[/editor_info]

	[properties]
	handle_knockback="def(collide_with) null()"
	team="'evil'"
	[/properties]

	[vars]
	always_active="0"
	charge_time="2"
	charge_up="0"
	points_value="27"
	[/vars]

	[object_type]
	id="cannonball_pile"
	zorder="-3"
		[animation]
		id="normal"
		image="enemies/bunny-ball-tosser.png"
		pad="4"
		rect="66,1,94,27"
		[/animation]

	[/object_type]

	[object_type]
	always_active="yes"
	hitpoints="32"
	id="thrown_metal_ball"
	on_collide_feet="[set(hitpoints, hitpoints-1), set(velocity_y, -(velocity_y*7)/10)]"
	on_collide_head="[set(velocity_y, -velocity_y)]"
	on_collide_object_attack="if(collide_with_area = 'body' and team != collide_with.team, die())"
	on_collide_side="[set(hitpoints, hitpoints-1), set(velocity_x, -(velocity_x*95)/100)]"
	on_create="set(fall_through_platforms,10000)"
	on_die="death_burst(self)"
	on_spat="[set(vars.time_spat,level.cycle), set(velocity_x, velocity_x/2), set(velocity_y, velocity_y/2)]"
	solid_area="4,4,8,8"
	tags="swallowable"
		[properties]
		attack_damage="if(vars.time_spat, 400, 2)"
		damage_cooldown="5"
		team="if(vars.time_spat,'player','evil')"
		[/properties]

		[vars]
		has_been_spat="0"
		[/vars]

		[animation]
		accel_y="30"
		attack_area="all"
		body_area="all"
		duration="400"
		frames="1"
		frames_per_row="1"
		id="thrown"
		image="enemies/bunny-ball-tosser.png"
		pad="0"
		rect="66,31,80,45"
		[/animation]

	[/object_type]

[/prototype]

