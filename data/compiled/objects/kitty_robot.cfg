[prototype]
friction="200"
hitpoints="20"
id="kitty_robot"
mass="30"
on_child_spawned="if((not vars.my_driver), [remove_object(child), set(attached_objects, [child]), set(vars.my_driver, child)])"
on_collide="if(collide_with, [if(collide_with.get_hit_by, collide_with.get_hit_by(me)), elastic_collision(me, collide_with)], [if((velocity_x > 0) = (facing > 0), [animation('turn'), set(facing, -facing)]), set(velocity_x, 0)])"
on_collide_feet="[if(standing_on, [fire_event(standing_on, 'bounced_on', mapping('xxx', 5)), if(standing_on.get_hit_by, standing_on.get_hit_by(me))]), shake_screen(0,100,0,-100)]"
on_collide_object_body="if(collide_with.vars.team != vars.team and collide_with_area = 'attack', get_hit_by(collide_with))"
on_create="spawn('kitty_spear_npc', midpoint_x, midpoint_y, facing)"
on_die="[score(level,vars.points_value), map([0]*8, spawn('die_cloud', midpoint_x + (1d50 - 1d50), midpoint_y + (1d50 - 1d50), facing)), spawn('dying_robot_leg_fragment1', midpoint_x, midpoint_y, facing), spawn('dying_robot_leg_fragment2', midpoint_x, midpoint_y, facing), spawn('dying_robot_main_fragment', midpoint_x, midpoint_y, facing)]"
on_end_anim="if(animation = 'prepare_jump', animation('jump'),
if(in_attack_range and (not too_close),
  if(level.player.y2 < y and is_standing, [animation('prepare_jump')],
  if((level.player.midpoint_x > midpoint_x) != (facing > 0),
	  [animation('turn'), set(facing, -facing)],
      [set('accel_x', 0), animation('normal'), fire_missile])),

  if(facing < 0 and x < vars.move_x1 or facing > 0 and x2 > vars.move_x2, [animation('turn'), set(facing, -facing)], animation('walk'))))"
on_hurtflicker="if(green = 100,[set(green, 255), set(blue, 255)],[set(green, 100), set(blue, 100)])"
on_leave_hurt_anim="[set(green, 255), set(blue, 255)]"
on_process="[set(vars.my_driver.midpoint_x, midpoint_x + facing*10), set(vars.my_driver.midpoint_y, midpoint_y-40), set(vars.my_driver.facing, facing)]"
solid_area="14,0,44,40"
solid_dimensions="boss"
	[properties]
	get_hit_by="def(collide_with) execute(me,
	             if(not (me in collide_with.tmp.already_hit), [
				set(collide_with.tmp, 'already_hit', collide_with.tmp.already_hit + [me]),
				if(collide_with.vars.damage > consts.armor,
				  [
				   if(me.hitpoints > collide_with.vars.damage,
				    [
				      if(collide_with.vars.damage <= consts.flinch_threshold,
						schedule(4, [set(me.green, 255), set(me.blue, 255)]),
					    set(me.animation, 'hurt')),
				      set(me.green, 100), set(me.blue, 100)
					]),
				   set(me.hitpoints, me.hitpoints - collide_with.vars.damage)
				  ]),
				if(collide_with.vars.damage > consts.flinch_threshold and me.hurt_velocity_y and (not collide_with.tmp.no_flinch_attack), set(me.velocity_y,(me.hurt_velocity_y))),
				if(collide_with.vars.damage > consts.flinch_threshold and me.hurt_velocity_x and (not collide_with.tmp.no_flinch_attack), set(me.velocity_x, ((me.hurt_velocity_x * collide_with.facing + collide_with.velocity_x/2)*collide_with.mass*if(collide_with.attack_force, collide_with.attack_force, 100))/(me.mass*100)))]))"
	hurt_velocity_x="400"
	hurt_velocity_y="-800"
	[/properties]

	[animation]
	accel_x="0"
	accel_y="10"
	body_area="all"
	duration="6"
	frame_info="6,0,0,0,666,270,42,41"
	frames="1"
	id="normal"
	image="compiled-1.png"
	rect="660,270,707,310"
	scale="2"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="10"
	body_area="all"
	duration="6"
	frame_info="6,0,0,0,666,270,42,41"
	frames="1"
	id="hurt"
	image="compiled-1.png"
	rect="660,270,707,310"
	scale="2"
	[/animation]

	[animation]
	accel_y="10"
	body_area="all"
	duration="6"
	frame_info="1,0,7,0,546,270,40,41,7,0,1,0,586,270,40,41,7,0,1,0,626,270,40,41"
	frames="3"
	id="turn"
	image="compiled-1.png"
	rect="545,270,592,310"
	scale="2"
	[/animation]

	[animation]
	accel_x="200"
	accel_y="10"
	body_area="all"
	duration="6"
	frame_info="2,0,0,0,416,270,46,41,4,1,1,0,462,270,43,40"
	frames="2"
	id="walk"
	image="compiled-1.png"
	rect="414,270,461,310"
	scale="2"
	[/animation]

	[animation]
	accel_y="10"
	body_area="all"
	duration="5"
	frame_info="6,0,0,0,291,270,42,41,5,1,1,0,333,270,42,40,7,5,0,0,375,270,41,36"
	frames="3"
	id="prepare_jump"
	image="compiled-1.png"
	rect="285,270,332,310"
	scale="2"
	[/animation]

	[animation]
	body_area="all"
	duration="10"
	frame_info="0,2,6,3,678,177,42,46"
	frames="1"
	id="jump"
	image="compiled-1.png"
	rect="678,175,725,225"
	scale="2"
	velocity_y="-500"
	[/animation]

	[properties]
	fire_missile="if(vars.missile_load_count < consts.missile_load_time, set(vars.missile_load_count, vars.missile_load_count+1), [spawn('robot_missile1', midpoint_x + facing*90, midpoint_y-10, facing), set(vars.missile_load_count, 0)])"
	hurt_velocity_y="-20"
	in_attack_range="abs(level.player.midpoint_x - midpoint_x) < consts.attack_range and
	  abs(level.player.midpoint_y - midpoint_y) < consts.vertical_attack_range"
	too_close="abs(level.player.midpoint_x - midpoint_x) < consts.too_close_range"
	[/properties]

	[consts]
	armor="2"
	attack_range="500"
	missile_load_time="8"
	too_close_range="200"
	vertical_attack_range="200"
	[/consts]

	[vars]
	damage="1"
	missile_load_count="0"
	move_x1="0"
	move_x2="0"
	my_driver="0"
	points_value="100"
	team="'evil'"
	[/vars]

[/prototype]

