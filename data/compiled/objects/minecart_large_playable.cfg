[object_type]
hitpoints="3"
id="minecart_large_playable"
no_on_collide_feet="debug('*clang*')"
no_on_process="[
		# Set according to slope (may need tweaking) and kill velocity if underwater. #
		set(velocity_x, 
			(((velocity_x + (slope_standing_on / 1)) * 997) / 1000) 
			- (underwater * (velocity_x*999/1000))
			+ (is_standing * ctrl_right * (((velocity_x > -300) * 15) + 6))
			- (is_standing * ctrl_left * (((velocity_x < 300) * 15) + 6))
			+ (is_standing * ctrl_down * (velocity_x < 0) * 35)
			- (is_standing * ctrl_down * (velocity_x > 0) * 35)),
		set(velocity_y, ((velocity_y * 997) / 1000)
		    + (underwater * (((velocity_y * 9) / 10)))
			+ (is_standing * ctrl_jump * (0-1000))),
		if (is_standing, set(rotate, (slope_standing_on+rotate)/2)),
		if ((velocity_x > 500 or velocity_x< -500) and ctrl_down and is_standing, [map([0] * 1d10, spawn('spark', x + 110 + (1d3), y + 95 + (1d3), facing))]),
			set(level.lock_screen, [x+(velocity_x/(100/29)),y+(velocity_y/(100/10))]),
		
		set(level.player.midpoint_x, midpoint_x),
	    set(level.player.midpoint_y, midpoint_y-145),
		set(level.player.facing, facing),
		]"
object_level_collisions="yes"
on_collide_side="[
		set(velocity_x, velocity_x/2), set(velocity_y, velocity_y/2)
		]"
on_create="[set(tmp.cld, 1),
		set(attached_objects, [level.player]),
	]"
on_enter_water="[
		add_wave(midpoint_x, y2, -2000, 5*velocity_y/2, 30*velocity_y, 300, 300),
		add_wave(midpoint_x, y2, 2000, 5*velocity_y/2, 30*velocity_y, 300, 300),
		add_wave(midpoint_x, y2, -1000, 3*velocity_y/2, 20*velocity_y, 200, 200),
		add_wave(midpoint_x, y2, 1000, 3*velocity_y/2, 20*velocity_y, 200, 200),
		add_wave(midpoint_x, y2, -500, 2*velocity_y/2, 10*velocity_y, 100, 100),
		add_wave(midpoint_x, y2, 500, 2*velocity_y/2, 10*velocity_y, 100, 100)
	]"
on_jumped_on="if(jumped_on_by.is_human, [
		set(attached_objects,[jumped_on_by]),
		set(vars.pilot, jumped_on_by),
		#debug('pilot cart'),#
		])"
on_process="[
		if(vars.pilot, [
			set(vars.pilot.midpoint_x, midpoint_x),
			set(vars.pilot.midpoint_y, y-16),
			set(vars.pilot.velocity_x, velocity_x),
			set(vars.pilot.velocity_y, velocity_y),
			set(vars.pilot.animation, 'freeze'),
			set(vars.pilot.facing, facing),
			
			#Handle controls.#
			if(vars.pilot.ctrl_left, [
				set(accel_x, -200),
				set(x, x-1),
				]),
			if(vars.pilot.ctrl_right, [
				set(accel_x, 200),
				set(x, x+1),
				]),
			#De-accelerate and handle slope.#
			if((not vars.pilot.ctrl_right) and (not vars.pilot.ctrl_left), [
				set(accel_x, 0),
				if (velocity_x < 0, 
					set(velocity_x, velocity_x + 3),
					set(velocity_x, velocity_x - 3)),
				if(abs(velocity_x) < 10, set(velocity_x, 0)),
				]),
			]),
			if(slope_standing_on, set(velocity_x, velocity_x + slope_standing_on*2)),
			#debug(velocity_x),#
		]"
solid_area="0,9,34,22"
zorder="1"
	[vars]
	damage="100"
	mass="200"
	[/vars]

	[animation]
	accel_y="70"
	frame_info="0,0,0,0,498,494,36,24"
	id="normal"
	image="compiled-2.png"
	rect="498,494,533,517"
	[/animation]

	[animation]
	accel_y="70"
	frame_info="0,0,0,0,498,494,36,24"
	id="foward"
	image="compiled-2.png"
	rect="498,494,533,517"
	[/animation]

	[animation]
	accel_y="70"
	frame_info="0,0,0,0,498,494,36,24"
	id="stop"
	image="compiled-2.png"
	rect="498,494,533,517"
	[/animation]

[/object_type]

