{
	"animation": [
		{
			"accel_y": 80,
			"body_area": "all",
			"duplicates": 5,
			"duration": 5,
			"frame_info": [3,3,3,1,833,214,37,33,3,4,3,1,870,214,37,32,2,5,3,1,907,214,38,31],
			"frames": 3,
			"id": "normal",
			"image": "compiled-2.png",
			"rect": [830,211,872,247],
			"reverse": true
		},
		{
			"accel_y": 80,
			"body_area": "all",
			"duration": 5,
			"frame_info": [3,3,3,1,0,247,37,33,3,4,3,1,37,247,37,32,2,5,3,1,74,247,38,31],
			"frames": 3,
			"id": "normal",
			"image": "compiled-2.png",
			"rect": [-3,244,39,280],
			"reverse": true
		},
		{
			"accel_y": 80,
			"body_area": "all",
			"duration": 5,
			"frame_info": [3,3,3,1,112,247,37,33,2,3,8,1,149,247,33,33,2,3,2,1,182,247,39,33],
			"frames": 3,
			"frames_per_row": 1,
			"id": "spring",
			"image": "compiled-2.png",
			"rect": [109,244,151,280],
			"reverse": true
		},
		{
			"accel_y": 80,
			"body_area": "all",
			"duration": 4,
			"events": "20:shoot",
			"frame_info": [3,2,8,1,387,73,32,34,3,0,8,1,419,73,32,36,3,1,8,1,451,73,32,35,2,2,0,1,483,73,41,34,2,0,0,1,524,73,41,36,3,3,3,1,565,73,37,33],
			"frames": 6,
			"id": "fire",
			"image": "compiled-2.png",
			"rect": [384,71,426,107]
		},
		{
			"accel_y": 80,
			"body_area": "all",
			"duration": 4,
			"frame_info": [3,1,8,1,519,109,32,35,3,1,8,1,551,109,32,35,3,1,8,1,583,109,32,35,3,1,8,1,615,109,32,35,3,2,8,1,647,109,32,34,3,5,6,1,679,109,34,31,2,5,5,1,713,109,36,31],
			"frames": 7,
			"id": "hurt",
			"image": "compiled-2.png",
			"rect": [516,108,558,144]
		},
		{
			"accel_y": 80,
			"body_area": null,
			"duration": 8,
			"frame_info": [3,0,8,1,899,0,32,36,3,1,8,1,931,0,32,35,2,3,8,1,963,0,33,33],
			"frames": 3,
			"id": "dying",
			"image": "compiled-2.png",
			"rect": [896,0,938,36]
		},
		{
			"accel_y": 80,
			"body_area": null,
			"duration": 300,
			"frame_info": [2,4,8,1,976,214,33,32],
			"frames": 1,
			"id": "dead",
			"image": "compiled-2.png",
			"rect": [974,210,1016,246]
		},
		{
			"accel_y": 80,
			"body_area": null,
			"duration": 6,
			"frame_info": [2,3,8,1,749,109,33,33,2,3,8,1,782,109,33,33,2,1,8,1,815,109,33,35,2,2,8,1,848,109,33,34,2,6,8,1,881,109,33,30,3,5,6,1,914,109,34,31,3,5,5,1,948,109,35,31],
			"frames": 7,
			"id": "respawn",
			"image": "compiled-2.png",
			"rect": [747,106,789,142]
		}
	],
	"consts": {
		"basic_type": "spitting_flower",
		"frogourmet_tag": "spitting_flower"
	},
	"editor_info": {
		"category": "plants",
		"var": {
			"name": "loading_time",
			"value": 3
		}
	},
	"feet_width": 4,
	"friction": 1000,
	"hitpoints": 100,
	"id": "spitting_flower",
	"mass": 5,
	"on_add_object_fail": "[if(collide_with.team != team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]",
	"on_bounced_on": "[if(jumped_on_by.mass >= 1000, die(), animation('spring'))]",
	"on_change_animation_failure": "fire_event('solidity_fail')",
	"on_change_solid_dimensions_fail": "fire_event('solidity_fail')",
	"on_collide_object_body": "if(collide_with.team != team and collide_with_area in ['attack'], get_hit_by(collide_with))",
	"on_die": "[spawn('die_cloud', midpoint_x, midpoint_y, facing), set(hitpoints, max_hitpoints), animation('dying')]",
	"on_end_dead_anim": "animation('respawn')",
	"on_end_dying_anim": "animation('dead')",
	"on_end_fire_anim": "animation('normal')",
	"on_end_hurt_anim": "animation('normal')",
	"on_end_normal_anim": "if(vars.load >= vars.loading_time,
					     [animation('fire'), set_var('load', 0)],
						 [animation('normal'), set_var('load', vars.load + 1)])",
	"on_end_respawn_anim": "animation('normal')",
	"on_end_spring_anim": "animation('normal')",
	"on_enter_anim": "set(tmp, 'already_hit', [])",
	"on_shoot": "[spawn('pollen_ball_weightless', midpoint_x+ facing*50, midpoint_y -15, facing, set(velocity_x,800*facing)),sound('FlowerShot.ogg')]",
	"on_solidity_fail": "if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1,60),
			   resolve_solid(me,2,-1,250),
			   resolve_solid(me,-2,-1,250),
			   resolve_solid(me,0,-1,500),
			   resolve_solid(me),
			   set(tmp.in_solidity_fail, 0)
			  ])",
	"on_surface_damage": "die()",
	"properties": {
		"attack_damage": 0,
		"attack_knockback": 0,
		"cause_flinch": "def(collide_with) execute(me, [
			add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y),
			if('hurt' in available_animations,set(me.animation, 'hurt'))
			])",
		"damage_cooldown": 0,
		"difficulty_casual": 0,
		"difficulty_intense": 1,
		"difficulty_unfair": 2,
		"display_hurt_visuals": "def() execute(me, 
					[
					hurt_flash_sequence()
					])",
		"display_posthit_invincibility_flash_sequence": "def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )",
		"flash_bright": "def() [set(me.brightness, 1023)]",
		"flash_off": "def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]",
		"flash_red": "def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]",
		"flinch_threshold": 3,
		"get_hit_by": "def(collide_with) execute(me, [
						if((not is_invincible) and (collide_with.attack_damage > 0) and (collide_with.attack_damage >= armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])",
		"handle_damage": "def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))",
		"handle_damage_type": "def(collide_with) null #virtual#",
		"handle_flinch": "def(collide_with) 
			execute(me, if(collide_with.attack_damage >= flinch_threshold, cause_flinch(collide_with)))",
		"handle_knockback": "def(collide_with) null",
		"hurt_flash_sequence": "def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]",
		"hurt_velocity_x": 0,
		"hurt_velocity_y": 0,
		"is_invincible": "if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)",
		"is_invincible_posthit": "if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)",
		"standard_thrown_damage": 400,
		"team": "'evil'"
	},
	"solid_area": [12,6,24,30],
	"springiness": 100,
	"timer_frequency": 2,
	"tmp": null,
	"traction": 1000,
	"traction_in_air": 1000,
	"variations": null,
	"vars": {
		"damage": 1,
		"load": 0,
		"points_value": 3
	},
	"zorder": 0
}