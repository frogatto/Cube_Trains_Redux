[prototype]
dies_on_inactive="yes"
friction="1000"
id="acorn"
mass="5"
object_level_collisions="true"
on_add_object_fail="die()"
on_bounced_on="if(animation = 'on_back', die())"
on_change_animation_failure="die()"
on_change_solid_dimensions_fail="die()"
on_collide_feet="[set(rotate, slope_standing_on), if(abs(velocity_y) >1000, spawn('impact_cloud',midpoint_x,y2,facing), if(abs(velocity_y) >100, spawn('impact_cloud_small',midpoint_x,y2,facing))),
		if(collide_with and collide_with.get_hit_by and collide_with.team != team, [collide_with.get_hit_by(me), die()]),
	           if(animation = 'thrown' and velocity_y + abs(velocity_x) > 600,
	                    [set(velocity_y, -(velocity_y*3)/5 - (velocity_x*slope_standing_on)/90), set(velocity_x, (velocity_x*4)/5 + (velocity_y*slope_standing_on)/90)], if((animation = 'thrown'), [set(tmp.on_back_count, 0), if('on_back' in available_animations, animation('on_back'))]))]"
on_collide_head="[set(velocity_y, -velocity_y/2), if(abs(velocity_y) >1000, spawn('impact_cloud',midpoint_x,y,facing), if(abs(velocity_y) >30, spawn('impact_cloud_small',midpoint_x,y,facing)))]"
on_collide_object_body=""
on_collide_object_thrown="[if(collide_with_area = 'body' and team != 'evil_harmless' and collide_with.team != team,
		if(not (team = 'evil' and collide_with.team = 'evil_harmless'),
		 [if(collide_with.get_hit_by, [spawn('impact_cloud',midpoint_x,y,facing) ,collide_with.get_hit_by(me)]), die()    ]) )]"
on_collide_side="[set(velocity_x, -velocity_x/2), if(abs(velocity_x) >1000, spawn('impact_cloud',midpoint_x,y2,facing), if(abs(velocity_x) >30, spawn('impact_cloud_small',midpoint_x,y2,facing)))]"
on_create="set(fall_through_platforms,-1)"
on_die="death_burst(self)"
on_end_anim="if(tmp.on_back_count > consts.on_back_duration, fire_event('return_to_normal'), if(animation != 'normal' and is_standing and 'on_back' in available_animations, animation('on_back'), animation(animation)))"
on_enter_water="die()"
on_process="[if(not vars.time_spat, set(accel_y, max(80 - cycle*3,40)))]"
on_process_on_back="[add(tmp.on_back_count,1),if(tmp.on_back_count > (consts.on_back_duration*3)/4, set(brightness, if(cycle%6 > 2, 256, 512)))]"
on_return_to_normal="die()"
on_solidity_fail="if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1,60),
			   resolve_solid(me,2,-1,250),
			   resolve_solid(me,-2,-1,250),
			   resolve_solid(me,0,-1,500),
			   set(tmp.in_solidity_fail, 0)
			  ])"
on_spat="[[set(rotate, 0),set(vars.time_spat,level.cycle),set(brightness, 255)], set(accel_y, 80),set(fall_through_platforms,0)]"
on_stuck="die()"
on_surface_damage="die()"
solid_area="1,0,14,15"
solid_dimensions="none"
tags="swallowable"
traction="1000"
zorder="-1"
	[properties]
	standard_thrown_damage="400"
	[/properties]

	[consts]
	bounce_roundness="0"
	flinch_threshold="3"
	on_back_duration="200"
	spring_amount="0"
	springiness="0"
	[/consts]

	[properties]
	attack_damage="0"
	attack_knockback="0"
	cause_flinch="def(collide_with) execute(me, [
			add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y),
			if('hurt' in available_animations,set(me.animation, 'hurt'))
			])"
	damage_cooldown="0"
	display_hurt_visuals="def() execute(me, 
					[
					hurt_flash_sequence()
					])"
	display_posthit_invincibility_flash_sequence="def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )"
	flash_bright="def() [set(me.brightness, 1023)]"
	flash_off="def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]"
	flash_red="def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]"
	get_hit_by="def(collide_with) execute(me, [
						if((not is_invincible) and (collide_with.attack_damage > 0) and (collide_with.attack_damage >= consts.armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])"
	handle_damage="def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))"
	handle_damage_type="def(collide_with) null() #virtual#"
	handle_flinch="def(collide_with) 
			execute(me, if(collide_with.attack_damage >= consts.flinch_threshold, cause_flinch(collide_with)))"
	handle_knockback="def(collide_with) execute(me,add(velocity_x, collide_with.facing * collide_with.attack_knockback))"
	hurt_flash_sequence="def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]"
	hurt_velocity_x="-200"
	hurt_velocity_y="-400"
	is_invincible="if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)"
	is_invincible_posthit="if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)"
	[/properties]

	[vars]
	time_spat="0"
	[/vars]

	[tmp]
	cycle_thrown_anim="0"
	on_back_count="0"
	[/tmp]

	[properties]
	attack_damage="standard_thrown_damage"
	handle_knockback="def(collide_with) execute(me,[add(velocity_x, collide_with.facing * collide_with.attack_knockback),add(velocity_y, collide_with.facing * collide_with.attack_knockback), if('on_back' in me.available_animations,[animation('on_back'),fire_event('spat')])])"
	team="if(is_player_ammo,'player',if(velocity_x != 0 or velocity_y != 0, if(vars.time_spat, 'player','evil'), 'evil_harmless'))"
	[/properties]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	frame_info="2,2,2,2,254,819,12,12,0,0,0,0,266,819,16,16,8,0,0,7,282,819,8,9"
	frames="3"
	id="appear"
	image="compiled-2.png"
	rect="252,817,267,832"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="none"
	frame_info="0,0,0,0,290,819,16,16"
	frames="1"
	id="thrown"
	image="compiled-2.png"
	rect="290,819,305,834"
	thrown_area="all"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="none"
	frame_info="0,0,0,0,290,819,16,16"
	frames="1"
	id="on_back"
	image="compiled-2.png"
	rect="290,819,305,834"
	thrown_area="all"
	[/animation]

	[properties]
	attack_damage="if(animation in ['thrown'], if(team='evil',1,400), 0)"
	[/properties]

[/prototype]

