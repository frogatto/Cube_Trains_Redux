[object_type]
always_active="yes"
functions="def distToPlayer(object_type obj, object_type plr) (abs(obj.x - plr.x)+abs(obj.y - plr.y))"
id="torch_glow"
ignore_collide="true"
on_create="[set_var('base_alpha', 60), set(alpha,base_alpha), set(green,69), set(blue,31), 
		set(tmp.cycleOffset, 1d6000), 
		set(tmp.gutter, 0), 
		set(tmp.glowSpeed, 1),
		set(vars.glowSize, 150),
		set(vars.norm_x, x),
		set(vars.norm_y, y),
		fire_event(self,'set_flicker')
		]"
on_end_anim="animation('normal')"
on_process="if(HIGH_END_SYSTEM, fire_event(self,'set_flicker'))"
on_set_flicker="[
				set(lights, circle_light(me, wave((tmp.cycleOffset))/abs(150-(tmp.gutter/20))+vars.glowSize-((tmp.gutter*(150/90))/20))), 
				set(tmp.cycleOffset, tmp.cycleOffset + tmp.glowSpeed),
				if(tmp.gutter >= 20, set(tmp.gutter, tmp.gutter - 1d70 - 20)),
				if(distToPlayer(self, level.player) < 100 and tmp.gutter < (((100 - distToPlayer(self, level.player))*(abs(level.player.velocity_x) + abs(level.player.velocity_y)))/100), set(tmp.gutter, (((100 - distToPlayer(self, level.player))*(abs(level.player.velocity_x) + abs(level.player.velocity_y)))/100))),
				if(cycle%8=3, [set(tmp.glowSpeed, 1d30+((tmp.gutter+6000)/100)), set(tmp.cycleOffset, 1d6000)]),
				if(cycle%3=1,
					[set(x, vars.norm_x + (1d6)-3),
					set(y, vars.norm_y + (1d6)-3)]),
				]"
on_timer="[set(alpha, base_alpha + (wave(cycle*(10 +1d2))*20)/2000) ]"
timer_frequency="5"
zorder="55"
	[animation]
	collide="0,0,63,63"
	duration="100000"
	frame_info="5,5,5,4,932,317,54,55"
	frames="1"
	id="normal"
	image="compiled-1.png"
	rect="927,312,990,375"
	[/animation]

[/object_type]

