{
	"animation": {
		"duration": 10000,
		"id": "normal",
		"image": "props/locks.png",
		"rect": [0,0,15,15]
	},
	"editor_info": {
		"category": "props",
		"help": "Place this on top of a door to lock it - the door will autodetect the lock
		visually sitting there, and become locked.  To make the game remember that the act
		of unlocking has happened, you have to set a matching event name in both the lock
		and the key - once set, they will cease being there when you enter the level.",
		"var": [
			{
				"enum_values": "gold,silver,green,red,purple,blue,cyan",
				"name": "color",
				"type": "enum",
				"value": "'gold'"
			},
			{
				"name": "event_name",
				"type": "text",
				"value": "''"
			}
		]
	},
	"id": "padlock",
	"no_compile_image": "props/locks.png",
	"object_type": [
		{
			"animation": [
				{
					"accel_y": 40,
					"body_area": null,
					"duration": 5,
					"frames": 6,
					"id": "normal",
					"image": "effects/particles3.png",
					"pad": 3,
					"rect": [1,61,17,77]
				},
				{
					"accel_y": 40,
					"body_area": null,
					"duration": 100,
					"frames": 1,
					"id": "settled",
					"image": "effects/particles3.png",
					"pad": 3,
					"rect": [1,61,17,77]
				}
			],
			"dies_on_inactive": true,
			"friction": 2000,
			"has_feet": false,
			"id": "chunk",
			"load_variations": "corner",
			"on_collide_feet": "[set(velocity_y, -(velocity_y*600)/1000),if(velocity_y < 200 and animation='normal', animation('settled')),if(velocity_y < 40, set(velocity_y,0))]",
			"on_collide_side": "set(velocity_x, -(velocity_x*850)/1000)",
			"on_create": "[animation('normal'),set(velocity_x, (1d1000-500)), set(velocity_y, -1d600-200), set(rotate, 1d4*90), 
	]",
			"on_die": "spawn('padlock.particle_system_holder', x,y,facing)",
			"on_end_anim": "animation('normal')",
			"on_end_settled_anim": "die()",
			"on_enter_water": "animation('settled')",
			"on_timer": "if(animation in ['normal'],add(rotate, 15))",
			"solid_area": [9,9,10,10],
			"solid_dimensions": ["effects"],
			"timer_frequency": 5,
			"variations": {
				"small": "[map(filter(doc.animation, rect = [1,61,17,77]), 'anim', set(anim.rect, [1,121,17,137]))]"
			},
			"zorder": 12
		},
		{
			"animation": {
				"accel_x": 0,
				"accel_y": 0,
				"duration": 10000,
				"events": "2:turnOff",
				"h": 0,
				"id": "normal",
				"image": "effects/particles2.png",
				"w": 0,
				"x": 0,
				"y": 0
			},
			"dies_on_inactive": true,
			"hitpoints": 300,
			"id": "particle_system_holder",
			"on_create": "[set(velocity_x, 0), set(velocity_y, 0), set(animation, 'normal'),
			add_particles('particles'),
			]",
			"on_timer": "set(hitpoints, hitpoints-10)",
			"on_turnOff": "[set(particles.generation_rate, 0)]",
			"particle_system": {
				"colors": ["fceec5ff","dfd7d3ff","a99e96aa","796d6288","584d4055"],
				"dot_rounded": true,
				"dot_size": 3,
				"generation_rate_millis": 10000,
				"id": "particles",
				"pos_x": 0,
				"pos_x_rand": 30,
				"pos_y": 0,
				"pos_y_rand": 30,
				"time_to_live": 60,
				"time_to_live_rand": 24,
				"type": "point",
				"velocity_x": -500,
				"velocity_x_rand": 1000,
				"velocity_y": -500,
				"velocity_y_rand": 1000
			},
			"timer_frequency": 10,
			"zorder": 100
		}
	],
	"on_start_level": "[ if(level.player.vars.stored_events[event_name] = 1, remove_object(me)),
					add(variations, [vars.color]),animation('normal')]",
	"on_unlock": "[ add(level.player.vars.stored_events, {event_name -> 1}),
				spawn('padlock.particle_system_holder', mid_x,mid_y,facing),
				spawn('impact_cloud',mid_x,mid_y,facing),
				map([0]*1d2, spawn('padlock.chunk',x+1d10, y+1d10, if(1d2=2,1,-1))),
				map([0]*1d2, spawn('padlock.chunk',x+1d10, y+1d10, if(1d2=2,1,-1), add(variations, ['small']))),
				sound('BlockBreak.ogg'),die()]",
	"variations": {
		"blue": "[map(filter(doc.animation, rect = [0,0,15,15]), 'anim', set(anim.rect, [80,0,95,15]))]",
		"cyan": "[map(filter(doc.animation, rect = [0,0,15,15]), 'anim', set(anim.rect, [96,0,111,15]))]",
		"gold": "null",
		"green": "[map(filter(doc.animation, rect = [0,0,15,15]), 'anim', set(anim.rect, [32,0,47,15]))]",
		"purple": "[map(filter(doc.animation, rect = [0,0,15,15]), 'anim', set(anim.rect, [64,0,79,15]))]",
		"red": "[map(filter(doc.animation, rect = [0,0,15,15]), 'anim', set(anim.rect, [48,0,63,15]))]",
		"silver": "[map(filter(doc.animation, rect = [0,0,15,15]), 'anim', set(anim.rect, [16,0,31,15]))]"
	},
	"zorder": -1
}