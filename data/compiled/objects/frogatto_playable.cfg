[object_type]
affected_by_currents="yes"
feet_width="1"
friction="2000"
functions="#function which returns true if the object is in an animation that
	   requires frogatto be on the ground#	
	  def animation_requires_standing(object_type obj)
	    obj.animation in ['stand', 'stand_up_slope', 'stand_down_slope', 'run', 'walk', 'lookup', 'crouch', 'enter_crouch', 'leave_crouch', 'turn', 'roll','skid'];
	  def set_facing(object_type obj, facing) if(obj.facing != facing and (not (obj.animation in ['interact', 'slide'])),
	           [facing(facing), if(obj.is_standing, animation('turn'))]);

	  def stand(object_type obj)
	   if(abs(obj.velocity_x) > 240 and (not obj.animation in ['walk']), animation('skid'),
	     if(abs(obj.slope_standing_on) < 20, animation('stand'),
		   if(obj.slope_standing_on*obj.facing > 0, animation('stand_down_slope'),
			                                animation('stand_up_slope'))));


	  #make Frogatto walk. anim can be either 'walk' or 'run'. Does checking
	   to make sure Frogatto is in a state where he can walk or run.
	   Will make Frogatto 'glide' if in mid air.#
	  def walk(object_type obj, dir, anim)
	    if(obj.is_standing and (not (obj.animation in ['walk', 'run', 'jump', 'jump_attack', 'turn', 'run', 'crouch', 'enter_crouch', 'roll', 'run_attack', 'energyshot', 'attack', 'up_attack', 'interact'])), [animation(anim), if(anim = 'run', [sound('run.ogg')])],
	       #Frogatto is in the air, so make him glide.#
		   if(((not obj.is_standing) and (not (obj.animation in ['slide', 'swim_up', 'swim_down', 'swim_side']))), add(obj.velocity_x, obj.vars.jump_glide*dir)));

	  #Function to attempt to make Frogatto crouch; does checking to make
	   sure he's in a state that allows entering a crouch.#
	  def crouch(object_type obj)
	  	if(((not obj.animation in ['crouch', 'enter_crouch', 'roll', 'interact'] ) and obj.is_standing), animation('enter_crouch'));
	  def roll(object_type obj)
	    if( (not FAT) and (obj.animation in ['crouch']) and obj.is_standing, animation('roll'));
	
	  def get_charge_cycles(object_type obj)
	    if(FAT, 0, if(obj.tmp.start_attack_cycle, obj.cycle - obj.tmp.start_attack_cycle, 0));
	  
	  #Function to make Frogatto attack. Does checking and chooses the
	   appropriate type of attack animation, if any.#
	  def attack(object_type obj, charge_cycles)
	  [if('fat' in obj.variations,
				[animation('spit')],[
					if(obj.animation in ['stand', 'leave_crouch', 'stand_up_slope', 'stand_down_slope', 'walk', 'enter_lookup', 'lookup','skid'], [animation(if(obj.ctrl_up, 'up_', '') + if(charge_cycles >= obj.vars.charge_time, 'energyshot', 'attack'))]),
					
					if(obj.animation in ['run'], animation('run_attack')),
	
					if(obj.animation in ['swim_side','swim_side_idle'], animation(if(charge_cycles >= obj.vars.charge_time, 'energyshot_swim_side', 'swim_side')) ),

					if(obj.animation in ['swim_down','swim_down_idle'], animation(if(charge_cycles >= obj.vars.charge_time, 'energyshot_swim_down', 'swim_down')) ),

					if(obj.animation in ['swim_up','swim_up_idle'], animation(if(charge_cycles >= obj.vars.charge_time, 'energyshot_swim_up', 'swim_up')) ),
					
					if(obj.animation in ['jump', 'fall'], animation( if(charge_cycles >= obj.vars.charge_time,
						if(obj.ctrl_down, 'energyshot_down', if(obj.ctrl_up, 'up_energyshot', 'energyshot_jump')),
						if(obj.ctrl_down, 'fall_spin_attack', 'jump_attack' )))),
					
					if(obj.animation in ['enter_crouch', 'crouch'] and (charge_cycles > obj.vars.charge_time), animation('energyshot_crouch'))]
				
	    )];

	  #Function to do a water-equivalent of standing.#
	  def float(object_type obj)
		animation('swim_side_idle');
	    
	  #Function to enter swimming frames.#
	  def swim(object_type obj,dirx,diry)
	    if(dirx or diry,
		 [
		  if(obj.animation != anim_wanted, animation(anim_wanted)),
		 add(obj.velocity_x, (obj.swim_accel*dirx)/1000),
		 add(obj.velocity_y, (obj.swim_accel*diry)/1000)
		 ])
			where anim_wanted = if(abs(diry) > 500, if(diry < 0, 'swim_up', 'swim_down'), 'swim_side')	
		;
		   
	  #Function to test if frogatto is invincible.#
	  def is_invincible(object_type obj)
	  	if(obj.invincible or obj.level.in_dialog or obj.tmp.time_last_hit and (abs(obj.tmp.time_last_hit - obj.cycle) < 100), 1, 0);
	  
	  #Function to test if frogatto is blinking due to being invincible#
	  def is_blinking_invincible(object_type obj)
	  	if(obj.tmp.time_last_hit and (abs(obj.tmp.time_last_hit - obj.cycle) < 100), 1, 0);

	  #function to decide if frogatto can slide down a wall#
		def can_slide(object_type obj)
		   (not FAT) and
           solid(obj.level, if(obj.facing > 0, obj.solid_rect.x2+1, obj.solid_rect.x-1), (obj.solid_rect.y + obj.solid_rect.y2*2)/3) and
		   obj.velocity_y < 300 and obj.velocity_y > -1000;


	   def swallowing_object(object_type frog)
	     if(frog.attached_objects, map(frog.attached_objects, 'obj',
	      if(abs(obj.midpoint_x - context.frog.midpoint_x) < 4, set(attached_objects, []), add(obj.midpoint_x, if(obj.midpoint_x > context.frog.midpoint_x, -4, 4)))
		  ));

	  1"
hitpoints="3"
hurt, and we can't because we're on top of another solid object, then
	 we take more damage#
	on_change_solid_dimensions_fail="if([add(hitpoints, -1), animation(if(FAT, 'spit', 'hurt')), set(green, 100), set(blue, 100), set(tmp.time_last_hit, cycle)])"
id="frogatto_playable"
is_human="true"
mass="5"
no_compile_image="characters/frogatto-spritesheet1.png"
on_add_object_fail="[if(object and vars.swallowed = null(),
	  [set(object.vars.removed_from_play, 1),
	   set(vars.swallowed, object),
	   add(variations, ['fat'])])]"
on_blocking_thrown_object="get_hit_by(null())"
on_change_animation_failure="[animation(previous_animation)]"
on_collide="[set(velocity_x, 0), if((animation in ['jump', 'fall']) and can_slide(self) and abs(velocity_x) > 200, [animation('slide'), set(velocity_y, 0)])]"
on_collide_damage="[if((not is_invincible(self)), [add(hitpoints, -surface_damage), animation(if(FAT, 'spit', 'hurt')), set(green, 100), set(blue, 100), set(tmp.time_last_hit, cycle), set(solid_dimensions_in, ['player'])])]"
on_collide_feet="[
	if(IPHONE_SYSTEM, if((not underwater), set(underwater_controls, 0))),
	if(standing_on and standing_on.consts.springiness > 0, [set(velocity_y, -((velocity_y*standing_on.consts.springiness)/100 + standing_on.consts.spring_amount)), fire_event(standing_on, 'bounced_on')],
	    [add(velocity_x, -velocity_x/4),
		 if(has_feet and animation != 'spit' and animation != 'jump_attack', stand(self))])]"
on_collide_head="[if(animation = 'jump', animation('fall')), if(velocity_y < 0, set(velocity_y, 0))]"
on_collide_object_attack="if(collide_with_area = 'body' and animation = 'fall_spin_attack' and collide_with.consts.springiness > 0 and velocity_y > 0, [set(velocity_y, -(velocity_y*collide_with.consts.springiness)/100), fire_event(collide_with, 'bounced_on')])"
on_collide_object_body="if( collide_with_area = 'attack' and ((not collide_with.spat_out_at) or collide_with.spat_out_at < level.cycle - 20) and collide_with.vars.team != vars.team,
		if(not (me in collide_with.tmp.already_hit),
		  
		  if((not is_invincible(self)),
		  [set(collide_with.tmp.already_hit, collide_with.tmp.already_hit + [me]),
	
			add(hitpoints, -collide_with.vars.damage), animation(if(FAT, 'spit', 'hurt')), set(green, 100), set(blue, 100), set(velocity_y,-1000), set(velocity_x,400 * collide_with.facing), set(tmp.time_last_hit, cycle), set(solid_dimensions_in, ['player'])],
			
			#avoiding being hit due to being invincible. if we have a shield,
			 we make it flash#
			 if(tmp.shield, fire_event(tmp.shield, 'flash'))
			)),

			#see if we're colliding with another object's interact area, in which case
			 we set it so we can interact with them.#
			if(collide_with_area = 'interact', set(can_interact, 2))
			)"
on_collide_object_grab="[if(collide_with_area = 'body' and (not vars.swallowed),
	            if(collide_with.tags.swallowable and collide_with.consts.size <= consts.max_swallow_size,
	                        [remove_object(collide_with),
	  if(animation in ['attack', 'jump_attack', 'up_attack'], set(attached_objects, [collide_with])),
	  set(collide_with.vars.removed_from_play, 1),
	  set(vars.swallowed, collide_with), add(variations, ['fat'])],
	  
	 #object is not swallowable, so do damage to it instead#
	 if(collide_with.get_hit_by, collide_with.get_hit_by(me))
	  ))]"
on_create="[animation('stand')]"
on_ctrl_attack="[attack(self, tmp.charge_cycles), set(tmp.start_attack_cycle, cycle), set(tmp.charge_cycles, 0)]"
on_ctrl_jump="[if(is_standing and velocity_y >= 0 and (not (animation in ['interact'])), [animation('jump'), add(velocity_x, velocity_x/2), if(ctrl_down and is_standing_on_platform, [set(fall_through_platforms, 15), add(velocity_y, vars.jump_power/10)], set(velocity_y, -vars.jump_power))]),
	            if(animation = 'slide', [facing(-facing), animation('jump'), set(velocity_x, -facing*800), set(velocity_y, -1000)])]"
on_ctrl_left="[set_facing(self, -1), roll(self), if(tmp.left and tmp.left > cycle - 15 or tmp.running = 1, [walk(self, -1, 'run'), set(tmp.running, 1)]), set(tmp.left, cycle), set(tmp.right, null())]"
on_ctrl_right="[set_facing(self, 1), roll(self), if(tmp.right and tmp.right > cycle - 15 or tmp.running = 1, [walk(self, 1, 'run'), set(tmp.running, 1)]), set(tmp.right, cycle), set(tmp.left, null())]"
on_ctrl_up="[if(abs(velocity_x) < 100, map(filter(level.active_chars, 'char', collides(context.me, 'body', char, 'interact')), 'obj', [set(tmp.interacting_with, obj), fire_event(obj, 'interact')]))]"
on_die="[spawn('die_cloud', midpoint_x, midpoint_y, facing)]"
on_end_attack_anim="[
		 if(('fat' in variations), animation('swallow')),
	                               stand(self)]"
on_end_crouch_anim="if(ctrl_down, animation('crouch'), animation('leave_crouch'))"
on_end_ctrl_attack="[set(tmp.charge_cycles, get_charge_cycles(self)), set(tmp.start_attack_cycle, null()), set(brightness, 255)]"
on_end_ctrl_left="[set(tmp.running, 0),
	     if((not (ctrl_left or ctrl_right)) and (animation in ['walk', 'run']), stand(self))]"
on_end_ctrl_right="[set(tmp.running, 0),
	     if((not (ctrl_left or ctrl_right)) and (animation in ['walk', 'run']), stand(self))]"
on_end_ctrl_up="if((animation in ['enter_lookup', 'lookup']), stand(self))"
on_end_emote_confused_anim="animation('stand')"
on_end_emote_geez_anim="animation('stand')"
on_end_emote_impatient_anim="animation('stand')"
on_end_emote_raisedfinger_anim="animation('stand')"
on_end_emote_talk_anim="animation('stand')"
on_end_energyshot_anim="stand(self)"
on_end_energyshot_crouch_anim="stand(self)"
on_end_energyshot_down_anim="stand(self)"
on_end_energyshot_jump_anim="stand(self)"
on_end_energyshot_swim_down_anim="float(self)"
on_end_energyshot_swim_side_anim="float(self)"
on_end_energyshot_swim_up_anim="float(self)"
on_end_enter_crouch_anim="animation('crouch')"
on_end_enter_lookup_anim="animation('lookup')"
on_end_fall_spin_attack_anim="animation('fall')"
on_end_hurt_anim="if((not FAT) and underwater, animation('swim_side_idle'), animation('stand'))"
on_end_interact_anim="animation('stand')"
on_end_jump_anim="animation('fall')"
on_end_jump_attack_anim="animation('fall')"
on_end_leave_crouch_anim="stand(self)"
on_end_lookup_anim="animation('lookup')"
on_end_roll_anim="animation('crouch')"
on_end_run_anim="[animation('run'),  spawn('dust_cloud_run', midpoint_x + 30*facing, y2 - 12, -facing)]"
on_end_run_attack_anim="[animation('skid'), set(tmp.running, 0)]"
on_end_skid_anim="stand(self)"
on_end_spit_anim="if(underwater, float(self), stand(self))"
on_end_stand_anim="stand(self)"
on_end_stand_down_slope_anim="stand(self)"
on_end_stand_up_slope_anim="stand(self)"
on_end_swallow_anim="stand(self)"
on_end_swim_down_anim="if(underwater,animation('swim_down'),stand(self))"
on_end_swim_side_anim="if(underwater,animation('swim_side'),stand(self))"
on_end_swim_side_idle_anim="float(self)"
on_end_swim_up_anim="if(underwater,animation('swim_up'),stand(self))"
on_end_turn_anim="stand(self)"
on_end_up_attack_anim="stand(self)"
on_end_up_energyshot_anim="stand(self)"
on_end_walk_anim="animation('walk')"
on_enter_anim="set(tmp.already_hit, [])"
on_enter_energyshot_anim="spawn('frogatto_energy_ball', midpoint_x + facing*30, midpoint_y +10, facing, [set_value('velocity_x', velocity_x/2 + facing*700), set_value('velocity_y', velocity_y/2)])"
on_enter_energyshot_crouch_anim="spawn('frogatto_energy_ball', midpoint_x + facing*30, midpoint_y, facing, [set_value('velocity_x', velocity_x/2 + facing*700), set_value('velocity_y', velocity_y/2)])"
on_enter_energyshot_down_anim="spawn('frogatto_energy_ball', midpoint_x, midpoint_y + 40, facing, [set_value('velocity_x', velocity_x/4), set_value('velocity_y', velocity_y + 1500)])"
on_enter_energyshot_jump_anim="spawn('frogatto_energy_ball', midpoint_x + facing*30, midpoint_y +10, facing, [set_value('velocity_x', if(velocity_x*facing > 0, velocity_x/2, 0) + facing*700)])"
on_enter_energyshot_swim_down_anim="spawn('frogatto_energy_ball', midpoint_x, midpoint_y + 40, facing, [set_value('velocity_x', velocity_x/4), set_value('velocity_y', velocity_y/2 + 1500)])"
on_enter_energyshot_swim_side_anim="spawn('frogatto_energy_ball', midpoint_x + facing*30, midpoint_y +10, facing, [set_value('velocity_x', velocity_x/2 + facing*700), set_value('velocity_y', velocity_y/2)])"
on_enter_energyshot_swim_up_anim="spawn('frogatto_energy_ball', midpoint_x, midpoint_y -40, facing, [set_value('velocity_x', velocity_x/2), set_value('velocity_y', velocity_y/2 - 700)])"
on_enter_fall_anim="set(zorder, 10)"
on_enter_fall_spin_attack_anim="set(zorder, 10)"
on_enter_jump_anim="set(zorder, 10)"
on_enter_jump_attack_anim="set(zorder, 10)"
on_enter_level="[animation('stand')]"
on_enter_run_anim="set(accel_x, vars.run_accel)"
on_enter_skid_anim="if(abs(velocity_x) > 300, spawn('dust_cloud_skid', midpoint_x + 36*facing, y2 - 10, facing))"
on_enter_slide_anim="[set(zorder, 10),
	  if(IPHONE_SYSTEM, set(underwater_controls, 0))]"
on_enter_spit_anim="[set(tmp.spit_force, 0), set(variations, filter(variations, 'v', v != 'fat'))]"
on_enter_stand_anim="if(abs(slope_standing_on) > 20, stand(self))"
on_enter_stand_down_slope_anim="if(slope_standing_on*facing < 20, stand(self))"
on_enter_stand_up_slope_anim="if(slope_standing_on*facing > -20, stand(self))"
on_enter_up_energyshot_anim="spawn('frogatto_energy_ball', midpoint_x, midpoint_y -40, facing, [set_value('velocity_x', velocity_x/2), set_value('velocity_y', min(velocity_y/2, 0) - 700)])"
on_enter_walk_anim="set(accel_x, vars.walk_accel)"
on_enter_water="[
	    if(IPHONE_SYSTEM, set(underwater_controls, 1)),
	    if((not FAT), [float(self), set(has_feet, 0)]),
		
		sound('WaterPlunge.ogg'),

		#splash if we are entering the water with reasonable velocity#
		if(velocity_y > 200,
	      [if(HIGH_END_SYSTEM, map([0] * 30, spawn('water_droplet', x + 1d50, midpoint_y, facing, [set('velocity_x', 200 - 1d400), set('velocity_y', -(1d300 + 300))]))),
	      spawn('water_splash', midpoint_x, water_bounds[1]+10, if(1d2=2,facing,-facing))]),
		#record the surface level of the water for future reference,
		 especially for splashing when we exit the water#
		set(tmp.water_surface, water_bounds[1]),
	    
	    if(HIGH_END_SYSTEM,
	    [add_wave(midpoint_x, y2, -2000, 5*velocity_y, 30*velocity_y, 300, 300),
		add_wave(midpoint_x, y2, 2000, 5*velocity_y, 30*velocity_y, 300, 300),
		add_wave(midpoint_x, y2, -1000, 3*velocity_y, 20*velocity_y, 200, 200),
		add_wave(midpoint_x, y2, 1000, 3*velocity_y, 20*velocity_y, 200, 200),
		add_wave(midpoint_x, y2, -500, 2*velocity_y, 10*velocity_y, 100, 100),
		add_wave(midpoint_x, y2, 500, 2*velocity_y, 10*velocity_y, 100, 100)])
	]"
on_exit_water="[
	    set(has_feet, 1),
		sound('WaterPlunge.ogg'),

		if(velocity_y < -200,
	      [spawn('water_splash', midpoint_x, tmp.water_surface+10, if(1d2=2,facing,-facing)),
	      if(HIGH_END_SYSTEM, map([0] * 30, spawn('water_droplet', x + 1d50, midpoint_y, facing, [set('velocity_x', 200 - 1d400), set('velocity_y', -(1d300 + 300))]))),
	      if(HIGH_END_SYSTEM,
	    [add_wave(midpoint_x, y2+100, 2000, -5*velocity_y, -30*velocity_y, 300, 300),
		add_wave(midpoint_x, y2+100, -2000, -5*velocity_y, -30*velocity_y, 300, 300),
		add_wave(midpoint_x, y2+100, 1000, -3*velocity_y, -20*velocity_y, 200, 200),
		add_wave(midpoint_x, y2+100, -1000, -3*velocity_y, -20*velocity_y, 200, 200),
		add_wave(midpoint_x, y2+100, 500, -2*velocity_y, -10*velocity_y, 100, 100),
		add_wave(midpoint_x, y2+100, -500, -2*velocity_y, -10*velocity_y, 100, 100)])]),

	
	animation('fall'), if(velocity_y < 0, add(velocity_y, -JUMP_OUT_OF_WATER_BOOST)),
	set(velocity_x, (velocity_x*JUMP_OUT_OF_WATER_BOOST_HORIZONTAL)/100)
	
	]"
on_hurtflicker="if(green = 100,[set(green, 255), set(blue, 255)], [set(green, 100), set(blue, 100)])"
on_interacting="if(tmp.interacting_with and tmp.fired_talk = 0, [set(tmp.fired_talk, 1), fire_event(tmp.interacting_with, 'talk')])"
on_leave_attack_anim="set(attached_objects, [])"
on_leave_crouch_anim="[set(tmp.lookdown_time, 0), set(vertical_look, 0)]"
on_leave_fall_anim="set(zorder, 0)"
on_leave_fall_spin_attack_anim="set(zorder, 0)"
on_leave_hurt_anim="[set(green, 255), set(blue, 255)]"
on_leave_jump_anim="set(zorder, 0)"
on_leave_jump_attack_anim="[set(zorder, 0), set(attached_objects, [])]"
on_leave_lookup_anim="[set(tmp.lookup_time, 0), set(vertical_look, 0)]"
on_leave_roll_anim="stop_sound('roll.ogg')"
on_leave_slide_anim="[set(zorder, 0), if(ctrl_left, facing(-1)), if(ctrl_right, facing(1))]"
on_leave_spit_anim="[
	     set(green, 255), set(blue, 255),
	     set(vars.swallowed.vars.removed_from_play, 0),
	     set(vars.swallowed.velocity_x, velocity_x + facing*(200 + tmp.spit_force*if(ctrl_up, 50, 200))),
	     set(vars.swallowed.velocity_y, velocity_y - (700 + if(ctrl_up, 200 + tmp.spit_force*100))),

	     #set the object's timestamp for when it was spat out, so we
		  can make ourselves invincible to it for a little while#
		 set(vars.swallowed.spat_out_at, level.cycle),
		 set(vars.swallowed, null()),
		 resolve_solid(vars.swallowed, facing, 0, 50),
		 resolve_solid(vars.swallowed, -facing, 0, 50),

         #set the enemy to be dimensionless, meaning it will only collide
		  with the level. If it collides with another object we expect
		  it to die.#
	     set(vars.swallowed.solid_dimensions_in, ['thrown']),
		 set(vars.swallowed.midpoint_x, midpoint_x),
		 set(vars.swallowed.y, y),
	     set(vars.swallowed.vars.team, vars.team),
		 set(vars.swallowed.animation, 'thrown'),

	     add_object(vars.swallowed),
		 if(underwater, set(has_feet, 0))
		 ]"
on_leave_up_attack_anim="set(attached_objects, [])"
on_load="set(invincible, 150)"
on_process="[
	    if((not is_standing) and animation_requires_standing(self), [animation('fall')]),
		if((not FAT) and underwater,
		  if(IPHONE_SYSTEM,
		    [
			  swim(self, ctrl_x, ctrl_y),
			  if((not ctrl_x) and (not ctrl_y), float(self)),
			  if(ctrl_x < 0 and facing > 0 or ctrl_x > 0 and facing < 0, set(facing, -facing))
			],

			[
			swim(self, (ctrl_right - ctrl_left)*if(ctrl_down or ctrl_up, 700, 1000), (ctrl_down - ctrl_up)*if(ctrl_left or ctrl_right, 700, 1000)),
			if((not (ctrl_left or ctrl_right or ctrl_up or ctrl_down)) and (animation in ['swim_side','swim_up','swim_down']),
		   float(self)) ]
		     ),
		   
		   ),

		   if(ctrl_left, if(tmp.running, walk(self, -1, 'run'), walk(self, -1, 'walk'))),
			if(ctrl_right, if(tmp.running, walk(self, 1, 'run'), walk(self, 1, 'walk'))),
			if(ctrl_down and (not (ctrl_left or ctrl_right)), crouch(self))
				]"
on_process_attack="swallowing_object(self)"
on_process_crouch="[add(tmp.lookdown_time, 1), if(tmp.lookdown_time = 50, set(vertical_look, 200))]"
on_process_fall="[
	    if(IPHONE_SYSTEM, if(underwater_controls, [
		         add(velocity_x, (jump_glide*ctrl_x)/1000),
		         add(velocity_y, (jump_glide*ctrl_y)/1000)])),
	    if(is_standing, animation('stand'))]"
on_process_jump="if(ctrl_jump, [add(velocity_y, -vars.jump_boost)])"
on_process_jump_attack="swallowing_object(self)"
on_process_lookup="[add(tmp.lookup_time, 1), if(tmp.lookup_time = 50, set(vertical_look, -200))]"
on_process_slide="if(not can_slide(self), animation('fall'))"
on_process_spit="if(ctrl_attack, add(tmp.spit_force, 1))"
on_start_interact="[animation('interact'), set(tmp.fired_talk, 0)]"
on_stuck="if(not underwater, [animation('jump'), add(velocity_y, -vars.jump_power)])"
on_timer="[
	    if(ctrl_right - ctrl_left != 0 and ctrl_right - ctrl_left != facing, set_facing(me, -facing)),
	    if(max(tmp.charge_cycles, get_charge_cycles(me)) >= vars.charge_time, set(brightness, if((cycle%4) > 1, 1000, 255))),
	    if(ctrl_up and (animation in ['stand','stand_up_slope','stand_down_slope']), animation('enter_lookup')),

#handle ending of invincibility#
	    if((cycle - tmp.time_last_hit)/2 = 50, set(solid_dimensions_in, ['player', 'common', 'boss'])),
		if(is_blinking_invincible(self), set(alpha,(wave(cycle*300)+1000)/10 + 100),
		         [if(underwater and water_object.consts.damage,
				    [add(hitpoints, -water_object.consts.damage),
					 set(tmp.time_last_hit, cycle)]),
				 set(alpha,255)])
	   ]"
solid_area="9,8,23,30"
solid_dimensions="player,common,boss"
timer_frequency="2"
traction_in_water="1000"
vehicle="false"
	[properties]
	attack_force="if(animation = 'run_attack', 140, 20)"
	energy_charge="min(vars.charge_time, if(ctrl_attack, cycle - tmp.start_attack_cycle, if(tmp.charge_cycles >= vars.charge_time, vars.charge_time, 0)))"
	get_hit_by="def(collide_with)
	  	            if(me.tmp.time_last_hit and (abs(me.tmp.time_last_hit - me.cycle) < 100), [],
				    [add(me.hitpoints, -if(collide_with, collide_with.vars.damage, 1)),
					 set(me.tmp.time_last_hit, me.cycle),
					 set(solid_dimensions_in, ['player']),
					 set(me.animation, 'hurt')
					 ])"
	[/properties]

	[consts]
	FAT="0"
	JUMP_OUT_OF_WATER_BOOST="1400"
	JUMP_OUT_OF_WATER_BOOST_HORIZONTAL="200"
	max_swallow_size="16"
	powerup_name="''"
	powerup_recharge="0"
	[/consts]

	[vars]
	charge_time="20"
	coins="100"
	damage="1"
	jump_boost="90"
	jump_glide="30"
	jump_power="1200"
	next_unlocked_item="null()"
	num_partial_hearts="0"
	powerup_time="0"
	run_accel="2800"
	swallowed="null()"
	swim_accel="140"
	team="'player'"
	unlocked_items="['heart_object','points_cube','points_cube']"
	walk_accel="1600"
	[/vars]

	[tmp]
	charge_cycles="0"
	last_shield="0"
	left="0"
	right="0"
	running="0"
	shield="null()"
	start_attack_cycle="0"
	time_last_hit="0"
	[/tmp]

	[particle_system]
	id="invincible_particles"
	max_x="40"
	max_y="50"
	min_x="0"
	min_y="0"
	spawn_rate="500"
	time_to_live="20"
	type="simple"
		[animation]
		duration="6"
		frame_info="1,1,1,1,242,0,9,9,2,2,2,2,251,0,7,7,3,3,3,3,258,0,5,5,4,4,4,4,263,0,3,3"
		frames="4"
		id="sparkle"
		image="compiled-0.png"
		rect="241,-1,251,9"
		[/animation]

		[animation]
		duration="4"
		frame_info="2,2,2,2,266,0,7,7,3,3,3,3,273,0,5,5,4,4,4,4,278,0,3,3"
		frames="3"
		id="sparkle"
		image="compiled-0.png"
		rect="264,-2,274,8"
		[/animation]

		[animation]
		duration="6"
		frame_info="3,3,3,3,281,0,5,5,4,4,4,4,286,0,3,3"
		frames="2"
		id="sparkle"
		image="compiled-0.png"
		rect="278,-3,288,7"
		[/animation]

		[animation]
		duration="6"
		frame_info="4,4,4,4,122,11,3,3"
		frames="1"
		id="sparkle"
		image="compiled-0.png"
		rect="118,7,128,17"
		[/animation]

	[/particle_system]

	[object_variation]
	id="powerup_invincible"
		[set_str]
		_target="elements.consts"
		powerup_name="'powerup_invincible'"
		powerup_recharge="100"
		[/set_str]

		[set_str]
		_target="self"
		on_get_powerup="[set(vars.powerup_time, 200), add_particles('invincible_particles')]"
		on_lose_powerup="[set(brightness, 255), set(invincible_particles.spawn_rate, 0)]"
		on_process="[{on_process}, set(brightness, (wave(cycle*30)+1000)/3 + 255)]"
		on_timer="[{on_timer}, set(invincible, 10), add(vars.powerup_time, -1), if(vars.powerup_time <= 0, [fire_event('lose_powerup'), set(variations, filter(variations, 'v', v != 'powerup_invincible'))])]"
		[/set_str]

	[/object_variation]

	[object_variation]
	id="powerup_shooting"
		[set_str]
		_target="elements.consts"
		powerup_name="'powerup_shooting'"
		powerup_recharge="150"
		[/set_str]

		[set_str]
		_target="self"
		on_get_powerup="[set(vars.powerup_time, 300), set(vars.charge_time, 0)]"
		on_lose_powerup="[set(brightness, 255), set(vars.charge_time, 20)]"
		on_timer="[{on_timer},  add(vars.powerup_time, -1), if(vars.powerup_time <= 0, [fire_event('lose_powerup'), set(variations, filter(variations, 'v', v != 'powerup_shooting'))])]"
		[/set_str]

	[/object_variation]

	[object_variation]
	id="powerup_reflexes"
		[set_str]
		_target="elements.consts"
		powerup_name="'powerup_reflexes'"
		powerup_recharge="150"
		[/set_str]

		[set_str]
		_target="self"
		on_get_powerup="[set(vars.powerup_time, 300), set(level.chars_immune_from_freeze, [me]), set(tmp.start_powerup, cycle)
		 ]"
		on_lose_powerup="[set(brightness, 255), set(level.tint, [0,0,0,0]), blur(0, 0, 0)]"
		on_process="[{on_process}, set(level.time_freeze, level.time_freeze + min(50, cycle - tmp.start_powerup, vars.powerup_time/2)*12), set(level.tint, [0, 64, 32, (((wave(cycle*16)+2000)/16)*min(50, cycle - tmp.start_powerup, vars.powerup_time/2))/50])]"
		on_timer="[{on_timer},  blur(40, 10, 10), set(vars.powerup_time, vars.powerup_time-1), if(vars.powerup_time <= 0, [fire_event('lose_powerup'), set(variations, filter(variations, 'v', v != 'powerup_reflexes'))])]"
		[/set_str]

	[/object_variation]

	[object_variation]
	id="fat"
		[set_str]
		_target="filter(elements.animation, image = 'characters/frogatto-spritesheet1.png')"
		image="characters/fat-frogatto-spritesheet1.png"
		[/set_str]

		[set_str]
		FAT="1"
		_target="elements.consts"
		jump_boost="80"
		jump_glide="20"
		jump_power="1200"
		[/set_str]

		[set_str]
		_target="filter(elements.animation, id = 'walk')"
		accel_x="1300"
		[/set_str]

		[set_str]
		_target="filter(elements.animation, id = 'run')"
		accel_x="1900"
		[/set_str]

		[set_str]
		_target="self"
		[/set_str]

	[/object_variation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duplicates="6"
	duration="6"
	frames="3"
	id="stand"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="2,2,33,34"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	frames="3"
	id="stand"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="107,2,138,34"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	frames="3"
	h="35"
	id="stand_up_slope"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	reverse="yes"
	w="32"
	x="212"
	y="2"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	frames="3"
	h="35"
	id="stand_down_slope"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	reverse="yes"
	w="32"
	x="317"
	y="2"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="3"
	frames="1"
	id="lookup"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="37,233,68,265"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="3"
	frames="1"
	id="enter_lookup"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="2,233,33,265"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="1"
	frames="1"
	id="crouch"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="107,197,138,229"
	rotate_on_slope="yes"
	solid_area="9,17,23,30"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="3"
	frames="3"
	id="enter_crouch"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="2,197,33,229"
	rotate_on_slope="yes"
	solid_area="9,17,23,30"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="3"
	frames="3"
	id="leave_crouch"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	play_backwards="yes"
	rect="2,197,33,229"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="1000"
	accel_y="80"
	body_area="all"
	duration="3"
	frames="11"
	h="33"
	id="roll"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	scale="2"
	solid_area="8,17,24,30"
	sound="roll.ogg"
	velocity_x="500"
	w="32"
	x="107"
	y="197"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	frames="8"
	id="walk"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="2,110,49,157"
	solid_area="17,18,31,40"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	frames="4"
	frames_per_row="2"
	h="48"
	id="run"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	solid_area="17,18,31,40"
	w="48"
	x="410"
	y="95"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="10"
	frames="1"
	h="48"
	id="skid"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	solid_area="17,18,31,40"
	w="48"
	x="461"
	y="40"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	frames="1"
	h="33"
	id="turn"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	w="32"
	x="387"
	y="40"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	frames="2"
	h="48"
	id="jump"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	solid_area="9,13,23,35"
	sound="FrogJump1.ogg,FrogJump2.ogg"
	w="32"
	x="2"
	y="38"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="12"
	frames="2"
	h="48"
	id="fall"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	solid_area="9,13,23,35"
	w="32"
	x="72"
	y="38"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	frame_info="2,9,23,2,821,108,24,27,4,7,25,2,845,108,20,29,3,13,24,2,865,108,22,23,3,3,24,2,887,108,22,33,2,5,23,2,909,108,24,31,0,6,21,2,933,108,28,30"
	frames="6"
	id="swallow"
	image="compiled-1.png"
	rect="819,99,867,136"
	solid_area="6,13,20,35"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="4"
	frame_info="6,3,5,3,144,300,23,29,8,2,6,4,167,300,20,29,5,3,5,4,187,300,24,28"
	frames="3"
	id="spit"
	image="compiled-1.png"
	rect="138,297,171,331"
	solid_area="6,8,20,30"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="6,11,24,36"
	duration="2"
	events="3:side_attack_fx_one,6:side_attack_fx_two,9:side_attack_fx_three,8:side_attack_contact"
	frames="8"
	grab_area="32,24,49,34"
	h="37"
	id="attack"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	reverse="no"
	solid_area="7,12,21,34"
	sound="punch.ogg"
	w="49"
	x="2"
	y="269"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	attack_area="16,0,28,10"
	body_area="all"
	duration="2"
	events="6:up_attack_contact"
	frames="6"
	h="44"
	id="up_attack"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	reverse="no"
	solid_area="7,19,21,41"
	sound="punch.ogg"
	w="41"
	x="2"
	y="351"
	[/animation]

	[animation]
	accel_x="3200"
	accel_y="80"
	attack_area="20,14,70,40"
	body_area="0,0,30,40"
	duration="3"
	events="6:7:8:9:10:11:run_attack_contact"
	frames="5"
	h="29"
	id="run_attack"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	reverse="no"
	solid_area="18,6,32,28"
	sound="slash.ogg"
	w="68"
	x="2"
	y="403"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="6,11,24,36"
	duration="2"
	events="3:side_attack_fx_one,6:side_attack_fx_two,9:side_attack_fx_three,8:side_attack_contact"
	frames="9"
	grab_area="28,19,43,31"
	h="37"
	id="jump_attack"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	reverse="no"
	sound="kick.ogg"
	w="49"
	x="2"
	y="310"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	attack_area="solid:13,30,23,42"
	body_area="all"
	duration="3"
	events="3:6:9:12:15:18:21:24:spin_attack_contact"
	frames="8"
	h="42"
	id="fall_spin_attack"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	reverse="no"
	sound="SpinAttack.ogg"
	w="32"
	x="3"
	y="436"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="18"
	events="6:12:18:hurtflicker"
	frames="1"
	id="hurt"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="271,351,303,383"
	sound="TakeDamage.wav"
	velocity_x="-1000"
	velocity_y="-1000"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	collide_h="16"
	collide_w="15"
	collide_x="10"
	collide_y="6"
	duration="4"
	events="15:interacting"
	feet_x="16"
	feet_y="32"
	frames="4"
	h="32"
	id="interact"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	reverse="yes"
	scale="2"
	w="32"
	x="72"
	y="161"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="10"
	body_area="all"
	duration="30"
	frames="1"
	h="34"
	id="slide"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	solid_area="14,17,28,30"
	w="32"
	x="352"
	y="40"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	frame_info="13,14,13,6,831,270,21,28,12,14,13,6,852,270,22,28,13,15,12,5,874,270,22,28,11,14,11,5,896,270,25,29,11,14,11,6,921,270,25,28,13,15,12,6,946,270,22,27"
	frames="6"
	frames_per_row="2"
	id="push"
	image="compiled-1.png"
	rect="818,256,864,303"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="6"
	frame_info="4,5,4,5,0,493,31,26,4,5,4,5,31,493,31,26,4,5,4,5,62,493,31,26,4,5,4,5,93,493,31,26,4,5,4,5,124,493,31,26,4,5,4,5,155,493,31,26"
	frames="6"
	frames_per_row="3"
	id="swim_side_idle"
	image="compiled-1.png"
	rect="-4,488,34,523"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="6"
	frame_info="3,4,3,5,817,413,33,27,3,5,3,5,850,413,33,26,3,4,3,5,883,413,33,27,3,4,3,5,916,413,33,27,3,5,3,5,949,413,33,26,3,4,3,5,982,413,33,27"
	frames="6"
	frames_per_row="3"
	id="swim_down_idle"
	image="compiled-1.png"
	rect="814,409,852,444"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="6"
	frame_info="7,1,6,2,603,108,26,33,7,1,6,3,629,108,26,32,7,1,6,2,655,108,26,33,7,1,6,2,681,108,26,33,7,1,6,3,707,108,26,32,7,1,6,2,733,108,26,33"
	frames="6"
	frames_per_row="3"
	id="swim_up_idle"
	image="compiled-1.png"
	rect="596,107,634,142"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="6"
	frame_info="5,5,4,6,271,519,30,25,5,5,4,6,301,519,30,25,4,5,2,7,331,519,33,24"
	frames="3"
	id="swim_side"
	image="compiled-1.png"
	rect="266,514,304,549"
	sound="Paddle4.ogg,Paddle5.ogg,Paddle6.ogg,Paddle7.ogg"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="6"
	frame_info="11,8,11,2,695,413,17,26,6,7,6,8,712,413,27,21,7,1,5,8,739,413,27,27"
	frames="3"
	id="swim_down"
	image="compiled-1.png"
	rect="684,405,722,440"
	sound="Paddle4.ogg,Paddle5.ogg,Paddle6.ogg,Paddle7.ogg"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="6"
	frame_info="8,2,7,8,438,207,24,26,6,2,6,4,462,207,27,30,9,2,7,3,489,207,23,31"
	frames="3"
	id="swim_up"
	image="compiled-1.png"
	rect="430,205,468,240"
	sound="Paddle4.ogg,Paddle5.ogg,Paddle6.ogg,Paddle7.ogg"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	frame_info="1,12,10,6,798,467,30,26,1,12,7,6,828,467,33,26"
	frames="2"
	frames_per_row="1"
	id="energyshot"
	image="compiled-1.png"
	rect="797,455,837,498"
	solid_area="6,14,20,36"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	frame_info="4,9,7,5,32,239,30,30,4,9,4,5,62,239,33,30"
	frames="2"
	frames_per_row="1"
	id="energyshot_jump"
	image="compiled-1.png"
	rect="28,230,68,273"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	frame_info="5,3,10,6,897,980,26,35,5,1,10,6,923,980,26,37"
	frames="2"
	frames_per_row="1"
	id="up_energyshot"
	image="compiled-0.png"
	rect="892,977,932,1020"
	solid_area="12,14,26,36"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	frame_info="6,8,9,8,229,207,26,28,6,8,9,5,255,207,26,31"
	frames="2"
	frames_per_row="1"
	id="energyshot_down"
	image="compiled-1.png"
	rect="223,199,263,242"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="8"
	frame_info="3,16,6,10,343,632,32,18,3,16,3,10,375,632,35,18"
	frames="2"
	frames_per_row="1"
	id="energyshot_crouch"
	image="compiled-1.png"
	rect="340,616,380,659"
	solid_area="6,14,20,27"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="8"
	frame_info="0,5,2,5,861,467,37,26,0,5,0,5,898,467,39,26"
	frames="2"
	frames_per_row="1"
	id="energyshot_swim_side"
	image="compiled-1.png"
	rect="861,462,899,497"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="8"
	frame_info="3,2,11,3,931,73,25,31,3,2,11,0,956,73,25,34"
	frames="2"
	frames_per_row="1"
	id="energyshot_swim_down"
	image="compiled-1.png"
	rect="928,71,966,106"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="8"
	frame_info="4,3,10,0,918,0,25,33,4,0,10,0,943,0,25,36"
	frames="2"
	frames_per_row="1"
	id="energyshot_swim_up"
	image="compiled-1.png"
	rect="914,-3,952,32"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	frame_info="4,7,6,1,211,300,22,25,3,7,5,1,233,300,24,25,0,6,5,1,257,300,27,26,0,5,5,1,284,300,27,27,0,4,5,1,311,300,27,28,0,3,5,1,338,300,27,29,0,4,5,1,365,300,27,28,0,5,5,1,392,300,27,27"
	frames="8"
	id="emote_geez"
	image="compiled-1.png"
	rect="207,293,238,325"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	frame_info="6,6,6,1,479,385,20,26,6,6,6,1,499,385,20,26,6,5,5,1,519,385,21,27,7,6,3,1,540,385,22,26,7,7,5,1,562,385,20,25,7,7,5,1,582,385,20,25,7,7,5,1,602,385,20,25,7,7,5,1,622,385,20,25,7,7,5,1,642,385,20,25,7,7,5,1,662,385,20,25,7,7,5,1,682,385,20,25,7,7,5,1,702,385,20,25,7,6,3,1,722,385,22,26,6,5,5,1,744,385,21,27"
	frames="14"
	frames_per_row="7"
	id="emote_confused"
	image="compiled-1.png"
	rect="473,379,504,411"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	frame_info="6,6,6,1,140,413,20,26,6,5,6,1,160,413,20,27,6,5,6,1,180,413,20,27,6,6,6,1,200,413,20,26,6,6,5,1,220,413,21,26,6,6,3,1,241,413,23,26,6,6,3,1,264,413,23,26,6,6,2,1,287,413,24,26,6,6,0,1,311,413,26,26,6,6,0,1,337,413,26,26,6,6,3,1,363,413,23,26,6,6,3,1,386,413,23,26,6,6,2,1,409,413,24,26,6,6,0,1,433,413,26,26,6,6,5,1,459,413,21,26,6,6,6,1,480,413,20,26"
	frames="16"
	frames_per_row="4"
	id="emote_impatient"
	image="compiled-1.png"
	rect="134,407,165,439"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	frame_info="6,6,6,1,0,270,20,26,6,4,3,1,20,270,23,28,6,3,2,1,43,270,24,29,6,2,1,1,67,270,25,30,6,3,1,1,92,270,25,29,6,4,1,1,117,270,25,28,6,5,1,1,142,270,25,27,6,3,1,1,167,270,25,29,6,3,1,1,192,270,25,29,6,4,1,1,217,270,25,28,6,5,1,1,242,270,25,27,6,4,2,1,267,270,24,28,6,3,3,1,291,270,23,29,6,4,6,1,314,270,20,28"
	frames="14"
	frames_per_row="7"
	id="emote_raisedfinger"
	image="compiled-1.png"
	rect="-6,264,25,296"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	frame_info="6,6,6,1,334,270,20,26,6,4,6,1,354,270,20,28,6,3,6,1,374,270,20,29,6,2,6,1,394,270,20,30,6,3,6,1,414,270,20,29,6,4,6,1,434,270,20,28,6,5,6,1,454,270,20,27,6,3,6,1,474,270,20,29,6,3,6,1,494,270,20,29,6,4,6,1,514,270,20,28,6,5,6,1,534,270,20,27,6,4,6,1,554,270,20,28,6,3,6,1,574,270,20,29,6,2,6,1,594,270,20,30,6,3,6,1,614,270,20,29,6,4,6,1,634,270,20,28"
	frames="16"
	frames_per_row="8"
	id="emote_talk"
	image="compiled-1.png"
	rect="328,264,359,296"
	[/animation]

	[object_variation]
	id="upgrade_shield"
		[set_str]
		_target="self"
		on_enter_enter_crouch_anim="if((not tmp.shield),
			    [if(invincible < 25, set(invincible, 25)),
				 add_object(shield_obj), set(tmp.shield, shield_obj),
				 schedule(50, set(tmp.shield, null()))]
				  where shield_obj = object('frogatto_playable.shield', x+30, y+30, 1))"
		[/set_str]

	[/object_variation]

	[object_type]
	id="shield"
	on_end_flash_anim="die()"
	on_end_normal_anim="die()"
	on_flash="[set(animation, 'flash'), set(time_in_animation, time_in_animation)]"
	on_process="if(cycle < 20, set(alpha, cycle*4), set(alpha, 80 - (cycle-20)*14))"
		[animation]
		duration="25"
		frames="1"
		id="normal"
		image="characters/frogatto-spritesheet1.png"
		rect="286,439,317,471"
		[/animation]

		[animation]
		duration="25"
		frames="1"
		id="flash"
		image="characters/frogatto-spritesheet1.png"
		rect="321,439,352,471"
		[/animation]

	[/object_type]

[/object_type]

