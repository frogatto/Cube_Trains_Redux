[prototype]
affected_by_currents="yes"
feet_width="5"
friction="2000"
functions="#Function to do a water-equivalent of standing.#
	  def float(object_type obj)
		animation('swim_side_idle');
	  #function which returns true if the object is in an animation that
	   requires frogatto be on the ground#	
	  def animation_requires_standing(object_type obj)
	    obj.animation in ['stand', 'stand_up_slope', 'stand_down_slope', 'run', 'walk', 'land', 'lookup', 'crouch', 'enter_crouch', 'leave_crouch', 'turn', 'roll','skid'];
	  def set_facing(object_type obj, facing) if(obj.facing != facing and (not (obj.animation in ['interact', 'slide'])),
	           [facing(facing), if(obj.is_standing, animation('turn'))]);

	  def stand(object_type obj)
	   if(abs(obj.velocity_x) > 240 and (not obj.animation in ['walk']), animation('skid'),
	     if(abs(obj.slope_standing_on) < 20, if(not obj.animation in ['stand'], animation('stand')),
		   if(obj.slope_standing_on*obj.facing > 0, animation('stand_down_slope'),
			                                animation('stand_up_slope'))));


	  #make Frogatto walk. anim can be either 'walk' or 'run'. Does checking
	   to make sure Frogatto is in a state where he can walk or run.
	   Will make Frogatto 'glide' if in mid air.#
	  def walk(object_type obj, dir, anim)
	    if(obj.is_standing and (not (obj.animation in ['walk', 'run', 'jump', 'fall', 'jump_attack', 'turn', 'run', 'crouch', 'enter_crouch', 'roll', 'run_attack', 'energyshot', 'attack', 'walk_attack', 'up_attack', 'firebreath_begin','firebreath_cycle','firebreath_end','interact', 'spit'])), [animation(anim), if(anim = 'run', [sound('run.wav')])],
	       #Frogatto is in the air, so make him glide.#
		   if(((not obj.is_standing) and (not (obj.animation in ['slide', 'swim_up', 'swim_down', 'swim_side']))), add(obj.velocity_x, obj.vars.jump_glide*dir)));

	  #Function to attempt to make Frogatto crouch; does checking to make
	   sure he's in a state that allows entering a crouch.#
	  def crouch(object_type obj)
	  	if(((not obj.animation in ['crouch', 'enter_crouch', 'roll', 'interact'] ) and obj.is_standing), animation('enter_crouch'));
	  def roll(object_type obj)
	    if( (not FAT) and (obj.animation in ['crouch']) and obj.is_standing, #animation('roll')#0);


	  #Function to enter swimming frames.#
	  def swim(object_type obj,dirx,diry)
	    if(dirx or diry,
		 [
		  if(obj.animation != anim_wanted, animation(anim_wanted)),
		 add(obj.velocity_x, (obj.swim_accel*dirx)/1000),
		 add(obj.velocity_y, (obj.swim_accel*diry)/1000)
		 ])
			where anim_wanted = if(abs(diry) > 500, if(diry < 0, 'swim_up', 'swim_down'), 'swim_side')	
		;

	  #function to decide if frogatto can slide down a wall#
		def can_slide(object_type obj)
		   (not FAT) and
           solid(obj.level, if(obj.facing > 0, obj.solid_rect.x2+1, obj.solid_rect.x-1), (obj.solid_rect.y + obj.solid_rect.y2*2)/3) and
		   (obj.velocity_y < 300 and obj.velocity_y > -1000 or obj.ctrl_jump and obj.tmp.pressed_jump_in_air);


	   def swallowing_object(object_type frog)
	     if(frog.attached_objects, map(frog.attached_objects, 'obj',
	      if(abs(obj.midpoint_x - context.frog.midpoint_x) < 4, set(attached_objects, []), add(obj.midpoint_x, if(obj.midpoint_x > context.frog.midpoint_x, -4, 4)))
		  ));
	   
	   


	  1"
hitpoints="4"
id="frogatto_playable"
is_human="true"
load_variations="fat"
mass="5"
no_compile_image="characters/frogatto-spritesheet1.png,characters/frogatto-spritesheet3.png,characters/frogatto-spritesheet4.png"
on_add_object_fail="[if(object and vars.swallowed = null(),
	  [set(object.vars.removed_from_play, 1),
	   set(vars.swallowed, object),
	   add(gravity_shift, object.vars.swallow_gravity),
	   add(variations, ['fat'])])]"
on_change_animation_failure="fire_event('solidity_fail')"
on_change_solid_dimensions_fail="[if(not is_invincible_posthit,
	                    [add(hitpoints, -1), set(vars.time_last_hit, cycle)]),
	          if(not is_invincible_posthit, animation(if(FAT, 'spit', 'hurt')))]"
on_check_water="[if(underwater and (not FAT), animation('swim_side')), if(IPHONE_SYSTEM, set(underwater_controls, underwater))]"
on_child_spawned="if(child.type = 'frogatto_playable.tongue_tip',
	                  [set(tmp.tongue_tip, child), set(child.tmp.frog, me)])"
on_collide_damage="[if((not is_invincible), [add(hitpoints, -max(1, surface_damage)), cause_flinch(collide_with), display_hurt_visuals(), set(vars.time_last_hit, cycle), set(solid_dimensions_in, ['player'])])]"
on_collide_feet="[
	if(IPHONE_SYSTEM, if((not underwater), set(underwater_controls, 0))),
	if(collide_with and collide_with.consts.springiness > 0,
		bounce_on(me, collide_with),
	    [set(velocity_x, velocity_x/2),
		 if(has_feet and animation != 'spit' and animation != 'jump_attack', if(velocity_y > 1300, animation('land'),stand(self))  )])]"
on_collide_head="[if(animation = 'jump', animation('bumphead')), if(velocity_y < 0, set(velocity_y, 0))]"
on_collide_object_attack="if(collide_with_area = 'body' and animation = 'fall_spin_attack' and collide_with.consts.springiness > 0 and velocity_y > 0,
	   bounce_on(me, collide_with))"
on_collide_object_body="if( collide_with_area = 'attack' and ((not collide_with.spat_out_at) or collide_with.spat_out_at < level.cycle - 20) and collide_with.team != team,
				if(not is_invincible, get_hit_by(collide_with),  if(tmp.shield, fire_event(tmp.shield, 'flash'))),
				
				#if it wasn't the attack area that hit our body, respond to other areas#
				#see if we're colliding with another object's interact area, in which case#
				 #we set it so we can interact with them.#
			if(collide_with_area = 'interact', set(can_interact, 2))
			)"
on_collide_object_grab="[if(collide_with_area = 'body' and (not vars.swallowed),
	            if(collide_with.tags.swallowable and collide_with.consts.size <= consts.max_swallow_size,
	                        [remove_object(collide_with),
	  if(animation in ['attack', 'jump_attack', 'up_attack'], set(attached_objects, [collide_with])),
	  [set(collide_with.vars.removed_from_play, 1),sound('Gulp.wav')],
	  set(vars.swallowed, collide_with), fire_event(collide_with, 'swallowed'),
	  add(gravity_shift, collide_with.vars.swallow_gravity),
	  add(variations, ['fat'])],
	  
	 #object is not swallowable, so do damage to it instead#
	 if(collide_with.get_hit_by, collide_with.get_hit_by(me))
	  ))]"
on_collide_side="[set(velocity_x, 0), if((animation in ['jump', 'fall']) and can_slide(self) and (abs(velocity_x) > 200 or ctrl_jump and tmp.pressed_jump_in_air), [animation('slide'), set(velocity_y, 0)])]"
on_create="[set(lights, circle_light(me, vars.lightSize)), animation('stand'),]"
on_ctrl_attack="set(vars.current_ability, (vars.current_ability + 1) % vars.ability_list.size)"
on_ctrl_down="if(animation = 'slide', animation('fall'))"
on_ctrl_jump="[set(tmp.pressed_jump_in_air, (not is_standing)),
				if(is_standing and (not (animation in ['interact', 'fall', 'jump'])), [
    animation('jump'),
    set(velocity_x, velocity_x + velocity_x/2),
    if(ctrl_down and is_standing_on_platform,
        [set(fall_through_platforms, 10),
        set(velocity_y, velocity_y + jump_power/10)],
        [set(velocity_y, -jump_power),
        add(velocity_x, velocity_x/2)])]),
	            if(animation = 'slide', [facing(-facing), animation('jump'), set(velocity_x, -facing*800), set(velocity_y, -1000)])]"
on_ctrl_left="[set_facing(self, -1), roll(self), if(tmp.left and tmp.left > cycle - 15 or tmp.running = 1, [walk(self, -1, 'run'), set(tmp.running, 1)]), set(tmp.left, cycle), set(tmp.right, null())]"
on_ctrl_right="[set_facing(self, 1), roll(self), if(tmp.right and tmp.right > cycle - 15 or tmp.running = 1, [walk(self, 1, 'run'), set(tmp.running, 1)]), set(tmp.right, cycle), set(tmp.left, null())]"
on_ctrl_up="[
	if(abs(velocity_x) < 100 and is_standing, map(filter(level.active_chars, 'char', collides(context.me, 'body', char, 'interact')), 'obj', [set(tmp.interacting_with, obj), fire_event(obj, 'interact')]))]"
on_die="[remove_object(tmp.tongue_tip), remove_object(tmp.tongue_shaft), spawn('die_cloud', midpoint_x, midpoint_y, facing)]"
on_display_gold="[ if( (cycle - vars.last_got_gold > 20) and (vars.gold_counter > 0), [spawn('text_flash',midpoint_x,midpoint_y-20,1,[set_var('txt','+'+vars.gold_counter)]), set(vars.gold_counter,0)], schedule(10,fire_event('display_gold')))]"
on_end_attack_anim="[
		 if(('fat' in variations), animation('swallow')),
	                               stand(self)]"
on_end_bumphead_anim="animation('fall')"
on_end_crouch_anim="if(ctrl_down, animation('crouch'), animation('leave_crouch'))"
on_end_ctrl_left="[set(tmp.running, 0),
	     if((not (ctrl_left or ctrl_right)) and (animation in ['walk', 'run']), stand(self))]"
on_end_ctrl_right="[set(tmp.running, 0),
	     if((not (ctrl_left or ctrl_right)) and (animation in ['walk', 'run']), stand(self))]"
on_end_ctrl_up="if((animation in ['enter_lookup', 'lookup']), stand(self))"
on_end_emote_confused_anim="animation('stand')"
on_end_emote_geez_anim="animation('stand')"
on_end_emote_impatient_anim="animation('stand')"
on_end_emote_nod_anim="animation('stand')"
on_end_emote_oh_anim="animation('stand')"
on_end_emote_raisedfinger_anim="animation('stand')"
on_end_emote_talk_anim="animation('stand')"
on_end_energyshot_anim="stand(self)"
on_end_energyshot_down_slope_anim="stand(self)"
on_end_energyshot_jump_anim="stand(self)"
on_end_energyshot_up_slope_anim="stand(self)"
on_end_enter_crouch_anim="animation('crouch')"
on_end_enter_lookup_anim="animation('lookup')"
on_end_fall_spin_attack_anim="animation('fall')"
on_end_firebreath_begin_anim="animation('firebreath_cycle')"
on_end_firebreath_cycle_anim="if(shoot_fire_active,animation('firebreath_cycle'),animation('firebreath_end'))"
on_end_firebreath_end_anim="stand(self)"
on_end_hurt_anim="if((not FAT) and underwater, animation('swim_side_idle'), animation('stand'))"
on_end_idle_eyeball_anim="stand(self)"
on_end_interact_anim="animation('stand')"
on_end_jump_anim="animation('fall')"
on_end_jump_attack_anim="animation('fall')"
on_end_land_anim="stand(self)"
on_end_leave_crouch_anim="stand(self)"
on_end_lookup_anim="animation('lookup')"
on_end_roll_anim="animation('crouch')"
on_end_run_anim="[animation('run'),  if(abs(velocity_x) > 300, spawn('dust_cloud_run', midpoint_x + 30*facing, y2 - 12, -facing))]"
on_end_run_attack_anim="[animation('skid'), set(tmp.running, 0)]"
on_end_skid_anim="stand(self)"
on_end_spit_anim="if(underwater, float(self), stand(self))"
on_end_stand_anim="if((not FAT) and (tmp.idleness_counter >=9) and level.zoom = 1, 
									[fire_event('idling'), set(tmp.idleness_counter, 0)],
									[animation('stand'), add(tmp.idleness_counter, 1)])"
on_end_stand_down_slope_anim="stand(self)"
on_end_stand_up_slope_anim="stand(self)"
on_end_swallow_anim="stand(self)"
on_end_swim_down_anim="if(underwater,animation('swim_down'),stand(self))"
on_end_swim_side_anim="if(underwater,animation('swim_side'),stand(self))"
on_end_swim_side_idle_anim="float(self)"
on_end_swim_up_anim="if(underwater,animation('swim_up'),stand(self))"
on_end_turn_anim="stand(self)"
on_end_up_attack_anim="stand(self)"
on_end_walk_anim="animation('walk')"
on_end_walk_attack_anim="animation('walk')"
on_enter_fall_anim="set(zorder, 10)"
on_enter_fall_spin_attack_anim="[set(zorder, 10), add(velocity_y, 500), set(velocity_x, velocity_x/2), set(tmp.no_flinch_attack, 1)]"
on_enter_jump_anim="set(zorder, 10)"
on_enter_jump_attack_anim="set(zorder, 10)"
on_enter_land_anim="[spawn('dust_cloud_skid', midpoint_x + 20*facing, y2 - 8, facing), spawn('dust_cloud_skid', midpoint_x - 20*facing, y2 - 8, -facing)]"
on_enter_level="[if(not (level.id in vars.levels_visited),
	                 add(vars.levels_visited, [level.id])),
					 animation('stand')#,
					 if(self.hitpoints < 1, achievement('sans_hat'))#]"
on_enter_run_anim="[set(accel_x, vars.run_accel), set(vars.bounced_on_chain,0),]"
on_enter_skid_anim="if(abs(velocity_x) > 300, spawn('dust_cloud_skid', midpoint_x + 36*facing, y2 - 10, facing))"
on_enter_slide_anim="[set(zorder, 10),
	  if(IPHONE_SYSTEM, set(underwater_controls, 0))]"
on_enter_spit_anim="[set(tmp.spit_force, 0), set(variations, filter(variations, 'v', v != 'fat'))]"
on_enter_stand_anim="if(abs(slope_standing_on) > 20, stand(self))"
on_enter_stand_down_slope_anim="if(slope_standing_on*facing < 20, stand(self))"
on_enter_stand_up_slope_anim="if(slope_standing_on*facing > -20, stand(self))"
on_enter_walk_anim="[set(accel_x, vars.walk_accel), set(vars.bounced_on_chain,0),]"
on_enter_water="[
	    if(IPHONE_SYSTEM, set(underwater_controls, 1)),
	    if((not FAT) and (not (tmp.tongue_tip)), [float(self), set(has_feet, 0)]),
		
		sound('water-enter.ogg'),

		#splash if we are entering the water with reasonable velocity#
		if(velocity_y > 200, [
			spawn('water_splash', midpoint_x, water_bounds[1]+10, if(1d2=2,facing,-facing)),
			spawn('water_particles', midpoint_x, water_bounds[1]+10, facing)]),
		#record the surface level of the water for future reference,
		 especially for splashing when we exit the water#
		set(tmp.water_surface, water_bounds[1])]"
on_exit_water="[
	    set(has_feet, 1),
		sound('water-exit.ogg'),
		schedule(60, fire_event('check_water')),

		if(velocity_y < -200,
	      [spawn('water_splash', midpoint_x, tmp.water_surface+10, if(1d2=2,facing,-facing)),
	      spawn('water_particles', midpoint_x, tmp.water_surface+10, facing)]),

	
	animation('fall'), if(velocity_y < 0, add(velocity_y, -JUMP_OUT_OF_WATER_BOOST)),
	set(velocity_x, (velocity_x*JUMP_OUT_OF_WATER_BOOST_HORIZONTAL)/100)
	
	]"
on_footfall="sound('footstep'+1d4+'.wav')"
on_get_powerup="null()"
on_handle_move_script="if(abs(midpoint_x - tmp.scripted_target_x) < 10,
		  if(abs(tmp.scripted_target_facing) = 1 and facing != tmp.scripted_target_facing,
		  [set(control_lock, if(tmp.scripted_target_facing > 0, ['ctrl_right'], ['ctrl_left'])), schedule(1, fire_event('handle_move_script'))],

		  [set(control_lock, null()),
		   set(me.tmp.scripted_target_x, null()),
		   set(me.tmp.scripted_target_facing, null()),
		   set(me.tmp.scripted_move_callback, null()),
		   tmp.scripted_move_callback]),
	   
		[set(control_lock, if(tmp.scripted_target_x > midpoint_x, ['ctrl_right'], ['ctrl_left'])), schedule(1, fire_event('handle_move_script'))])"
on_idling="if(tmp.idleness_level < 3, 
					[switch(1d3,
						1, animation('stand'),
						2, animation('stand'),
						3, animation('stand')
						),
					add(tmp.idleness_level, 1)
					],
					[switch(1d3,
						1, animation('idle_eyeball'),
						2, animation('idle_eyeball'),
						3, animation('idle_eyeball')
						),
					set(tmp.idleness_level, 0)
					])"
on_interacting="if(tmp.interacting_with and tmp.fired_talk = 0, [set(tmp.fired_talk, 1), fire_event(tmp.interacting_with, 'talk')])"
on_leave_attack_anim="[if(tmp.tongue_tip, fire_event('remove_tongue')), set(attached_objects, [])]"
on_leave_crouch_anim="[set(tmp.lookdown_time, 0), set(vertical_look, 0)]"
on_leave_fall_anim="set(zorder, 0)"
on_leave_fall_spin_attack_anim="[set(zorder, 0), set(tmp.no_flinch_attack, 0)]"
on_leave_interact_anim="fire_event(interacting_with, 'cancel_interaction')"
on_leave_jump_anim="set(zorder, 0)"
on_leave_jump_attack_anim="[fire_event('leave_attack_anim'), set(zorder, 0), set(attached_objects, [])]"
on_leave_lookup_anim="[set(tmp.lookup_time, 0), set(vertical_look, 0)]"
on_leave_roll_anim="stop_sound('roll.ogg')"
on_leave_slide_anim="[set(zorder, 0), if(ctrl_left, facing(-1)), if(ctrl_right, facing(1))]"
on_leave_spit_anim="if(vars.swallowed, [
	     set(green, 255), set(blue, 255),
		 add(gravity_shift, -vars.swallowed.vars.swallow_gravity),
	     set(vars.swallowed.vars.removed_from_play, 0),
	     set(vars.swallowed.velocity_x, velocity_x + facing*(200 + tmp.spit_force*if(ctrl_up, vars.spit_power/2, vars.spit_power*2))),
	     set(vars.swallowed.velocity_y, velocity_y - (600 + if(ctrl_up, 200 + tmp.spit_force*vars.spit_power))),

	     #set the object's timestamp for when it was spat out, so we
		  can make ourselves invincible to it for a little while#
		 set(vars.swallowed.time_spat, level.cycle),
		 set(vars.swallowed, null()),

         #set the enemy to be dimensionless, meaning it will only collide
		  with the level. If it collides with another object we expect
		  it to die.#
	     set(vars.swallowed.solid_dimensions_in, ['thrown']),
		 if(vars.swallowed.consts.thrown_type, set(vars.swallowed.type, vars.swallowed.consts.thrown_type)),
		 set(vars.swallowed.animation, 'thrown'),
		 
		 set(vars.swallowed.midpoint_x, midpoint_x),
		 set(vars.swallowed.y, y),
		 resolve_solid(vars.swallowed, facing, 0, 50),
		 resolve_solid(vars.swallowed, -facing, 0, 50),

	     add_object(vars.swallowed),
		 fire_event(vars.swallowed, 'spat'),
		 if(underwater, set(has_feet, 0)),
		 sound('Spit.wav')
		 ])"
on_leave_stand_anim="[set(tmp.idleness_counter, 0), set(tmp.idleness_level, 0)]"
on_leave_up_attack_anim="set(attached_objects, [])"
on_light_size="[set(lights, circle_light(me, vars.lightSize))]"
on_load="[if((not lights), set(lights, circle_light(me, vars.lightSize))),
	          set(invincible, 50), set(brightness, 255)]"
on_load_checkpoint="[if((not lights), set(lights, circle_light(me, vars.lightSize))),
	                     #TODO: Respawn frogatto with partial health, depending on difficulty level#
	                     #set(hitpoints, (max_hitpoints*3)/4),#
	                     set(hitpoints, max_hitpoints),
	                     set(level.player.vars.score, (level.player.vars.score*9)/10),

	                     #make it so that if we had a swallowed object
						  we create a fresh version of the object in our
						  stomach.
						  COMMENTED OUT FOR NOW -- NOT SURE IF THIS IS NEEDED.
	                     if(vars.swallowed,
							[
						    set(vars.swallowed, obj),
							set(obj.vars.removed_from_play, 1),
							fire_event(obj, 'swallowed')
							] where obj = object(vars.swallowed.type,
							                midpoint_x, midpoint_y, facing)
							),#
						 set(vars.powerup_time, 0),
						 fire_event('lose_powerup'),

	                     #remove variations that aren't upgrades#
						 set(variations, filter(variations, 'v', strstr(v, 'upgrade') or v = 'fat')),
						 animation('stand'),
						 set(velocity_x, 0),
						 set(velocity_y, 0),
						 move_to_standing(),
						 set(brightness, 255),
						 schedule(2, fire_event('check_water'))
						 ]"
on_lose_powerup="null()"
on_process="[
	    if((not is_standing) and animation_requires_standing(self), [animation('fall')]),
		if((not FAT) and underwater and (not (tmp.tongue_tip)),
		  if(IPHONE_SYSTEM,
		    [
			  swim(self, ctrl_x, ctrl_y),
			  if((not ctrl_x) and (not ctrl_y), float(self)),
			  if(ctrl_x < 0 and facing > 0 or ctrl_x > 0 and facing < 0, set(facing, -facing))
			],

			[
			swim(self, (ctrl_right - ctrl_left)*if(ctrl_down or ctrl_up, 700, 1000), (ctrl_down - ctrl_up)*if(ctrl_left or ctrl_right, 700, 1000)),
			if((not (ctrl_left or ctrl_right or ctrl_up or ctrl_down)) and (animation in ['swim_side','swim_up','swim_down']),
		   float(self)) ]
		     ),
		   
		   ),

		   if(ctrl_left, if(tmp.running, walk(self, -1, 'run'), walk(self, -1, 'walk'))),
			if(ctrl_right, if(tmp.running, walk(self, 1, 'run'), walk(self, 1, 'walk'))),
			if(ctrl_down and (not (ctrl_left or ctrl_right)), crouch(self)),
			
			if(ctrl_tongue,add(tmp.ctrl_tongue,1),set(tmp.ctrl_tongue,0)),
			if(ctrl_attack,add(tmp.ctrl_attack,1),set(tmp.ctrl_attack,0)),

			if(not mana_shock_active,add_mana(2)),
			if(ctrl_tongue,attack())
			
	]"
on_process_attack="if((facing = 1 and ctrl_right) or (facing = -1 and ctrl_left), [set(animation, 'walk_attack'), set(time_in_animation, time_in_animation),set(accel_x, vars.walk_accel)])"
on_process_crouch="[add(tmp.lookdown_time, 1), if(tmp.lookdown_time = 50, set(vertical_look, 200))]"
on_process_fall="[
	    if(IPHONE_SYSTEM, if(underwater_controls, [
		         add(velocity_x, (jump_glide*ctrl_x)/1000),
		         add(velocity_y, (jump_glide*ctrl_y)/1000)])),
	    if(is_standing, if(tmp.last_standing_cycle = cycle-1, animation('stand'), set(tmp.last_standing_cycle, cycle)))]"
on_process_jump="if(ctrl_jump, [add(velocity_y, -vars.jump_boost)])"
on_process_lookup="[add(tmp.lookup_time, 1), if(tmp.lookup_time = 50, set(vertical_look, -200))]"
on_process_slide="if(not can_slide(self), animation('fall'))"
on_process_spit="[if(ctrl_attack or ctrl_tongue, add(tmp.spit_force, 1)),maintain_locomotion()]"
on_process_walk_attack="if((facing = 1 and (not (ctrl_right))) or (facing = -1 and (not (ctrl_left))), [set(animation, 'attack'), set(time_in_animation, time_in_animation)])"
on_solidity_fail="if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1,60),
			   resolve_solid(me,2,-1,250),
			   resolve_solid(me,-2,-1,250),
			   resolve_solid(me,0,-1,500),
			   set(tmp.in_solidity_fail, 0)
			  ])"
on_start_interact="[animation('interact'), set(tmp.fired_talk, 0)]"
on_start_level="fire_event('check_water')"
on_stuck="if(not underwater, if(not solid(level, midpoint_x, y+self.img_h-10), add(velocity_y, -vars.jump_power), add(velocity_x, if(facing=1, 300, -300))))"
on_surface_damage="[fire_event('collide_damage')]"
on_timer="[
	    if(ctrl_right - ctrl_left != 0 and ctrl_right - ctrl_left != facing, set_facing(me, -facing)),
	    if(ctrl_up and (animation in ['stand','stand_up_slope','stand_down_slope']), animation('enter_lookup')),

	   [
#handle ending of invincibility#
	    if((cycle - vars.time_last_hit)/2 <= 50 and (cycle - vars.time_last_hit)/2 > 10, set(solid_dimensions_in, ['player', 'common', 'boss'])),
		if(not is_invincible_posthit,
		    [if(underwater and water_object.consts.damage,
				[add(hitpoints, -water_object.consts.damage), display_hurt_visuals(),
				 set(vars.time_last_hit, cycle)]),
			set(alpha,255)])]]"
solid_area="9,8,23,30"
solid_dimensions="player,common,boss"
timer_frequency="2"
traction_in_water="1000"
vehicle="false"
	[consts]
	FAT="0"
	JUMP_OUT_OF_WATER_BOOST="1400"
	JUMP_OUT_OF_WATER_BOOST_HORIZONTAL="200"
	flinch_threshold="0"
	max_swallow_size="16"
	posthit_invicibility_period="100"
	powerup_name="''"
	powerup_recharge="0"
	[/consts]

	[properties]
	attack_damage="0"
	attack_knockback="0"
	cause_flinch="def(collide_with) execute(me, [
			add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y),
			if('hurt' in available_animations,set(me.animation, 'hurt'))
			])"
	damage_cooldown="0"
	display_hurt_visuals="def() execute(me, 
					[
					hurt_flash_sequence()
					])"
	display_posthit_invincibility_flash_sequence="def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )"
	flash_bright="def() [set(me.brightness, 1023)]"
	flash_off="def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]"
	flash_red="def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]"
	get_hit_by="def(collide_with) execute(me, [
						if((not is_invincible) and (collide_with.attack_damage > 0) and (collide_with.attack_damage >= consts.armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])"
	handle_damage="def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))"
	handle_damage_type="def(collide_with) null() #virtual#"
	handle_flinch="def(collide_with) 
			execute(me, if(collide_with.attack_damage >= consts.flinch_threshold, cause_flinch(collide_with)))"
	handle_knockback="def(collide_with) execute(me,add(velocity_x, collide_with.facing * collide_with.attack_knockback))"
	hurt_flash_sequence="def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]"
	hurt_velocity_x="-200"
	hurt_velocity_y="-400"
	is_invincible="if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)"
	is_invincible_posthit="if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)"
	[/properties]

	[properties]
	handle_damage="def(collide_with) execute(me,[
						add(me.hitpoints, - collide_with.attack_damage),
						player_damage_screen_flash(collide_with.attack_damage),
						set(solid_dimensions_in, ['player']),
						player_specific_damage_response()
					])"
	hurt_velocity_x="-1000"
	hurt_velocity_y="-1000"
	player_damage_screen_flash="def(dmg_amt)
							if(dmg_amt > 2 or dmg_amt >= hitpoints, screen_flash([255, 0, 0,255], 4), if(dmg_amt = 2, screen_flash([255, 0, 0,200], 3), screen_flash([255, 0, 0,70], 2)))"
	player_specific_damage_response="def() null()"
	scripted_move_to_x="def(target_x, target_facing, callback)
		                    [
		                    set(me.tmp.scripted_target_x, target_x),
							set(me.tmp.scripted_target_facing, target_facing),
							set(me.tmp.scripted_move_callback, callback),
							fire_event(me, 'handle_move_script')
							]"
	[/properties]

	[tmp]
	last_shield="0"
	last_standing_cycle="-1"
	left="0"
	lookup_time="0"
	no_flinch_attack="0"
	pressed_jump_in_air="0"
	right="0"
	running="0"
	scripted_move_callback="null()"
	scripted_target_facing="null()"
	scripted_target_x="null()"
	shield="null()"
	start_attack_cycle="0"
	time_last_hit="0"
	tongue_shaft="null()"
	tongue_tip="null()"
	[/tmp]

	[vars]
	ability_list="['tongue','firebreath','energyshot']"
	achievement_kill_chain="[[null,-1000], [null,-2000], [null,-3000], [null,-4000], [null,-4000], [null,-5000], [null,-6000], [null,-7000], [null,-8000], [null,-9000], [null,-10000], [null,-11000], [null,-12000], [null,-13000], [null,-14000], [null,-15000]]"
	coins="0"
	current_ability="0"
	enemies_tasted="[]"
	items_owned="[]"
	jump_boost="90"
	jump_glide="30"
	jump_power="1200"
	levels_visited="[]"
	lightSize="60"
	mana="5000"
	mana_shock_cycle="-150"
	max_mana="5000"
	name="'Frogatto'"
	next_unlocked_item="null()"
	num_partial_hearts="0"
	powerup_time="0"
	run_accel="2800"
	spit_power="80"
	stored_events="{}"
	swallowed="null()"
	swim_accel="140"
	tongue_length="14"
	unlocked_items="['heart_object','points_cube','points_cube']"
	walk_accel="1600"
	[/vars]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duplicates="6"
	duration="6"
	feet_width="5"
	frames="3"
	id="stand"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="2,2,33,34"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duplicates="6"
	duration="100000000"
	feet_width="5"
	frames="3"
	id="freeze"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="2,2,33,34"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	feet_width="5"
	frames="3"
	id="stand"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="107,2,138,34"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	feet_width="5"
	frames="3"
	h="35"
	id="stand_up_slope"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	reverse="yes"
	solid_area="9,9,23,31"
	w="32"
	x="212"
	y="2"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	feet_width="5"
	frames="3"
	h="35"
	id="stand_down_slope"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	reverse="yes"
	solid_area="9,9,23,31"
	w="32"
	x="317"
	y="2"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="3"
	feet_width="5"
	frames="1"
	id="lookup"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="37,233,68,265"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="3"
	feet_width="5"
	frames="1"
	id="enter_lookup"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="2,233,33,265"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="1"
	feet_width="5"
	frames="1"
	id="crouch"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="107,197,138,229"
	rotate_on_slope="yes"
	solid_area="9,17,23,30"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="3"
	feet_width="5"
	frames="3"
	id="enter_crouch"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="2,197,33,229"
	rotate_on_slope="yes"
	solid_area="9,17,23,30"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="3"
	feet_width="5"
	frames="3"
	id="leave_crouch"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	play_backwards="yes"
	rect="2,197,33,229"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="1000"
	accel_y="80"
	body_area="all"
	duration="3"
	feet_width="5"
	frames="11"
	h="33"
	id="roll"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	scale="2"
	solid_area="8,17,24,30"
	sound="roll.ogg"
	velocity_x="500"
	w="32"
	x="107"
	y="197"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	events="10:30:footfall"
	feet_width="5"
	frames="8"
	id="walk"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="2,110,49,157"
	solid_area="17,18,31,40"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	events="0:10:footfall"
	feet_width="5"
	frames="4"
	frames_per_row="2"
	h="48"
	id="run"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	solid_area="17,18,31,40"
	w="48"
	x="410"
	y="95"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="10"
	feet_width="5"
	frames="1"
	h="48"
	id="skid"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	solid_area="17,18,31,40"
	w="48"
	x="461"
	y="40"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	feet_width="5"
	frames="1"
	h="33"
	id="turn"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	w="32"
	x="387"
	y="40"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	feet_width="5"
	frames="2"
	h="48"
	id="jump"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	solid_area="9,13,23,35"
	sound="FrogJump1.ogg,FrogJump2.ogg"
	w="32"
	x="2"
	y="38"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	feet_width="5"
	frames="1"
	id="bumphead"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="422,2,453,36"
	solid_area="9,12,23,34"
	sound="bumphead.wav"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="12"
	feet_width="5"
	frames="2"
	h="48"
	id="fall"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	solid_area="9,13,23,35"
	w="32"
	x="72"
	y="38"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="4"
	feet_width="5"
	frames="2"
	h="48"
	id="land"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	solid_area="9,17,23,39"
	sound="bumphead.wav"
	w="32"
	x="142"
	y="38"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	feet_width="5"
	frame_info="2,9,23,2,262,106,24,27,4,7,25,2,286,106,20,29,3,13,24,2,306,106,22,23,3,3,24,2,328,106,22,33,2,5,23,2,350,106,24,31,0,6,21,2,374,106,28,30"
	frames="6"
	id="swallow"
	image="compiled-2.png"
	rect="260,97,308,134"
	solid_area="6,13,20,35"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="3"
	feet_width="5"
	frame_info="6,3,5,3,864,299,23,29,8,2,6,4,887,299,20,29,5,3,5,4,907,299,24,28"
	frames="3"
	id="spit"
	image="compiled-2.png"
	rect="858,296,891,330"
	solid_area="6,8,20,30"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="16,11,30,36"
	duration="2"
	feet_width="5"
	frame_info="6,10,6,2,867,551,20,26,6,27,9,2,887,551,17,9,4,27,8,2,904,551,20,9,4,27,8,2,924,551,20,9,4,27,8,2,944,551,20,9,4,27,8,2,964,551,20,9,4,27,8,2,984,551,20,9,6,27,9,2,1004,551,17,9"
	frames="8"
	id="attack"
	image="compiled-2.png"
	rect="861,541,892,578"
	reverse="no"
	solid_area="9,12,23,34"
	sound="tongueOut1.wav,tongueOut2.wav,tongueOut3.wav,tongueOut4.wav,tongueOut5.wav,tongueOut6.wav"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="16,11,30,36"
	duration="4"
	feet_width="5"
	frame_info="7,8,7,2,227,358,18,28,2,23,4,4,245,358,26,11,5,24,6,3,271,358,21,11,8,25,11,3,292,358,13,10"
	frames="4"
	id="walk_attack"
	image="compiled-2.png"
	rect="220,350,251,387"
	reverse="no"
	solid_area="9,12,23,34"
	[/animation]

	[animation]
	accel_x="3200"
	accel_y="80"
	attack_area="20,14,70,40"
	body_area="0,0,30,40"
	duration="3"
	events="6:7:8:9:10:11:run_attack_contact"
	feet_width="5"
	frames="5"
	h="30"
	id="run_attack"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	reverse="no"
	solid_area="18,6,32,28"
	sound="slash.ogg"
	w="68"
	x="2"
	y="403"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="6,11,24,36"
	duration="2"
	feet_width="5"
	frame_info="9,8,14,1,245,329,26,29,9,24,14,1,271,329,26,13,10,23,17,0,297,329,22,15,12,24,21,0,319,329,16,14,12,24,21,0,335,329,16,14,11,23,16,0,351,329,22,15,11,23,18,1,373,329,20,14,9,25,15,1,393,329,25,12"
	frames="8"
	id="jump_attack"
	image="compiled-2.png"
	rect="236,321,284,358"
	reverse="no"
	solid_area="16,10,30,32"
	sound="tongueOut1.wav,tongueOut2.wav,tongueOut3.wav,tongueOut4.wav,tongueOut5.wav,tongueOut6.wav"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="2"
	feet_width="5"
	frames="3"
	id="firebreath_begin"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="286,476,319,510"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="2"
	feet_width="5"
	frames="2"
	id="firebreath_cycle"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="360,476,393,510"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="2"
	feet_width="5"
	frames="3"
	id="firebreath_end"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	play_backwards="yes"
	rect="286,476,319,510"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	attack_area="solid:13,30,23,42"
	body_area="all"
	duration="3"
	feet_width="5"
	frames="8"
	h="42"
	id="fall_spin_attack"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	reverse="no"
	sound="SpinAttack.ogg"
	w="32"
	x="3"
	y="436"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="18"
	feet_width="5"
	frames="1"
	id="hurt"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	rect="271,351,303,383"
	sound="TakeDamage.wav"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	collide_h="16"
	collide_w="15"
	collide_x="10"
	collide_y="6"
	duration="4"
	events="15:interacting"
	feet_width="5"
	feet_x="16"
	feet_y="32"
	frames="4"
	h="33"
	id="interact"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	reverse="yes"
	scale="2"
	w="32"
	x="72"
	y="161"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="10"
	body_area="all"
	duration="30"
	feet_width="5"
	frames="1"
	h="34"
	id="slide"
	image="characters/frogatto-spritesheet1.png"
	pad="3"
	solid_area="14,8,28,30"
	w="32"
	x="352"
	y="40"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	feet_width="5"
	frame_info="13,14,13,6,418,329,21,28,12,14,13,6,439,329,22,28,13,15,12,5,461,329,22,28,11,14,11,5,483,329,25,29,11,14,11,6,508,329,25,28,13,15,12,6,533,329,22,27"
	frames="6"
	frames_per_row="2"
	id="push"
	image="compiled-2.png"
	rect="405,315,451,362"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="6"
	feet_width="5"
	frame_info="4,5,4,5,681,551,31,26,4,5,4,5,712,551,31,26,4,5,4,5,743,551,31,26,4,5,4,5,774,551,31,26,4,5,4,5,805,551,31,26,4,5,4,5,836,551,31,26"
	frames="6"
	frames_per_row="3"
	id="swim_side_idle"
	image="compiled-2.png"
	rect="677,546,715,581"
	reverse="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="6"
	feet_width="5"
	frame_info="3,4,3,5,667,470,33,27,3,5,3,5,700,470,33,26,3,4,3,5,733,470,33,27,3,4,3,5,766,470,33,27,3,5,3,5,799,470,33,26,3,4,3,5,832,470,33,27"
	frames="6"
	frames_per_row="3"
	id="swim_down_idle"
	image="compiled-2.png"
	rect="664,466,702,501"
	reverse="yes"
	solid_area="12,8,26,30"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="6"
	feet_width="5"
	frame_info="7,1,6,2,0,140,26,33,7,1,6,3,26,140,26,32,7,1,6,2,52,140,26,33,7,1,6,2,78,140,26,33,7,1,6,3,104,140,26,32,7,1,6,2,130,140,26,33"
	frames="6"
	frames_per_row="3"
	id="swim_up_idle"
	image="compiled-2.png"
	rect="-7,139,31,174"
	reverse="yes"
	solid_area="12,8,26,30"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="10"
	feet_width="5"
	frame_info="5,5,4,6,619,629,30,25,5,5,4,6,649,629,30,25,4,5,2,7,679,629,33,24"
	frames="3"
	id="swim_side"
	image="compiled-2.png"
	rect="614,624,652,659"
	sound="Paddle1.ogg,Paddle2.ogg,Paddle3.ogg,Paddle4.ogg,Paddle5.ogg,Paddle6.ogg,Paddle7.ogg"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="10"
	feet_width="5"
	frame_info="11,8,11,2,921,470,17,26,6,7,6,8,938,470,27,21,7,1,5,8,965,470,27,27"
	frames="3"
	id="swim_down"
	image="compiled-2.png"
	rect="910,462,948,497"
	solid_area="12,8,26,30"
	sound="Paddle1.ogg,Paddle2.ogg,Paddle3.ogg,Paddle4.ogg,Paddle5.ogg,Paddle6.ogg,Paddle7.ogg"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="10"
	feet_width="5"
	frame_info="8,2,7,8,336,237,24,26,6,2,6,4,360,237,27,30,9,2,7,3,387,237,23,31"
	frames="3"
	id="swim_up"
	image="compiled-2.png"
	rect="328,235,366,270"
	solid_area="12,8,26,30"
	sound="Paddle1.ogg,Paddle2.ogg,Paddle3.ogg,Paddle4.ogg,Paddle5.ogg,Paddle6.ogg,Paddle7.ogg"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	feet_width="5"
	frame_info="6,27,9,4,589,835,26,13,6,28,9,3,615,835,26,13"
	frames="2"
	frames_per_row="1"
	id="energyshot_jump"
	image="compiled-2.png"
	rect="583,808,623,851"
	solid_area="12,14,26,36"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	feet_width="5"
	frame_info="10,25,15,4,893,819,16,15,10,25,15,4,909,819,16,15"
	frames="2"
	frames_per_row="1"
	id="energyshot_down_slope"
	image="compiled-2.png"
	rect="883,794,923,837"
	solid_area="14,15,28,37"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	feet_width="5"
	frame_info="10,28,12,4,120,850,19,12,10,28,12,4,139,850,19,12"
	frames="2"
	frames_per_row="1"
	id="energyshot_up_slope"
	image="compiled-2.png"
	rect="110,822,150,865"
	solid_area="14,15,28,37"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="5"
	feet_width="5"
	frame_info="9,29,12,6,71,33,20,9,9,29,11,6,91,33,21,9"
	frames="2"
	frames_per_row="1"
	id="energyshot"
	image="compiled-0.png"
	rect="62,4,102,47"
	solid_area="14,14,28,36"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	feet_width="5"
	frames="8"
	id="emote_geez"
	image="characters/frogatto-spritesheet3.png"
	pad="3"
	rect="1,1,36,38"
	reverse="yes"
	solid_area="11,13,25,35"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	feet_width="5"
	frames="15"
	frames_per_row="5"
	id="emote_oh"
	image="characters/frogatto-spritesheet4.png"
	pad="3"
	rect="1,1,36,38"
	solid_area="11,13,25,35"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	feet_width="5"
	frames="14"
	frames_per_row="7"
	id="emote_confused"
	image="characters/frogatto-spritesheet3.png"
	pad="3"
	rect="1,52,36,89"
	solid_area="11,13,25,35"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	feet_width="5"
	frames="16"
	frames_per_row="4"
	id="emote_impatient"
	image="characters/frogatto-spritesheet3.png"
	pad="3"
	rect="323,1,358,38"
	solid_area="11,13,25,35"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	feet_width="5"
	frames="14"
	frames_per_row="7"
	id="emote_raisedfinger"
	image="characters/frogatto-spritesheet3.png"
	pad="3"
	rect="1,144,36,181"
	solid_area="11,13,25,35"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	feet_width="5"
	frames="16"
	frames_per_row="8"
	id="emote_talk"
	image="characters/frogatto-spritesheet3.png"
	pad="3"
	rect="1,236,36,273"
	solid_area="11,13,25,35"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	feet_width="5"
	frames="16"
	frames_per_row="4"
	id="emote_nod"
	image="characters/frogatto-spritesheet3.png"
	pad="3"
	rect="323,175,358,212"
	solid_area="11,13,25,35"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	body_area="all"
	duration="6"
	feet_width="5"
	frame_info="6,6,8,2,0,524,20,26,6,6,8,2,20,524,20,26,6,5,7,2,40,524,21,27,7,6,5,2,61,524,22,26,7,7,8,2,83,524,19,25,7,8,9,2,102,524,18,24,7,9,9,2,120,524,18,23,8,8,7,2,138,524,19,24,7,9,9,2,157,524,18,23,8,8,7,2,175,524,19,24,6,8,8,2,194,524,20,24,6,8,6,2,214,524,22,24,6,8,3,2,236,524,25,24,6,7,2,2,261,524,26,25,6,7,2,2,287,524,26,25,6,7,2,2,313,524,26,25,6,7,2,2,339,524,26,25,6,7,2,2,365,524,26,25,6,7,2,2,391,524,26,25,6,7,2,2,417,524,26,25,6,7,2,2,443,524,26,25,6,7,2,2,469,524,26,25,6,7,2,2,495,524,26,25,6,7,2,2,521,524,26,25,6,7,2,2,547,524,26,25,6,7,2,2,573,524,26,25,6,7,2,2,599,524,26,25,6,7,2,2,625,524,26,25,6,7,2,2,651,524,26,25,6,7,2,2,677,524,26,25,6,9,2,2,703,524,26,23,6,10,3,2,729,524,25,22,6,8,5,2,754,524,23,24,6,11,7,2,777,524,21,21,6,9,8,2,798,524,20,23,7,9,9,2,818,524,18,23,7,8,9,2,836,524,18,24,7,9,9,2,854,524,18,23,7,8,9,2,872,524,18,24,7,7,8,2,890,524,19,25,7,6,5,2,909,524,22,26,6,5,7,2,931,524,21,27,6,6,8,2,952,524,20,26"
	frames="43"
	id="idle_eyeball"
	image="compiled-2.png"
	rect="-6,518,27,551"
	[/animation]

	[editor_info]
	category="player"
	[/editor_info]

	[properties]
	add_mana="def(delta) [set(vars.mana, newValue),if(newValue = 0, set(vars.mana_shock_cycle,cycle))] where newValue = max(0,min(vars.max_mana,vars.mana + delta))"
	attack="def()
				if('fat' in variations, tongue(), 
					if(underwater, shoot_bubble(),
						switch(vars.ability_list[vars.current_ability],
							'tongue', tongue(),
							'firebreath', mana_shock_guard(shoot_fire()),
							'energyshot', mana_shock_guard(shoot_energy_shot())
						)
					
				))"
	attack_damage="if(animation = 'fall_spin_attack', 1, 0)"
	attack_knockback="if(animation = 'run_attack', 300, 20)"
	bounce_on="def(object_type frog, obj)
			[set(frog.velocity_y, -max(obj.consts.spring_amount,
						(((frog.velocity_y*obj.consts.springiness)/100)*
							(100 - abs(bounce_angle)))/100)),
			add(frog.velocity_x, (((frog.velocity_y*obj.consts.springiness)/100)*bounce_angle)/100),
			[fire_event(obj, 'bounced_on'),
			set(vars.bounced_on_chain, vars.bounced_on_chain + 1),
			if(obj.team != 'evil', set(vars.bounced_on_chain, 0)),
			#debug(vars.bounced_on_chain + 1),#
			if(vars.bounced_on_chain > 8, achievement('jackalope')),
			],
			if(frog.animation = 'fall_spin_attack', [fire_event(obj, 'stomped_on'),
			set(vars.bounced_on_chain,0),
			])
			]
			where bounce_angle = (obj.consts.bounce_roundness*(frog.midpoint_x - obj.midpoint_x))/(max(1, obj.w))"
	damage_cooldown="10"
	damage_type="if(animation = 'run_attack','stun')"
	display_hurt_visuals="def() execute(me, [ animation(if(FAT, 'spit', 'hurt')), hurt_flash_sequence()])"
	energyshot_angle="if(((facing = 1 and ctrl_right) or (facing = -1 and ctrl_left)) and ctrl_up, -45,
				if(((facing = 1 and ctrl_right) or (facing = -1 and ctrl_left)) and ctrl_down, 45,
					if(ctrl_up, -90, if(ctrl_down, 90, 0))))"
	energyshot_anim="switch(1,
			me.animation in ['stand', 'leave_crouch', 'stand_up_slope', 'stand_down_slope', 'walk', 'enter_lookup', 'lookup','skid', 'land'], if(abs(slope_standing_on) < 20, 'energyshot', if(slope_standing_on*facing > 0, 'energyshot_down_slope', 'energyshot_up_slope')),
			me.animation in ['jump', 'fall'], 'energyshot_jump',
			'energyshot')"
	energyshot_anim_list="['energyshot','energyshot_up','energyshot_down','energyshot_jump','energyshot_crouch','energyshot_swim_side','energyshot_swim_down','energyshot_swim_up']"
	energyshot_charge="min(energyshot_charge_time, cycle - tmp.start_energyshot_cycle)"
	energyshot_charge_time="20"
	energyshot_fire_projectile="def(angle) spawn('frogatto_playable.energyshot', midpoint_x + 45*facing*cos(angle), midpoint_y + 40*sin(angle), facing, [set(velocity_x, velocity_x/4 + 2000 * cos(angle) * facing), set(velocity_y, velocity_y/4 + 2000 * sin(angle))])"
	energyshot_spawn_head="def() spawn('frogatto_playable.frogatto_head_energyshot',midpoint_x,midpoint_y-8,facing, [set_var('angle',energyshot_angle)])"
	hax="[set(level.player.driver.max_hitpoints, 10), set(level.player.driver.hitpoints, 10),
		set(level.player.driver.spit_power, 160), set(level.player.driver.tongue_length, 22),
		set(level.player.driver.unlocked_items, level.player.driver.unlocked_items + ['powerup_invincible'] + ['powerup_reflexes'])]"
	is_player_body_part="1"
	maintain_locomotion="def() [if(ctrl_left, set(accel_x,1600)), if(ctrl_right, set(accel_x,1600))]"
	mana_shock_active="cycle - vars.mana_shock_cycle < mana_shock_duration"
	mana_shock_duration="150"
	mana_shock_guard="def(thingToDo) if(not mana_shock_active, thingToDo)"
	set_light_size="def(lsize) [set(vars.lightSize, lsize), fire_event(self, 'light_size')]"
	shoot_bubble="def() 
			if(cycle%8=0,	[spawn('frogatto_playable.bubble_shot',midpoint_x+10*facing,midpoint_y,facing, [set(velocity_x,(400+1d100)*facing),set(velocity_y,1d100-50)])])"
	shoot_energy_shot="def() 
			if(energyshot_charge >= energyshot_charge_time and vars.mana >= mana_cost and (not animation in energyshot_anim_list), [set(tmp.start_energyshot_cycle, cycle), schedule(1,animation(energyshot_anim)) ,energyshot_fire_projectile(energyshot_angle), energyshot_spawn_head(), add_mana(-mana_cost)]) where mana_cost = 800"
	shoot_fire="def() [if((not (shoot_fire_active)) and (not animation in ['enter_crouch', 'crouch']), animation('firebreath_begin')), shoot_fire_internal()]"
	shoot_fire_active="tmp.ctrl_tongue > 1 and (not animation in ['enter_crouch', 'crouch']) and (not mana_shock_active) and (animation in ['firebreath_begin','firebreath_cycle','firebreath_end'])"
	shoot_fire_internal="def() if(
		animation in ['firebreath_begin','firebreath_cycle','firebreath_end'] and vars.mana >= mana_cost, [spawn('frogatto_playable.fire_shot',midpoint_x+1d10*facing,midpoint_y+4,facing, 
			[set(velocity_x,(1500+1d250)*facing),set(velocity_y,1d900-450), add_mana(-mana_cost)])]) where mana_cost = 20"
	spawn_tongue="def(angle)
			[if(animation in ['stand', 'leave_crouch', 'stand_up_slope', 'stand_down_slope', 'walk', 'enter_lookup', 'lookup','skid', 'land'], animation('attack')),
			if(animation in ['jump', 'fall'], animation('jump_attack')),
			spawn('frogatto_playable.tongue_tip', if(facing > 0, x + 30, x), y + 46, facing,set_var('tongue_angle',angle))]"
	store_event="def(event_name, value) add(level.player.vars.stored_events, {event_name -> value})"
	store_event_add="def(event_name, addend) set(level.player.stored_events, map_merge(level.player.vars.stored_events, {event_name -> addend}))"
	team="'player'"
	tongue="def()
			if(tmp.ctrl_tongue > 1, null(),
				if('fat' in variations,
					if(not (animation in ['interact']), [animation('spit')]),
					[
						if(animation in ['run'], animation('run_attack')),
						if(animation in ['stand', 'leave_crouch', 'stand_up_slope', 'stand_down_slope', 'walk', 'enter_lookup', 'lookup','skid', 'land', 'jump', 'fall'],
							if(((facing = 1 and ctrl_right) or (facing = -1 and ctrl_left)) and ctrl_up, spawn_tongue(-45),
								if(((facing = 1 and ctrl_right) or (facing = -1 and ctrl_left)) and ctrl_down, spawn_tongue(45),
									if(ctrl_up, spawn_tongue(-90), if(ctrl_down, spawn_tongue(90), spawn_tongue(0))))))
					]
				)
			)"
	[/properties]

	[particle_system]
	id="invincible_particles"
	max_x="40"
	max_y="50"
	min_x="0"
	min_y="0"
	spawn_rate="500"
	time_to_live="20"
	type="simple"
		[animation]
		duration="6"
		frame_info="1,1,1,1,334,24,9,9,2,2,2,2,343,24,7,7,3,3,3,3,350,24,5,5,4,4,4,4,355,24,3,3"
		frames="4"
		id="sparkle"
		image="compiled-0.png"
		rect="333,23,343,33"
		[/animation]

		[animation]
		duration="4"
		frame_info="2,2,2,2,395,24,7,7,3,3,3,3,402,24,5,5,4,4,4,4,407,24,3,3"
		frames="3"
		id="sparkle"
		image="compiled-0.png"
		rect="393,22,403,32"
		[/animation]

		[animation]
		duration="6"
		frame_info="3,3,3,3,668,18,5,5,4,4,4,4,673,18,3,3"
		frames="2"
		id="sparkle"
		image="compiled-0.png"
		rect="665,15,675,25"
		[/animation]

		[animation]
		duration="6"
		frame_info="4,4,4,4,721,15,3,3"
		frames="1"
		id="sparkle"
		image="compiled-0.png"
		rect="717,11,727,21"
		[/animation]

	[/particle_system]

	[object_variation]
	id="powerup_invincible"
		[set_str]
		_target="elements.consts"
		powerup_name="'powerup_invincible'"
		powerup_recharge="100"
		[/set_str]

		[set_str]
		_target="self"
		on_get_powerup="[set(vars.powerup_time, 200), add_particles('invincible_particles')]"
		on_lose_powerup="[set(brightness, 255), set(invincible_particles.spawn_rate, -1)]"
		on_process="[{on_process}, set(brightness, (wave(cycle*30)+1000)/3 + 255)]"
		on_timer="[{on_timer}, set(invincible, 10), add(vars.powerup_time, -1), if(vars.powerup_time <= 0, [fire_event('lose_powerup'), set(variations, filter(variations, 'v', v != 'powerup_invincible'))])]"
		[/set_str]

	[/object_variation]

	[object_variation]
	id="powerup_reflexes"
		[set_str]
		_target="elements.consts"
		powerup_name="'powerup_reflexes'"
		powerup_recharge="150"
		[/set_str]

		[set_str]
		_target="self"
		on_enter_level="[{on_enter_level}, set(level.chars_immune_from_freeze, [me])]"
		on_get_powerup="[set(vars.powerup_time, 300), set(level.chars_immune_from_freeze, [me]), set(tmp.start_powerup, cycle)]"
		on_lose_powerup="[set(brightness, 255), blur(0, 0, 0)]"
		on_process="[{on_process}, set(level.time_freeze, level.time_freeze + min(50, cycle - tmp.start_powerup, vars.powerup_time/2)*12),
		  screen_flash([0, 64, 32, (((wave(cycle*16)+2000)/16)*min(50, cycle - tmp.start_powerup, vars.powerup_time/2))/50], 1)]"
		on_timer="[{on_timer},  blur(40, 10, 10), set(vars.powerup_time, vars.powerup_time-1), if(vars.powerup_time <= 0, [fire_event('lose_powerup'), set(variations, filter(variations, 'v', v != 'powerup_reflexes'))])]"
		[/set_str]

	[/object_variation]

	[object_variation]
	id="fat"
		[set_str]
		_target="filter(elements.animation, image = 'characters/frogatto-spritesheet1.png')"
		image="characters/fat-frogatto-spritesheet1.png"
		[/set_str]

		[set_str]
		_target="filter(elements.animation, image = 'characters/frogatto-spritesheet3.png')"
		image="characters/fat-frogatto-spritesheet3.png"
		[/set_str]

		[set_str]
		_target="filter(elements.animation, image = 'characters/frogatto-spritesheet4.png')"
		image="characters/fat-frogatto-spritesheet4.png"
		[/set_str]

		[set_str]
		FAT="1"
		_target="elements.consts"
		jump_boost="80"
		jump_glide="20"
		jump_power="1200"
		[/set_str]

		[set_str]
		_target="filter(elements.animation, id = 'walk')"
		accel_x="1300"
		[/set_str]

		[set_str]
		_target="filter(elements.animation, id = 'run')"
		accel_x="1900"
		[/set_str]

		[set_str]
		_target="self"
		[/set_str]

	[/object_variation]

	[object_variation]
	id="upgrade_shield"
		[set_str]
		_target="self"
		on_enter_enter_crouch_anim="if((not tmp.shield),
			    [if(invincible < 25, set(invincible, 25)),
				 add_object(shield_obj), set(tmp.shield, shield_obj),
				 schedule(50, set(tmp.shield, null()))]
				  where shield_obj = object('frogatto_playable.shield', x+30, y+30, 1))"
		[/set_str]

	[/object_variation]

	[object_type]
	id="shield"
	on_end_flash_anim="die()"
	on_end_normal_anim="die()"
	on_flash="[set(animation, 'flash'), set(time_in_animation, time_in_animation)]"
	on_process="if(cycle < 20, set(alpha, cycle*4), set(alpha, 80 - (cycle-20)*14))"
		[animation]
		duration="25"
		frames="1"
		id="normal"
		image="characters/frogatto-spritesheet1.png"
		rect="286,439,317,471"
		[/animation]

		[animation]
		duration="25"
		frames="1"
		id="flash"
		image="characters/frogatto-spritesheet1.png"
		rect="321,439,352,471"
		[/animation]

	[/object_type]

	[object_type]
	always_active="yes"
	id="tongue_shaft"
	on_create="[
				set(midpoint_x, (x_2+x_1)/2),
				set(y, (y_2+y_1)/2 - (length/2)),
				set(draw_area, [0, 0, img_w/2, length/2]),
				set(activation_area, [min(x_1,x_2) -200, min(y_1,y_2) -200, abs(x_1-x_2) +200, abs(y_1-y_2) +200]),  #xywh#
				set(rotate,(angle(x_1,y_1,x_2,y_2)-90) )
			]"
	serializable="no"
	solid_dimensions="none"
	zorder="5"
		[properties]
		is_player_body_part="1"
		length="myLength(x_1,y_1,x_2,y_2)"
		myLength="def(x,y,z,a) sqrt(ly^2 + lx^2) where lx = abs(x-z) where ly = abs(y-a)"
		set_ends="def(new_x1,new_y1,new_x2,new_y2) [set(vars.x_1,new_x1),set(vars.y_1,new_y1),set(vars.x_2,new_x2),set(vars.y_2,new_y2),fire_event(me,'create'),]"
		[/properties]

		[animation]
		frames="1"
		image="characters/frogatto-tongueB.png"
		no_remove_alpha_borders="true"
		rect="0,0,7,7"
		[/animation]

	[/object_type]

	[object_type]
	id="frogatto_head"
	on_spawned="switch(vars.angle, -90, animation('up'), -45, animation('updiag'), 0, animation('side'), 45, animation('downdiag'), 90, animation('down'))"
	serializable="no"
		[properties]
		is_player_body_part="1"
		[/properties]

		[animation]
		duration="2"
		frames="8"
		id="up"
		image="characters/frogatto-spritesheet5.png"
		no_remove_alpha_borders="true"
		pad="3"
		rect="2,1,35,26"
		[/animation]

		[animation]
		duration="2"
		frames="8"
		id="updiag"
		image="characters/frogatto-spritesheet5.png"
		no_remove_alpha_borders="true"
		pad="3"
		rect="2,30,35,55"
		[/animation]

		[animation]
		duration="2"
		frames="8"
		id="side"
		image="characters/frogatto-spritesheet5.png"
		no_remove_alpha_borders="true"
		pad="3"
		rect="2,59,35,84"
		[/animation]

		[animation]
		duration="2"
		frames="8"
		id="downdiag"
		image="characters/frogatto-spritesheet5.png"
		no_remove_alpha_borders="true"
		pad="3"
		rect="2,88,35,113"
		[/animation]

		[animation]
		duration="2"
		frames="8"
		id="down"
		image="characters/frogatto-spritesheet5.png"
		no_remove_alpha_borders="true"
		pad="3"
		rect="2,117,35,142"
		[/animation]

	[/object_type]

	[object_type]
	always_active="yes"
	id="tongue_tip"
	on_child_spawned="switch(child.type, 
								'frogatto_playable.tongue_shaft', set(tmp.shaft, child),
								'frogatto_playable.frogatto_head', set(tmp.froghead, child))"
	on_collide_object_grab="[if((collide_with_area = 'body' or collide_with_area = 'thrown') and (not vars.swallowed) and collide_with != level.player,
	            [[fire_event('stopearly'), animation('flashsnag')],
					if(tag_ and (not tag_ in level.player.enemies_tasted),
							[
							add(level.player.enemies_tasted, [tag_]),
							#adding 1 since the list won't have been updated yet#
							if(size(level.player.enemies_tasted) + 1 >= 25, achievement('frogourmet'))
							]
							)
	            	where tag_ = collide_with.consts.frogourmet_tag,
				 if(is_swallowable,
	                        [remove_object(collide_with),
	  set(attached_objects, [collide_with]), set(vars.cycle_grabbed, level.cycle),
	  [set(collide_with.vars.removed_from_play, 1),sound('Gulp.wav')],
	  set(vars.swallowed, collide_with), fire_event(collide_with, 'swallowed')],
	  
	 #object is not swallowable, so do damage to it instead#
	 if(collide_with.get_hit_by, collide_with.get_hit_by(me))
	  )])] where is_swallowable = collide_with.tags.swallowable and collide_with.consts.size <= consts.max_swallow_size"
	on_create="animation('initial')"
	on_die="[if(vars.swallowed, [set(tmp.frog.vars.swallowed, vars.swallowed),add(tmp.frog.variations, ['fat'])]) ,set(tmp.shaft.hitpoints, 0), set(tmp.shaft, null()),set(tmp.froghead.hitpoints, 0), set(tmp.froghead, null()), set(tmp.frog.tmp.tongue_tip, null())]"
	on_drag_victim="[if(vars.swallowed and (level.cycle - vars.cycle_grabbed > 1), [set(vars.swallowed.midpoint_x, last_x),
		                                 set(vars.swallowed.midpoint_y, last_y)]),
		                set(last_x, midpoint_x), set(last_y, midpoint_y),
						]"
	on_end_clung_anim="animation('clung')"
	on_end_flash_anim="animation('normal')"
	on_end_flashsnag_anim="animation('clung')"
	on_end_initial_anim="animation('normal')"
	on_process="[add(vars.timer,1),set_shaft(vars.timer, tongue_angle),adjust_position(vars.timer,tongue_angle),if(vars.timer >= tongue_duration,die()),fire_event('drag_victim'),if(vars.timer = tongue_duration/2, animation('flash'))]"
	on_spawned="[	spawn('frogatto_playable.tongue_shaft',x,y,1),
						spawn('frogatto_playable.frogatto_head',tmp.frog.midpoint_x,tmp.frog.midpoint_y-yhead_offset,facing, [set_var('angle',tongue_angle),set(parent,tmp.frog)])]"
	on_stopearly="[set(vars.timer, newtime), set(tmp.frog.time_in_animation,newtime)] where newtime = vars.timer + 2*abs(max((tongue_duration/2 - vars.timer),0))"
	serializable="no"
	solid_dimensions="player,common,boss,thrown"
	zorder="6"
		[consts]
		damage_cooldown="10"
		[/consts]

		[tmp]
		frog="null"
		froghead="null"
		shaft="null"
		[/tmp]

		[vars]
		timer="1"
		tongue_angle="0"
		[/vars]

		[properties]
		adjust_position="def(time,angle)	[set(midpoint_x, tmp.froghead.midpoint_x + (length_per_time(time)*cos(angle)) * facing  + x_offset + if(facing = 1, 2,0)), 
												set(midpoint_y, tmp.froghead.midpoint_y + ybase_offset + (length_per_time(time)*sin(angle)) + if(facing = -1 and angle = 0, -1, 0) ),
												set(rotate, angle * facing)]"
		attack_damage="0"
		is_player_body_part="1"
		length_per_time="def(time) tmp.frog.tongue_length*(tongue_duration/2 - abs(tongue_duration/2 - time))"
		set_shaft="def(time,angle) [	tmp.shaft.set_ends(	tmp.froghead.midpoint_x + x_offset,
																tmp.froghead.midpoint_y + ybase_offset,
																tmp.froghead.midpoint_x + (length_per_time(time)*cos(angle)) * facing + x_offset,
																tmp.froghead.midpoint_y + ybase_offset + (length_per_time(time)*sin(angle))  )]"
		team="'player'"
		tongue_duration="14"
		x_offset="0*facing"
		ybase_offset="8"
		yhead_offset="12"
		[/properties]

		[vars]
		swallowed="null()"
		[/vars]

		[tmp]
		hit="0"
		last_x="null()"
		last_y="null()"
		tongue_shaft="null()"
		[/tmp]

		[consts]
		max_swallow_size="16"
		[/consts]

		[animation]
		duration="4"
		frames="1"
		grab_area="solid:8,8,25,25"
		id="initial"
		image="characters/frogatto-spritesheet1.png"
		rect="307,351,339,383"
		[/animation]

		[animation]
		duration="100"
		frames="1"
		grab_area="solid:8,8,25,25"
		id="normal"
		image="characters/frogatto-spritesheet1.png"
		rect="379,351,411,383"
		[/animation]

		[animation]
		duration="2"
		frames="1"
		id="flashsnag"
		image="characters/frogatto-spritesheet1.png"
		rect="415,351,447,383"
		[/animation]

		[animation]
		duration="2"
		frames="1"
		id="flash"
		image="characters/frogatto-spritesheet1.png"
		rect="343,351,375,383"
		[/animation]

		[animation]
		duration="100"
		frames="1"
		id="clung"
		image="characters/frogatto-spritesheet1.png"
		rect="451,351,483,383"
		[/animation]

	[/object_type]

	[object_type]
	id="frogatto_head_energyshot"
	on_spawned="[set(parent, spawner), schedule(9,die()),switch(vars.angle, -90, animation('up'), -45, animation('updiag'), 0, animation('side'), 45, animation('downdiag'), 90, animation('down'))]"
	serializable="no"
	zorder="12"
		[properties]
		is_player_body_part="1"
		[/properties]

		[animation]
		duration="5"
		frames="2"
		frames_per_row="1"
		id="up"
		image="characters/frogatto-spritesheet2.png"
		no_remove_alpha_borders="true"
		pad="3"
		rect="178,415,218,458"
		[/animation]

		[animation]
		duration="5"
		frames="2"
		frames_per_row="1"
		id="updiag"
		image="characters/frogatto-spritesheet2.png"
		no_remove_alpha_borders="true"
		pad="3"
		rect="222,415,262,458"
		[/animation]

		[animation]
		duration="5"
		frames="2"
		frames_per_row="1"
		id="side"
		image="characters/frogatto-spritesheet2.png"
		no_remove_alpha_borders="true"
		pad="3"
		rect="266,415,306,458"
		[/animation]

		[animation]
		duration="5"
		frames="2"
		frames_per_row="1"
		id="downdiag"
		image="characters/frogatto-spritesheet2.png"
		no_remove_alpha_borders="true"
		pad="3"
		rect="310,415,350,458"
		[/animation]

		[animation]
		duration="5"
		frames="2"
		frames_per_row="1"
		id="down"
		image="characters/frogatto-spritesheet2.png"
		no_remove_alpha_borders="true"
		pad="3"
		rect="354,415,394,458"
		[/animation]

	[/object_type]

	[object_type]
	id="bubble_shot"
	on_end_normal_anim="animation('pop')"
	on_end_pop_anim="die()"
	on_enter_pop_anim="[set(velocity_x,0),set(velocity_y,0)]"
	on_spawned="set(vars.parent_obj, spawner)"
	prototype="shot"
		[vars]
		team="'player'"
		[/vars]

		[properties]
		attack_damage="7.5"
		damage_cooldown="10"
		dies_when_hit="0"
		team="'player'"
		[/properties]

		[animation]
		attack_area="all"
		duration="8"
		frames="3"
		id="normal"
		image="effects/particles2.png"
		pad="3"
		rect="62,2,71,11"
		[/animation]

		[animation]
		duration="4"
		frames="2"
		id="pop"
		image="effects/particles2.png"
		pad="3"
		rect="101,2,110,11"
		[/animation]

	[/object_type]

	[object_type]
	id="fire_shot"
	on_end_normal_anim="animation('normal')"
	on_end_pop_anim="die()"
	on_enter_pop_anim="[set(velocity_x,0),set(velocity_y,-200-1d100),facing(if(1d2=2,1,-1)),set(zorder,40)]"
	on_spawned="[set(vars.parent_obj, spawner),schedule(6,animation('pop'))]"
	prototype="shot"
	zorder="50"
		[properties]
		attack_damage="25"
		damage_cooldown="10"
		dies_when_hit="0"
		team="'player'"
		[/properties]

		[animation]
		attack_area="all"
		duration="2"
		frames="4"
		id="normal"
		image="effects/particles2.png"
		pad="3"
		rect="2,113,15,130"
		[/animation]

		[animation]
		duration="2"
		frames="3"
		id="pop"
		image="effects/particles2.png"
		pad="3"
		rect="2,134,15,151"
		[/animation]

	[/object_type]

	[object_type]
	dies_on_inactive="true"
	id="energyshot"
	mass="2"
	on_create="[set(time_in_animation, 1d6),sound('energyshot.ogg'),
		schedule(50,die()),
		spawn('frogatto_playable.energyshot_bloom',midpoint_x,midpoint_y,0), add_particles('particles')]"
	on_die="[set(hitpoints, 30), if((not vars.exploded), [set(vars.exploded, 1), spawn('frogatto_playable.energyshot_bloom',midpoint_x,midpoint_y,0),sound('MechCrush.ogg'), set(hitpoints, 30), set(particles.spawn_rate, 0), schedule(0, [set(type, 'particle_system_holder'), fire_event('create')])])]"
	on_end_anim="[animation('normal')]"
	on_process="[set(velocity_x,velocity_x*0.97),set(velocity_y,velocity_y*0.97)]"
	prototype="shot"
	zorder="50"
		[properties]
		attack_damage="40"
		team="'player'"
		[/properties]

		[vars]
		exploded="0"
		[/vars]

		[animation]
		attack_area="0,0,10,10"
		body_area="all"
		duration="2"
		frames="4"
		h="10"
		id="normal"
		image="effects/particles2.png"
		pad="3"
		w="10"
		x="3"
		y="15"
		[/animation]

		[particle_system]
		id="particles"
		max_y="5"
		min_y="3"
		spawn_rate="1000"
		time_to_live="20"
		type="simple"
		velocity_magnitude="1000"
		velocity_magnitude_random="100"
		velocity_rotate_random="360"
			[animation]
			duration="5"
			frames="4"
			h="7"
			id="sparkle"
			image="effects/particles2.png"
			pad="3"
			scale="2"
			w="7"
			x="84"
			y="19"
			[/animation]

		[/particle_system]

	[/object_type]

	[object_type]
	dies_on_inactive="true"
	id="energyshot_bloom"
	ignore_collide="true"
	on_create="[add_particles('particles'), schedule(1, fire_event('stop_spawning_particles'))]"
	on_end_anim="[set(hitpoints, 30), set(type, 'particle_system_holder'), fire_event('create')]"
	on_stop_spawning_particles="set(particles.spawn_rate, 0)"
	zorder="10"
		[animation]
		duration="2"
		frames="8"
		frames_per_row="4"
		h="23"
		id="sparkle"
		image="effects/powerup-fx.png"
		pad="3"
		w="21"
		x="122"
		y="2"
		zorder="10"
		[/animation]

		[particle_system]
		id="particles"
		max_x="20"
		max_y="20"
		min_x="10"
		min_y="10"
		spawn_rate="10000"
		time_to_live="20"
		type="simple"
		velocity_magnitude="1000"
		velocity_magnitude_random="1000"
		velocity_rotate_random="360"
			[animation]
			duration="5"
			frames="4"
			h="7"
			id="sparkle"
			image="effects/particles2.png"
			pad="3"
			scale="2"
			w="7"
			x="84"
			y="19"
			[/animation]

		[/particle_system]

	[/object_type]

[/prototype]

