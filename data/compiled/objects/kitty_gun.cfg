{
	"animation": [
		{
			"accel_x": 0,
			"accel_y": 80,
			"body_area": "all",
			"duration": 8,
			"frame_info": [0,0,0,0,602,73,51,36,0,0,0,0,653,73,51,36,0,0,0,0,704,73,51,36,0,0,0,0,755,73,51,36,0,0,0,0,806,73,51,36,0,0,0,0,857,73,51,36,0,0,0,0,908,73,51,36],
			"frames": 7,
			"id": "stand",
			"image": "compiled-2.png",
			"no_remove_alpha_borders": true,
			"rect": [602,73,652,108],
			"rotate_on_slope": true
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"body_area": "all",
			"duration": 6,
			"frame_info": [0,0,0,0,969,37,51,36],
			"frames": 1,
			"id": "turn",
			"image": "compiled-2.png",
			"no_remove_alpha_borders": true,
			"rect": [969,37,1019,72],
			"rotate_on_slope": true
		},
		{
			"accel_x": 300,
			"accel_y": 80,
			"body_area": "all",
			"duration": 6,
			"frame_info": [0,0,0,0,0,109,51,36,0,0,0,0,51,109,51,36,0,0,0,0,102,109,51,36,0,0,0,0,153,109,51,36],
			"frames": 4,
			"id": "walk",
			"image": "compiled-2.png",
			"no_remove_alpha_borders": true,
			"rect": [0,109,50,144],
			"rotate_on_slope": true
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"body_area": "all",
			"duration": 2,
			"frame_info": [0,0,0,0,183,73,51,36,0,0,0,0,234,73,51,36,0,0,0,0,285,73,51,36,0,0,0,0,336,73,51,36],
			"frames": 4,
			"id": "readygun",
			"image": "compiled-2.png",
			"no_remove_alpha_borders": true,
			"rect": [183,73,233,108],
			"rotate_on_slope": true
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"body_area": "all",
			"duration": 5,
			"events": "1:shoot",
			"frame_info": [0,0,0,0,0,37,51,36,0,0,0,0,51,37,51,36,0,0,0,0,102,37,51,36,0,0,0,0,153,37,51,36,0,0,0,0,204,37,51,36,0,0,0,0,255,37,51,36],
			"frames": 6,
			"id": "fire",
			"image": "compiled-2.png",
			"no_remove_alpha_borders": true,
			"rect": [0,37,50,72],
			"rotate_on_slope": true
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"body_area": "all",
			"duration": 4,
			"frame_info": [0,0,0,0,306,37,51,36,0,0,0,0,357,37,51,36,0,0,0,0,408,37,51,36,0,0,0,0,459,37,51,36,0,0,0,0,510,37,51,36],
			"frames": 5,
			"id": "spring",
			"image": "compiled-2.png",
			"no_remove_alpha_borders": true,
			"rect": [306,37,356,72],
			"rotate_on_slope": true
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"body_area": "all",
			"duration": 12,
			"frame_info": [0,0,0,0,848,0,51,36],
			"frames": 1,
			"id": "hurt",
			"image": "compiled-2.png",
			"no_remove_alpha_borders": true,
			"rect": [848,0,898,35],
			"rotate_on_slope": true
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"body_area": "all",
			"duration": 4,
			"frame_info": [0,0,0,0,867,37,51,36,0,0,0,0,918,37,51,36],
			"frames": 2,
			"id": "posthurt",
			"image": "compiled-2.png",
			"no_remove_alpha_borders": true,
			"rect": [867,37,917,72],
			"rotate_on_slope": true
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"body_area": "all",
			"duration": 4,
			"frame_info": [0,0,0,0,561,37,51,36,0,0,0,0,612,37,51,36,0,0,0,0,663,37,51,36,0,0,0,0,714,37,51,36,0,0,0,0,765,37,51,36,0,0,0,0,816,37,51,36],
			"frames": 6,
			"id": "alert",
			"image": "compiled-2.png",
			"no_remove_alpha_borders": true,
			"rect": [561,37,611,72],
			"rotate_on_slope": true
		}
	],
	"consts": {
		"basic_type": "kitty_gun",
		"bounce_roundness": 80,
		"frogourmet_tag": "kitty_gun",
		"spring_amount": 1400,
		"springiness": 200
	},
	"editor_info": {
		"category": "milgramen"
	},
	"feet_width": 4,
	"friction": 1000,
	"hitpoints": 200,
	"id": "kitty_gun",
	"mass": 5,
	"object_type": {
		"animation": [
			{
				"attack_area": [0,0,11,11],
				"duration": 1,
				"frames": 2,
				"frames_per_row": 1,
				"id": "normal",
				"image": "effects/explosion2.png",
				"pad": 3,
				"rect": [1,79,20,93]
			},
			{
				"attack_area": [0,0,11,11],
				"duration": 2,
				"frames": 2,
				"frames_per_row": 1,
				"id": "normal2",
				"image": "effects/explosion2.png",
				"pad": 3,
				"rect": [24,79,43,93]
			}
		],
		"dies_on_inactive": true,
		"id": "metal_bullet",
		"object_level_collisions": true,
		"on_end_flash_anim": "die()",
		"on_end_normal2_anim": "animation('normal2')",
		"on_end_normal_anim": "animation('normal2')",
		"on_timer": "die()",
		"properties": {
			"damage": 2
		},
		"prototype": ["shot"],
		"solid_dimensions": ["player"],
		"timer_frequency": 450
	},
	"on_add_object_fail": "[if(collide_with.team != team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]",
	"on_bounced_on": "[add(hitpoints, -100), hurt_flash_sequence(), if(jumped_on_by.mass >= 1000, die(), animation('spring'))]",
	"on_change_animation_failure": "fire_event('solidity_fail')",
	"on_change_solid_dimensions_fail": "fire_event('solidity_fail')",
	"on_collide_object_body": "if(collide_with.team != team and collide_with.team != 'evil_harmless' and (not (collide_with.team = 'evil' and team = 'evil_harmless')), if(collide_with_area = 'attack', get_hit_by(collide_with)))",
	"on_collide_side": "if(collide_with != level.player, [set(velocity_x,-velocity_x/2),set(facing, -facing),animation('turn')])",
	"on_create": "animation('stand')",
	"on_die": "[score(level,points_value), spawn_item(self), death_burst_tracked(self)]",
	"on_end_alert_anim": "if(facing != desired_facing,
	    [animation('turn'), set(facing, desired_facing)],
		[animation('readygun'),set(vars.attack_counter,2)])",
	"on_end_fire_anim": "animation('stand')",
	"on_end_hurt_anim": "if(is_standing,[set(vars.posthurt_counter, 3),animation('posthurt')],animation('hurt'))",
	"on_end_posthurt_anim": "if(vars.posthurt_counter > 0,[set(vars.posthurt_counter, vars.posthurt_counter - 1),animation('posthurt')],animation('stand'))",
	"on_end_readygun_anim": "if(vars.attack_counter > 0,[set(vars.attack_counter, vars.attack_counter - 1),animation('readygun')],[animation('fire'),set(velocity_x, -400*facing)])",
	"on_end_spring_anim": "animation('walk')",
	"on_end_stand_anim": "if(is_standing and 1d2 = 2, if(turns_towards_player,set_facing(self,level), choose_action()), animation('stand'))",
	"on_end_turn_anim": "animation('walk')",
	"on_end_walk_anim": "choose_action()",
	"on_enter_water": "die()",
	"on_process": "set(rotate, slope_standing_on)",
	"on_shoot": "[spawn('kitty_gun.metal_bullet', midpoint_x+ facing*25, midpoint_y +6, facing, [
																								set(rotate, slope_standing_on),
																								set(velocity_x, 800 * cos(slope_standing_on) * facing),
																								set(velocity_y, 1200 * sin(slope_standing_on) * facing)]),
				spawn('muzzle_flash', midpoint_x+ facing*50, midpoint_y -2, facing),sound('cannon.ogg')]",
	"on_solidity_fail": "if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1),
			   set(tmp.in_solidity_fail, 0)
			  ])",
	"on_surface_damage": "die()",
	"on_timer": "if(turns_at_cliffs and is_standing and animation = 'walk' and distance_to_cliff < 30,[set(facing, -facing),animation('turn')],null)",
	"properties": {
		"attack_damage": 2,
		"attack_knockback": 0,
		"cause_flinch": "def(collide_with) execute(me, [
			add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y),
			if('hurt' in available_animations,set(me.animation, 'hurt'))
			])",
		"choose_action": "def() if(level.player.midpoint_y > self.y and level.player.midpoint_y < self.y2 and abs(level.player.midpoint_x - self.midpoint_x) < if(self.facing = desired_facing, 400, 200), animation('alert'), animation('walk'))",
		"damage_cooldown": 0,
		"desired_facing": "if(level.player.midpoint_x < self.midpoint_x, -1, 1)",
		"difficulty_casual": 0,
		"difficulty_intense": 1,
		"difficulty_unfair": 2,
		"display_hurt_visuals": "def() execute(me, 
					[
					hurt_flash_sequence()
					])",
		"display_posthit_invincibility_flash_sequence": "def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )",
		"flash_bright": "def() [set(me.brightness, 1023)]",
		"flash_off": "def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]",
		"flash_red": "def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]",
		"flinch_threshold": 40,
		"get_hit_by": "def(collide_with) execute(me, [
						if((not is_invincible) and (collide_with.attack_damage > 0) and (collide_with.attack_damage >= armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])",
		"handle_damage": "def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))",
		"handle_damage_type": "def(collide_with) null #virtual#",
		"handle_flinch": "def(collide_with) 
			execute(me, if(collide_with.attack_damage >= flinch_threshold, cause_flinch(collide_with)))",
		"handle_knockback": "def(collide_with) execute(me,add(velocity_x, collide_with.facing * collide_with.attack_knockback))",
		"hurt_flash_sequence": "def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]",
		"hurt_velocity_x": -200,
		"hurt_velocity_y": -400,
		"is_invincible": "if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)",
		"is_invincible_posthit": "if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)",
		"standard_thrown_damage": 400,
		"team": "'evil'"
	},
	"solid_area": [16,10,36,33],
	"solid_dimensions": ["enemy","common"],
	"timer_frequency": 5,
	"tmp": null,
	"traction": 1000,
	"variations": null,
	"vars": {
		"attack_counter": 0,
		"points_value": 8,
		"posthurt_counter": 0,
		"turns_at_cliffs": 1,
		"turns_towards_player": 0
	}
}