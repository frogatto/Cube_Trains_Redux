[prototype]
feet_width="4"
friction="1000"
hitpoints="8"
id="white_shooting_flower_base"
mass="5"
on_bounced_on="[if(jumped_on_by.mass >= 1000, die(), animation('spring'))]"
on_child_spawned="[set(vars.stems, vars.stems+[child]),set(child.vars.len_index,size(vars.stems)+1),
						set(child.zorder,context.zorder + size(vars.stems)+1)]"
on_collide_feet="map(vars.stems, 'stem',  set(stem.midpoint_y, context.midpoint_y - stem_voffset*(index+1) ))"
on_collide_object_body="if(collide_with.vars.team != vars.team and collide_with_area = 'attack', get_hit_by(collide_with))"
on_create="[map(range(stem_size),'n',spawn('white_shooting_flower_stem',midpoint_x,midpoint_y-stem_voffset*(n+1),facing)),
	spawn('white_shooting_flower',midpoint_x,midpoint_y-stem_voffset*(stem_size+1),facing)]"
on_die="map(stems, 'stem', set(stem.hitpoints, 0))"
on_end_hurt_anim="animation('normal')"
on_end_normal_anim="[animation('normal'),set(time_in_animation,1d6)]"
on_enter_anim="set(tmp, 'already_hit', [])"
on_hurtflicker="if(green = 100,[set(green, 255), set(blue, 255)],[set(green, 100), set(blue, 100)])"
on_leave_hurt_anim="[set(green, 255), set(blue, 255)]"
on_surface_damage="die()"
on_timer="[if(find(stems, hitpoints <= 0),[map(stems, set(hitpoints, 0)),die()] ),  map(stems,'stem', set(stem.vars.target_x, context.midpoint_x + ((index+1)*context.target_x/stem_size)))] where target_x = (wave(cycle*sidle_speed)*sidle_range)/1000"
solid_area="5,5,20,15"
springiness="100"
timer_frequency="5"
traction="1000"
traction_in_air="1000"
zorder="0"
	[properties]
	get_hit_by="def(collide_with) execute(me,
	             if(not (me in collide_with.tmp.already_hit), [
				set(collide_with.tmp, 'already_hit', collide_with.tmp.already_hit + [me]),
				if(collide_with.vars.damage > consts.armor,
				  [
				   if(me.hitpoints > collide_with.vars.damage,
				    [
				      if(collide_with.vars.damage <= consts.flinch_threshold,
						schedule(4, [set(me.green, 255), set(me.blue, 255)]),
					    set(me.animation, 'hurt')),
				      set(me.green, 100), set(me.blue, 100)
					]),
				   set(me.hitpoints, me.hitpoints - collide_with.vars.damage)
				  ]),
				if(collide_with.vars.damage > consts.flinch_threshold and me.hurt_velocity_y and (not collide_with.tmp.no_flinch_attack), set(me.velocity_y,(me.hurt_velocity_y))),
				if(collide_with.vars.damage > consts.flinch_threshold and me.hurt_velocity_x and (not collide_with.tmp.no_flinch_attack), set(me.velocity_x, ((me.hurt_velocity_x * collide_with.facing + collide_with.velocity_x/2)*collide_with.mass*if(collide_with.attack_force, collide_with.attack_force, 100))/(me.mass*100)))]))"
	hurt_velocity_x="400"
	hurt_velocity_y="-800"
	[/properties]

	[vars]
	damage="1"
	points_value="50"
	sidle_range="20"
	sidle_speed="8"
	stem_size="3"
	stem_voffset="14"
	team="'evil'"
	[/vars]

	[properties]
	hurt_velocity_x="0"
	hurt_velocity_y="0"
	[/properties]

	[animation]
	accel_y="80"
	body_area="all"
	duration="10"
	frame_info="23,5,15,5,425,653,33,18,24,3,13,2,458,653,34,23,25,1,13,0,492,653,33,27"
	frames="3"
	frames_per_row="1"
	id="editor"
	image="compiled-1.png"
	rect="402,648,472,675"
	[/animation]

	[animation]
	accel_y="80"
	body_area="all"
	duration="12"
	frame_info="2,2,3,1,842,923,22,17,2,2,2,1,864,923,23,17"
	frames="2"
	frames_per_row="1"
	id="normal"
	image="compiled-1.png"
	rect="840,921,866,940"
	[/animation]

	[animation]
	duration="18"
	events="6:12:18:hurtflicker"
	frames="1"
	id="hurt"
	[/animation]

[/prototype]

