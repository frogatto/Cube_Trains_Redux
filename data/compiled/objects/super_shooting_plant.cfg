{
	"animation": [
		{
			"accel_y": 80,
			"body_area": "all",
			"duration": 6,
			"frame_info": [0,0,0,0,840,520,27,27,0,1,0,0,867,520,27,26,0,2,0,0,894,520,27,25,0,3,0,0,921,520,27,24],
			"frames": 4,
			"frames_per_row": 4,
			"id": "normal",
			"image": "compiled-2.png",
			"rect": [840,520,866,546],
			"reverse": true
		},
		{
			"accel_y": 80,
			"body_area": "all",
			"duration": 6,
			"frame_info": [0,15,0,0,221,247,31,18,2,6,2,0,252,247,27,27,4,3,4,0,279,247,23,30,4,3,4,0,302,247,23,30,4,1,4,0,325,247,23,32],
			"frames": 5,
			"frames_per_row": 5,
			"id": "hurt",
			"image": "compiled-2.png",
			"rect": [221,232,251,264],
			"solid_area": [6,19,25,33]
		},
		{
			"accel_y": 80,
			"body_area": "all",
			"duration": 4,
			"events": "4:shoot",
			"frame_info": [4,3,4,0,0,280,23,30,4,1,4,0,23,280,23,32],
			"frames": 2,
			"frames_per_row": 2,
			"id": "shoot",
			"image": "compiled-2.png",
			"rect": [-4,277,26,309],
			"reverse": false,
			"solid_area": [6,19,25,33]
		},
		{
			"accel_y": 80,
			"body_area": "all",
			"duration": 4,
			"frame_info": [0,15,0,0,288,888,31,18,0,15,0,0,319,888,31,18],
			"frames": 2,
			"frames_per_row": 2,
			"id": "chargeup",
			"image": "compiled-2.png",
			"rect": [288,873,318,905],
			"reverse": true,
			"solid_area": [6,19,25,33]
		},
		{
			"accel_y": 80,
			"body_area": "all",
			"duration": 6,
			"frame_info": [2,6,2,0,948,520,27,27,1,12,1,0,975,520,29,21],
			"frames": 2,
			"frames_per_row": 2,
			"id": "prepare",
			"image": "compiled-2.png",
			"rect": [946,514,976,546],
			"reverse": false,
			"solid_area": [6,19,25,33]
		}
	],
	"consts": {
		"basic_type": "super_shooting_plant",
		"chargeup_repeat": 0,
		"frogourmet_tag": "super_shooting_plant",
		"normal_repeat": 0
	},
	"editor_info": {
		"category": "plants"
	},
	"feet_width": 4,
	"friction": 1000,
	"hitpoints": 200,
	"id": "super_shooting_plant",
	"mass": 5,
	"on_add_object_fail": "[if(collide_with.team != team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]",
	"on_bounced_on": "[if(jumped_on_by.mass >= 1000, die(), animation('spring'))]",
	"on_change_animation_failure": "fire_event('solidity_fail')",
	"on_change_solid_dimensions_fail": "fire_event('solidity_fail')",
	"on_collide_object_body": "if(collide_with.team != team and collide_with_area in ['attack'], get_hit_by(collide_with))",
	"on_die": "[score(level,points_value), spawn_item(self), death_burst_tracked(self)]",
	"on_end_chargeup_anim": "if(tmp.anim_repeat > consts.chargeup_repeat,
                      [animation('shoot'), set(tmp.anim_repeat, 0)],
					  [animation('chargeup'), add(tmp.anim_repeat, 1)])",
	"on_end_hurt_anim": "animation('normal')",
	"on_end_normal_anim": "if(tmp.anim_repeat > consts.normal_repeat,
                      [animation('prepare'), set(tmp.anim_repeat, 0)],
					  [animation('normal'), add(tmp.anim_repeat, 1)])",
	"on_end_prepare_anim": "animation('chargeup')",
	"on_end_shoot_anim": "animation('normal')",
	"on_enter_anim": "set(tmp, 'already_hit', [])",
	"on_shoot": "spawn('pollen_ball_huge', midpoint_x, midpoint_y, facing)",
	"on_solidity_fail": "if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1,60),
			   resolve_solid(me,2,-1,250),
			   resolve_solid(me,-2,-1,250),
			   resolve_solid(me,0,-1,500),
			   resolve_solid(me),
			   set(tmp.in_solidity_fail, 0)
			  ])",
	"on_surface_damage": "die()",
	"properties": {
		"attack_damage": 0,
		"attack_knockback": 0,
		"cause_flinch": "def(collide_with) execute(me, [
			add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y),
			if('hurt' in available_animations,set(me.animation, 'hurt'))
			])",
		"damage_cooldown": 0,
		"difficulty_casual": 0,
		"difficulty_intense": 1,
		"difficulty_unfair": 2,
		"display_hurt_visuals": "def() execute(me, 
					[
					hurt_flash_sequence()
					])",
		"display_posthit_invincibility_flash_sequence": "def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )",
		"flash_bright": "def() [set(me.brightness, 1023)]",
		"flash_off": "def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]",
		"flash_red": "def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]",
		"flinch_threshold": 3,
		"get_hit_by": "def(collide_with) execute(me, [
						if((not is_invincible) and (collide_with.attack_damage > 0) and (collide_with.attack_damage >= armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])",
		"handle_damage": "def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))",
		"handle_damage_type": "def(collide_with) null #virtual#",
		"handle_flinch": "def(collide_with) 
			execute(me, if(collide_with.attack_damage >= flinch_threshold, cause_flinch(collide_with)))",
		"handle_knockback": "def(collide_with) null",
		"hurt_flash_sequence": "def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]",
		"hurt_velocity_x": 0,
		"hurt_velocity_y": 0,
		"is_invincible": "if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)",
		"is_invincible_posthit": "if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)",
		"standard_thrown_damage": 400,
		"team": "'evil'"
	},
	"solid_area": [4,13,23,27],
	"springiness": 100,
	"timer_frequency": 2,
	"tmp": {
		"anim_repeat": 0
	},
	"traction": 1000,
	"traction_in_air": 1000,
	"variations": null,
	"vars": {
		"damage": 1,
		"points_value": 7
	},
	"zorder": 30
}