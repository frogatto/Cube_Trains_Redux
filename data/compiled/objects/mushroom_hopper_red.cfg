[prototype]
friction="1000"
id="mushroom_hopper_red"
mass="5"
on_add_object_fail="[if(collide_with.team != team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]"
on_change_animation_failure="fire_event('solidity_fail')"
on_change_solid_dimensions_fail="fire_event('solidity_fail')"
on_collide_feet="fire_event(me, 'land')"
on_collide_object_body="if(collide_with.team != team and collide_with.team != 'evil_harmless' and (not (collide_with.team = 'evil' and team = 'evil_harmless')), if(collide_with_area = 'attack', get_hit_by(collide_with)))"
on_end_fall_anim="if(is_standing, fire_event(me, 'land'), animation('fall'))"
on_end_headless_anim="animation('regrow')"
on_end_hop_anim="[animation('fall'),set(velocity_y,-800-1d400),set(velocity_x, (200+1d100)* if(level.player.midpoint_x<midpoint_x,-1,1))]"
on_end_inflate_anim="[spawn('mushroom_hopper_red.cap',midpoint_x,y-10,facing,[set(velocity_y,-1000)]),animation('headless')]"
on_end_land_anim="if(vars.rebound,[animation('fall'),set(velocity_y,vars.rebound), set(vars.rebound,0)],animation('stand'))"
on_end_regrow_anim="animation('stand')"
on_end_stand_anim="[if(1d3=3,animation('inflate'),animation('hop'))]"
on_land="[if(velocity_y>300,set(vars.rebound, -(velocity_y*2)/3)),animation('land')]"
on_solidity_fail="if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1,60),
			   resolve_solid(me,2,-1,250),
			   resolve_solid(me,-2,-1,250),
			   resolve_solid(me,0,-1,500),
			   set(tmp.in_solidity_fail, 0)
			  ])"
solid_area="8,11,15,21"
solid_dimensions="enemy,common"
springiness="100"
tags="swallowable"
traction="1000"
traction_in_air="0"
	[consts]
	basic_animation="'stand'"
	basic_type="'mushroom_hopper_red'"
	flinch_threshold="3"
	frogourmet_tag="'mushroom_hopper_red'"
	solid_dimensions="['common','enemy']"
	thrown_type="'mushroom_hopper_red.thrown'"
	[/consts]

	[properties]
	attack_damage="0"
	attack_knockback="0"
	cause_flinch="def(collide_with) execute(me, [add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y)])"
	damage_cooldown="0"
	display_hurt_visuals="def() execute(me, 
					[if('hurt' in available_animations,set(me.animation, 'hurt')),
					hurt_flash_sequence()
					])"
	display_posthit_invincibility_flash_sequence="def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )"
	flash_bright="def() [set(me.brightness, 1023)]"
	flash_off="def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]"
	flash_red="def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]"
	get_hit_by="def(collide_with) execute(me, [
						if((not is_invincible) and (collide_with.attack_damage > 0) and (collide_with.attack_damage > consts.armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])"
	handle_damage="def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))"
	handle_damage_type="def(collide_with) null() #virtual#"
	handle_flinch="def(collide_with) 
			execute(me, if(collide_with.attack_damage > consts.flinch_threshold, cause_flinch(collide_with)))"
	handle_knockback="def(collide_with) execute(me,add(velocity_x, collide_with.facing * collide_with.attack_knockback))"
	hurt_flash_sequence="def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]"
	hurt_velocity_x="-200"
	hurt_velocity_y="-400"
	is_invincible="if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)"
	is_invincible_posthit="if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)"
	[/properties]

	[animation]
	accel_x="0"
	accel_y="60"
	attack_area="5,5,17,10"
	body_area="all"
	duration="5"
	frame_info="4,6,4,1,244,733,15,16"
	frames="1"
	id="hop"
	image="compiled-2.png"
	rect="240,727,262,749"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="60"
	attack_area="5,5,17,10"
	body_area="all"
	duration="5"
	frame_info="4,6,4,1,244,733,15,16"
	frames="1"
	id="land"
	image="compiled-2.png"
	rect="240,727,262,749"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="60"
	attack_area="5,5,17,10"
	body_area="all"
	duration="10"
	frame_info="4,3,4,2,1009,381,15,18"
	frames="1"
	id="fall"
	image="compiled-0.png"
	rect="1005,378,1027,400"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="60"
	attack_area="5,5,17,10"
	body_area="all"
	duration="40"
	frame_info="4,5,4,1,1009,99,15,17"
	frames="1"
	id="stand"
	image="compiled-1.png"
	rect="1005,94,1027,116"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="60"
	attack_area="5,5,17,10"
	body_area="all"
	duration="5"
	frame_info="3,6,3,1,812,698,17,16,2,5,2,1,829,698,19,17"
	frames="2"
	id="inflate"
	image="compiled-2.png"
	rect="809,692,831,714"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="60"
	attack_area="5,5,17,10"
	body_area="all"
	duration="5"
	frame_info="3,6,3,1,812,698,17,16,2,5,2,1,829,698,19,17"
	frames="2"
	id="inflate"
	image="compiled-2.png"
	rect="809,692,831,714"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="60"
	attack_area="5,5,17,10"
	body_area="all"
	duration="5"
	frame_info="8,11,8,1,961,749,7,11,6,14,6,1,968,749,11,8,7,12,7,1,979,749,9,10,7,10,7,1,988,749,9,12,7,11,7,1,997,749,9,11"
	frames="5"
	id="headless"
	image="compiled-2.png"
	rect="953,738,975,760"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="60"
	attack_area="5,5,17,10"
	body_area="all"
	duration="5"
	frame_info="7,9,7,1,976,733,9,13,7,8,7,1,985,733,9,14"
	frames="2"
	id="regrow"
	image="compiled-2.png"
	rect="969,724,991,746"
	[/animation]

	[editor_info]
	category="plants"
	[/editor_info]

	[properties]
	attack_damage="1"
	team="'evil'"
	[/properties]

	[vars]
	points_value="10"
	rebound="0"
	[/vars]

	[object_type]
	id="thrown"
	prototype="throwable_small_enemy"
	solid_area="8,11,15,21"
		[consts]
		basic_type="'mushroom_hopper_red'"
		frogourmet_tag="'mushroom_hopper_red'"
		thrown_type="'mushroom_hopper_red.thrown'"
		[/consts]

		[animation]
		accel_x="0"
		accel_y="60"
		body_area="none"
		duration="60"
		frames="1"
		id="thrown"
		image="enemies/mushroom-hopper-red.png"
		pad="3"
		rect="131,1,153,23"
		thrown_area="all"
		[/animation]

		[animation]
		accel_x="0"
		accel_y="60"
		body_area="all"
		duration="3"
		frames="3"
		id="on_back"
		image="enemies/mushroom-hopper-red.png"
		pad="3"
		rect="105,1,127,23"
		[/animation]

	[/object_type]

	[object_type]
	affected_by_currents="yes"
	always_active="yes"
	id="cap"
	object_level_collisions="yes"
	on_die="spawn('explosion_big_dusty',midpoint_x,midpoint_y,facing)"
	on_end_anim="[animation('normal'),if(velocity_y > 50,die())]"
	prototype="shot"
	zorder="10"
		[animation]
		accel_y="20"
		attack_area="all"
		duration="4"
		frames="4"
		frames_per_row="2"
		id="normal"
		image="enemies/mushroom-hopper-red.png"
		pad="3"
		rect="186,4,202,20"
		[/animation]

	[/object_type]

[/prototype]

