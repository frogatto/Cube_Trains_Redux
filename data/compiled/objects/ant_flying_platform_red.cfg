[prototype]
activation_border="150"
friction="1000"
has_feet="no"
hitpoints="5"
id="ant_flying_platform_red"
mass="3"
on_add_object_fail="[if(collide_with.vars.team != vars.team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]"
on_bounced_on=""
on_change_animation_failure="fire_event('solidity_fail')"
on_change_solid_dimensions_fail="fire_event('solidity_fail')"
on_collide_feet="set(velocity_y, -velocity_y/2)"
on_collide_head=""
on_collide_object_body="if(collide_with.vars.team != vars.team, if(collide_with_area = 'attack', get_hit_by(collide_with)))"
on_collide_side="[if(not (animation in ['hurt']), fire_event('turn')),set(velocity_x, -velocity_x/2)]"
on_create="[animation('fly'), if(vars.desired_height = null(), set(vars.desired_height, midpoint_y))]"
on_die="[score(level,points_value), spawn_item(self), if(vars.died_in_water,
																		[if(abs(water_bounds[1] - midpoint_y) > 40, 
																		spawn('water_splash_underwater_big', midpoint_x, midpoint_y, if(1d2=2,facing,-facing)),
																		spawn('water_splash', midpoint_x, water_bounds[1]+10, if(1d2=2,facing,-facing))),
																	sound('water-enter.ogg'),],
																spawn('die_cloud', midpoint_x, midpoint_y, facing))]"
on_end_anim="animation('fly')"
on_end_hurt_anim="animation('fly')"
on_enter_anim="set(tmp.already_hit, [])"
on_enter_water="[set(vars.died_in_water,1),die()]"
on_hurtflicker="if(green = 100,[set(green, 255), set(blue, 255)],[set(green, 100), set(blue, 100)])"
on_leave_hurt_anim="[set(green, 255), set(blue, 255)]"
on_leave_turn_anim="set(facing, -facing)"
on_lose_wings="[set(type, consts.basic_type),animation(consts.basic_animation)]"
on_process_fly="[if(solid(level, front + facing*100, y, 1, y2 - y),
	            fire_event('turn')),fire_event('test_bounds'),
	            set(velocity_y, wave( min(250,max(-250, destination_height-midpoint_y ) ) ))
	            
	            ] where destination_height = vars.desired_height"
on_solidity_fail="if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1,60),
			   resolve_solid(me,2,-1,250),
			   resolve_solid(me,-2,-1,250),
			   resolve_solid(me,0,-1,500),
			   set(tmp.in_solidity_fail, 0)
			  ])"
on_surface_damage="die()"
on_test_bounds="[if(not animation in ['turn'],if(facing < 0 and x < vars.x_bound or
	                facing > 0 and x2 > vars.x2_bound,
					fire_event('turn')))]"
on_turn="if(cycle-vars.last_turned > 30 and (not animation in ['turn']),[set(vars.last_turned,cycle),animation('turn')])"
solid_area="2,7,23,25"
solid_dimensions="enemy,common"
tags="swallowable"
traction="1000"
traction_in_air="1000"
	[consts]
	basic_animation="'stand'"
	basic_type="'ant_platform_red'"
	bounce_roundness="10"
	flinch_threshold="3"
	normal_damage="1"
	solid_dimensions="['enemy', 'common']"
	spring_amount="1200"
	springiness="0"
	thrown_damage="5"
	thrown_type="'ant_platform_red.thrown'"
	[/consts]

	[properties]
	attack_damage="0"
	attack_knockback="0"
	damage_cooldown="0"
	flash_color="def(collide_with) execute(me, if(collide_with.attack_damage < me.hitpoints,
					[schedule(4, [set(me.green, 255), set(me.blue, 255)]), set(me.animation, 'hurt'), set(me.green, 100), set(me.blue, 100)]))"
	get_hit_by="def(collide_with) execute(me, [
						if((not is_invincible_posthit) and (collide_with.attack_damage > 0) and (collide_with.attack_damage > consts.armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[flash_color(collide_with),handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])"
	handle_damage="def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))"
	handle_damage_type="def(collide_with) null() #virtual#"
	handle_flinch="def(collide_with) 
			execute(me, if(collide_with.attack_damage > consts.flinch_threshold, [add(me.velocity_x,me.hurt_velocity_x), add(me.velocity_y,me.hurt_velocity_y)]))"
	handle_knockback="def(collide_with) execute(me,add(velocity_x, collide_with.facing * collide_with.attack_knockback))"
	hurt_velocity_x="200"
	hurt_velocity_y="-400"
	is_invincible_posthit="if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)"
	[/properties]

	[tmp]
	time_last_hit="0"
	[/tmp]

	[vars]
	damage="1"
	last_turned="0"
	points_value="13"
	team="'evil'"
	turns_at_cliffs="1"
	[/vars]

	[properties]
	attack_damage="1"
	[/properties]

	[animation]
	accel_x="10"
	accel_y="0"
	attack_area="none"
	body_area="all"
	duplicates="6"
	duration="6"
	frame_info="0,7,0,3,349,603,25,18,0,7,0,3,374,603,25,18,0,7,0,3,399,603,25,18,2,7,0,1,424,603,23,20"
	frames="4"
	id="fly"
	image="compiled-2.png"
	rect="349,596,373,623"
	reverse="yes"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="10"
	accel_y="0"
	attack_area="none"
	body_area="all"
	duration="6"
	frame_info="0,7,0,3,72,603,25,18,0,7,0,3,97,603,25,18,0,7,0,3,122,603,25,18,2,7,0,1,147,603,23,20"
	frames="4"
	id="fly"
	image="compiled-2.png"
	rect="72,596,96,623"
	reverse="yes"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="0"
	attack_area="none"
	body_area="all"
	duration="4"
	frame_info="0,7,0,3,792,662,25,18,2,7,2,3,817,662,21,18"
	frames="2"
	frames_per_row="1"
	id="turn"
	image="compiled-2.png"
	rect="792,655,816,682"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="40"
	attack_area="none"
	body_area="all"
	duration="6"
	events="6:12:18:hurtflicker"
	frame_info="3,6,0,2,0,603,22,20,0,6,0,2,22,603,25,20,0,6,0,2,47,603,25,20"
	frames="3"
	id="lose_wings"
	image="compiled-2.png"
	rect="-3,597,21,624"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	attack_area="none"
	body_area="all"
	duration="18"
	events="6:12:18:hurtflicker"
	frame_info="2,7,1,1,683,603,22,20"
	frames="1"
	id="hurt"
	image="compiled-2.png"
	rect="681,596,705,623"
	rotate_on_slope="yes"
	[/animation]

[/prototype]

