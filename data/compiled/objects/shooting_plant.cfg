[prototype]
feet_width="4"
friction="1000"
hitpoints="2"
id="shooting_plant"
mass="5"
on_bounced_on="[debug('jumped on ', jumped_on_by.mass), if(jumped_on_by.mass >= 1000, die(), animation('spring'))]"
on_collide_object_body="if(collide_with.vars.team != vars.team and collide_with_area = 'attack', get_hit_by(collide_with))"
on_create="animation('normal')"
on_die="[score(level,points_value), spawn_item(self), spawn('die_cloud', midpoint_x, midpoint_y, facing)]"
on_end_hurt_anim="animation('normal')"
on_end_normal_anim="if(facing != desired_facing, animation('turn'), animation('shoot')) where desired_facing = if(level.player.x < x, -1, 1)"
on_end_shoot_anim="animation('normal')"
on_end_spring_anim="animation('normal')"
on_end_turn_anim="[facing(if(level.player.x < x, -1, 1)), animation('normal')]"
on_enter_anim="set(tmp, 'already_hit', [])"
on_hurtflicker="if(green = 100,[set(green, 255), set(blue, 255)],[set(green, 100), set(blue, 100)])"
on_leave_hurt_anim="[set(green, 255), set(blue, 255)]"
on_shoot="spawn('pollen_ball', midpoint_x+20*facing, midpoint_y-12, facing, [set_value('velocity_x', 300*facing)])"
on_surface_damage="die()"
solid_area="5,8,18,22"
springiness="100"
timer_frequency="2"
traction="1000"
traction_in_air="1000"
zorder="0"
	[properties]
	get_hit_by="def(collide_with) if(not (me in collide_with.tmp.already_hit), [
				set(collide_with.tmp, 'already_hit', collide_with.tmp.already_hit + [me]),
				if(collide_with.vars.damage > consts.armor,
				  [
				   if(me.hitpoints > collide_with.vars.damage,
				    [
				      if(collide_with.vars.damage <= consts.flinch_threshold,
						schedule(4, [set(me.green, 255), set(me.blue, 255)]),
					    set(me.animation, 'hurt')),
				      set(me.green, 100), set(me.blue, 100)
					]),
				   set(me.hitpoints, me.hitpoints - collide_with.vars.damage)
				  ]),
				if(collide_with.vars.damage > consts.flinch_threshold and me.hurt_velocity_y, set(me.velocity_y,(me.hurt_velocity_y))),
				if(collide_with.vars.damage > consts.flinch_threshold and me.hurt_velocity_x, set(me.velocity_x, ((me.hurt_velocity_x * collide_with.facing + collide_with.velocity_x/2)*collide_with.mass*if(collide_with.attack_force, collide_with.attack_force, 100))/(me.mass*100)))])"
	hurt_velocity_x="400"
	hurt_velocity_y="-800"
	[/properties]

	[vars]
	damage="1"
	points_value="50"
	team="'evil'"
	[/vars]

	[properties]
	hurt_velocity_x="0"
	hurt_velocity_y="0"
	[/properties]

	[animation]
	accel_y="80"
	body_area="all"
	duplicates="6"
	duration="30"
	frame_info="5,4,6,1,751,695,16,19"
	frames="1"
	id="normal"
	image="compiled-1.png"
	rect="746,691,772,714"
	[/animation]

	[animation]
	accel_y="80"
	body_area="all"
	duration="30"
	frame_info="5,5,6,1,673,734,16,18"
	frames="1"
	id="normal"
	image="compiled-1.png"
	rect="668,729,694,752"
	[/animation]

	[animation]
	accel_y="80"
	body_area="all"
	duration="6"
	events="40:shoot"
	frame_info="4,3,7,1,589,651,16,20,3,3,7,1,605,651,17,20,2,2,7,1,622,651,18,21,4,3,7,1,640,651,16,20,3,9,4,1,656,651,20,14,3,9,3,1,676,651,21,14,4,7,5,1,697,651,18,16,3,9,4,1,715,651,20,14"
	frames="8"
	id="shoot"
	image="compiled-1.png"
	rect="585,648,611,671"
	[/animation]

	[animation]
	accel_y="80"
	body_area="all"
	duration="10"
	frame_info="6,5,6,1,807,734,15,18,6,5,6,1,822,734,15,18,6,5,6,1,837,734,15,18"
	frames="3"
	id="turn"
	image="compiled-1.png"
	rect="801,729,827,752"
	[/animation]

	[animation]
	accel_y="80"
	body_area="all"
	duration="5"
	frame_info="3,10,3,1,494,651,21,13,3,15,3,1,515,651,21,8,5,4,6,1,536,651,16,19,6,1,8,1,552,651,13,22"
	frames="4"
	id="spring"
	image="compiled-1.png"
	rect="491,641,517,664"
	[/animation]

	[animation]
	accel_y="80"
	body_area="all"
	duration="15"
	events="6:12:18:hurtflicker"
	frame_info="3,3,8,1,948,674,16,20,0,3,10,1,964,674,17,20"
	frames="2"
	id="hurt"
	image="compiled-1.png"
	rect="945,671,971,694"
	[/animation]

	[animation]
	accel_y="80"
	body_area="none"
	duration="3"
	frame_info="5,2,6,1,462,651,16,21,5,1,6,1,478,651,16,22"
	frames="2"
	id="thrown"
	image="compiled-1.png"
	rect="457,649,483,672"
	[/animation]

	[consts]
	springiness="160"
	[/consts]

[/prototype]

