[prototype]
feet_width="4"
friction="1000"
hitpoints="50"
id="shooting_plant"
mass="5"
on_add_object_fail="[if(collide_with.team != team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]"
on_bounced_on="animation('spring')"
on_change_animation_failure="fire_event('solidity_fail')"
on_change_solid_dimensions_fail="fire_event('solidity_fail')"
on_collide_feet="animation('stand')"
on_collide_head="set(velocity_y, -velocity_y/2)"
on_collide_object_body="if(collide_with.team != team and collide_with_area in ['attack'], get_hit_by(collide_with))"
on_collide_side="if(not (animation in ['hurt']), [set(facing, -facing), animation('turn'), set(velocity_x,0)])"
on_create="animation('stand')"
on_die="[score(level,points_value), spawn_item(self), death_burst_tracked(self)]"
on_end_hurt_anim="animation('stand')"
on_end_shoot_anim="animation('stand')"
on_end_spring_anim="animation('stand')"
on_end_stand_anim="if(facing != desired_facing, animation('turn'), animation('shoot')) where desired_facing = if(level.player.x < x, -1, 1)"
on_end_turn_anim="[facing(if(level.player.x < x, -1, 1)), animation('stand')]"
on_enter_anim="set(tmp, 'already_hit', [])"
on_enter_water="die()"
on_jumped_on="[if(jumped_on_by.mass >= 20, die())]"
on_shoot="spawn('pollen_ball', midpoint_x+20*facing, midpoint_y-12, facing, [set(velocity_x, 300*facing)])"
on_solidity_fail="if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1,60),
			   resolve_solid(me,2,-1,250),
			   resolve_solid(me,-2,-1,250),
			   resolve_solid(me,0,-1,500),
			   set(tmp.in_solidity_fail, 0)
			  ])"
on_stomped_on="[add(hitpoints, -3), set(green, 100), set(blue, 100),
	                schedule(4, [set(green, 255), set(blue, 255)])]"
on_surface_damage="die()"
solid_area="5,8,19,21"
solid_dimensions="enemy,common"
springiness="100"
tags="swallowable"
timer_frequency="2"
traction="1000"
traction_in_air="1000"
zorder="0"
	[consts]
	basic_type="'shooting_plant'"
	flinch_threshold="3"
	frogourmet_tag="'shooting_plant'"
	solid_dimensions="['enemy', 'common']"
	springiness="160"
	thrown_type="'shooting_plant.thrown'"
	[/consts]

	[properties]
	attack_damage="0"
	attack_knockback="0"
	cause_flinch="def(collide_with) execute(me, [
			add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y),
			if('hurt' in available_animations,set(me.animation, 'hurt'))
			])"
	damage_cooldown="0"
	display_hurt_visuals="def() execute(me, 
					[
					hurt_flash_sequence()
					])"
	display_posthit_invincibility_flash_sequence="def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )"
	flash_bright="def() [set(me.brightness, 1023)]"
	flash_off="def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]"
	flash_red="def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]"
	get_hit_by="def(collide_with) execute(me, [
						if((not is_invincible) and (collide_with.attack_damage > 0) and (collide_with.attack_damage >= consts.armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])"
	handle_damage="def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))"
	handle_damage_type="def(collide_with) null() #virtual#"
	handle_flinch="def(collide_with) 
			execute(me, if(collide_with.attack_damage >= consts.flinch_threshold, cause_flinch(collide_with)))"
	handle_knockback="def(collide_with) execute(me,add(velocity_x, collide_with.facing * collide_with.attack_knockback))"
	hurt_flash_sequence="def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]"
	hurt_velocity_x="-200"
	hurt_velocity_y="-400"
	is_invincible="if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)"
	is_invincible_posthit="if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)"
	[/properties]

	[vars]
	damage="1"
	points_value="8"
	[/vars]

	[properties]
	hurt_velocity_x="0"
	hurt_velocity_y="0"
	team="'evil'"
	[/properties]

	[animation]
	accel_y="80"
	body_area="all"
	duplicates="6"
	duration="30"
	frame_info="5,4,6,1,1007,912,16,19"
	frames="1"
	id="normal"
	image="compiled-0.png"
	rect="1002,908,1028,931"
	[/animation]

	[animation]
	accel_y="80"
	body_area="all"
	duplicates="6"
	duration="30"
	frame_info="5,4,6,1,1007,912,16,19"
	frames="1"
	id="stand"
	image="compiled-0.png"
	rect="1002,908,1028,931"
	[/animation]

	[animation]
	accel_y="80"
	body_area="all"
	duration="30"
	frame_info="5,5,6,1,622,765,16,18"
	frames="1"
	id="stand"
	image="compiled-2.png"
	rect="617,760,643,783"
	[/animation]

	[animation]
	accel_y="80"
	body_area="all"
	duration="6"
	events="40:shoot"
	frame_info="4,3,7,1,416,543,16,20,3,3,7,1,432,543,17,20,2,2,7,1,449,543,18,21,4,3,7,1,467,543,16,20,3,9,4,1,483,543,20,14,3,9,3,1,503,543,21,14,4,7,5,1,524,543,18,16,3,9,4,1,542,543,20,14"
	frames="8"
	id="shoot"
	image="compiled-0.png"
	rect="412,540,438,563"
	[/animation]

	[animation]
	accel_y="80"
	body_area="all"
	duration="10"
	frame_info="6,5,6,1,714,765,15,18,6,5,6,1,729,765,15,18,6,5,6,1,744,765,15,18"
	frames="3"
	id="turn"
	image="compiled-2.png"
	rect="708,760,734,783"
	[/animation]

	[animation]
	accel_y="80"
	body_area="all"
	duration="5"
	frame_info="3,10,3,1,324,543,21,13,3,15,3,1,345,543,21,8,5,4,6,1,366,543,16,19,6,1,8,1,382,543,13,22"
	frames="4"
	id="spring"
	image="compiled-0.png"
	rect="321,533,347,556"
	[/animation]

	[animation]
	accel_y="80"
	body_area="all"
	duration="15"
	frame_info="3,3,8,1,182,725,16,20,0,3,10,1,198,725,17,20"
	frames="2"
	id="hurt"
	image="compiled-2.png"
	rect="179,722,205,745"
	[/animation]

	[editor_info]
	category="plants"
	[/editor_info]

	[properties]
	handle_damage_type="def(collide_with)
						if(collide_with.damage_type = 'stun', if(consts.thrown_type, [add(velocity_y,hurt_velocity_y), set(type, consts.thrown_type), animation('on_back')] ))"
	hurt_velocity_x="0"
	hurt_velocity_y="100"
	[/properties]

	[object_type]
	id="thrown"
	prototype="throwable_small_enemy"
	solid_area="5,8,19,21"
	solid_dimensions="common,enemy"
		[consts]
		basic_type="'shooting_plant'"
		frogourmet_tag="'shooting_plant'"
		thrown_type="'shooting_plant.thrown'"
		[/consts]

		[animation]
		body_area="none"
		duration="5"
		frames="2"
		id="thrown"
		image="enemies/plant-shooting.png"
		rect="93,83,119,106"
		thrown_area="all"
		[/animation]

		[animation]
		body_area="all"
		duration="5"
		frames="2"
		id="on_back"
		image="enemies/plant-shooting.png"
		rect="93,83,119,106"
		thrown_area="none"
		[/animation]

	[/object_type]

[/prototype]

