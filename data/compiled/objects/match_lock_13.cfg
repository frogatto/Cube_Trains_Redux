[prototype]
always_active="no"
id="match_lock_13"
next_animation="'normal'"
on_fail="transform(range(t+1), schedule(v, set(alpha, (t-v)*51))) where t = 5"
on_start_level="[
		spawn('{self.type}.backing', midpoint_x, midpoint_y, facing),
		set(alpha, 0),
		]"
on_timer="if(length(midpoint_x, midpoint_y, level.player.midpoint_x, level.player.midpoint_y) < 35 and alpha = 0, fire_event('triggered'))"
on_triggered="[
		transform(range(6), schedule(v, set(alpha, v*51))), #(6-1)*51=255, full opacity.#
		if(overseer, 
			schedule(30, fire_event(overseer, 'match', self)), 
			debug('ERROR: No match_lock_controller for group {self.vars.group} found.')
			) where overseer = find(level.chars, 'char', char.type = 'match_lock_controller' and char.vars.group = context.self.vars.group),
		]"
timer_frequency="3"
zorder="-5"
	[editor_info]
	category="keys_&_triggers"
	help="Place pairs of these. When all pairs in the group are lit,
			 an event specified in the match_lock_controller will
			 be fired. The positions of these triggers will be randomly
			 shuffled on level load, Enigma-style."
		[var]
		name="group"
		type="int"
		value="1"
		[/var]

	[/editor_info]

	[properties]
	colour="def(obj) [set(obj.red, vars.red*50), set(obj.green, vars.green*50), set(obj.blue, vars.blue*50)]"
	[/properties]

	[object_type]
	always_active="no"
	id="backing"
	next_animation="'normal'"
	zorder="-6"
		[animation]
		collide="0,0,32,32"
		duration="1000000000"
		frames="1"
		h="32"
		id="normal"
		image="props/match-buttons.png"
		w="32"
		x="0"
		y="0"
		[/animation]

	[/object_type]

	[animation]
	collide="0,0,32,32"
	duration="1000000000"
	frame_info="4,4,4,4,223,654,24,24"
	frames="1"
	id="normal"
	image="compiled-2.png"
	rect="219,650,250,681"
	[/animation]

	[animation]
	collide="0,0,32,32"
	duration="1000000000"
	frame_info="0,0,0,0,0,205,32,32"
	frames="1"
	id="blank"
	image="compiled-2.png"
	rect="0,205,31,236"
	[/animation]

[/prototype]

