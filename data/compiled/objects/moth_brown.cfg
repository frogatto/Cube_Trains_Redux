{
	"activation_border": 150,
	"animation": [
		{
			"accel_x": 10,
			"accel_y": 0,
			"body_area": "all",
			"duration": 6,
			"frame_info": [1,5,2,3,692,803,22,20,1,5,2,3,714,803,22,20,1,5,2,3,736,803,22,20,3,5,2,1,758,803,20,22],
			"frames": 4,
			"id": "fly",
			"image": "compiled-2.png",
			"rect": [691,798,715,825],
			"reverse": true,
			"rotate_on_slope": true
		},
		{
			"accel_x": 0,
			"accel_y": 0,
			"body_area": "all",
			"duration": 18,
			"frame_info": [2,5,4,1,648,803,19,22],
			"frames": 1,
			"id": "hurt",
			"image": "compiled-2.png",
			"rect": [646,798,670,825],
			"rotate_on_slope": true
		},
		{
			"accel_x": 0,
			"accel_y": 0,
			"body_area": "all",
			"duration": 4,
			"frame_info": [0,5,3,3,683,826,22,20,3,5,3,3,705,826,19,20],
			"frames": 2,
			"frames_per_row": 1,
			"id": "turn",
			"image": "compiled-2.png",
			"rect": [683,821,707,848],
			"rotate_on_slope": true
		}
	],
	"consts": {
		"basic_animation": "fly",
		"basic_type": "moth_brown",
		"bounce_roundness": 10,
		"frogourmet_tag": "moth_brown",
		"solid_dimensions": ["enemy","common"],
		"spring_amount": 1200,
		"springiness": 190,
		"thrown_type": "moth_brown.thrown"
	},
	"editor_info": {
		"category": "bugs",
		"var": [
			{
				"name": "x_bound",
				"type": "x",
				"value": "x - 200"
			},
			{
				"name": "x2_bound",
				"type": "x",
				"value": "x2 + 200"
			},
			{
				"name": "desired_height",
				"type": "y",
				"value": "midpoint_y"
			}
		]
	},
	"friction": 1000,
	"has_feet": false,
	"hitpoints": 50,
	"id": "moth_brown",
	"mass": 5,
	"object_type": [
		{
			"animation": [
				{
					"body_area": null,
					"duration": 60,
					"frames": 1,
					"id": "thrown",
					"image": "enemies/moth-brown.png",
					"rect": [31,33,55,60],
					"thrown_area": "all"
				},
				{
					"body_area": "all",
					"duration": 5,
					"frames": 2,
					"id": "on_back",
					"image": "enemies/moth-brown.png",
					"rect": [31,33,55,60]
				}
			],
			"consts": {
				"basic_animation": "fly",
				"basic_type": "moth_brown",
				"frogourmet_tag": "moth_brown",
				"thrown_type": "moth_brown.thrown"
			},
			"id": "thrown",
			"on_spat": "[%PROTO%, set(vars.bomb, null), set(attached_objects, [])]",
			"prototype": ["throwable_small_enemy"],
			"solid_dimensions": ["enemy","common"]
		},
		{
			"affected_by_currents": true,
			"always_active": true,
			"animation": [
				{
					"accel_y": 40,
					"attack_area": "all",
					"body_area": "all",
					"duration": 5,
					"frames": 1,
					"id": "normal",
					"image": "enemies/moth-brown.png",
					"pad": 3,
					"rect": [115,127,139,154]
				},
				{
					"accel_y": 40,
					"attack_area": "all",
					"body_area": "all",
					"duration": 4,
					"frames": 1,
					"frames_per_row": 1,
					"id": "normal2",
					"image": "enemies/moth-brown.png",
					"pad": 3,
					"rect": [115,158,139,185]
				},
				{
					"accel_y": 40,
					"attack_area": "all",
					"body_area": "all",
					"duration": 4,
					"frames": 1,
					"frames_per_row": 1,
					"id": "thrown",
					"image": "enemies/moth-brown.png",
					"pad": 3,
					"rect": [115,158,139,185]
				},
				{
					"accel_y": 40,
					"attack_area": "all",
					"body_area": "all",
					"duration": 2,
					"frames": 2,
					"frames_per_row": 1,
					"id": "danger",
					"image": "enemies/moth-brown.png",
					"pad": 3,
					"rect": [115,158,139,185]
				}
			],
			"id": "bomb",
			"object_level_collisions": true,
			"on_collide_feet": "[if(bounces > 0, [set(velocity_x, (velocity_x*3)/4), set(velocity_y, -(velocity_y)/2)], [set(velocity_x, 0), set(velocity_y, 0)]), set(bounces, bounces-1)]",
			"on_collide_head": "[set(velocity_y, -velocity_y)]",
			"on_collide_object_attack": "if(collide_with_area = 'body' and collide_with.team != team, die())",
			"on_collide_side": "[set(velocity_x, if(bounces > 0, (velocity_x*3)/4, 0)), set(bounces, bounces-1)]",
			"on_create": "[set(fall_through_platforms,10000),add_particles('fuse_sparks')]",
			"on_die": "[spawn('explosion_big_harmful',midpoint_x,midpoint_y-32,facing),sound('BombExplode.wav')]",
			"on_end_danger_anim": "[animation('danger')]",
			"on_end_normal2_anim": "[animation('normal2')]",
			"on_end_normal_anim": "animation('normal2')",
			"on_enter_water": "[die()]",
			"on_spat": "[set(countdown, 9), animation('normal2'), set(vars.has_been_spat, 1), set(bounces, 3)]",
			"on_timer": "[if(countdown = 0, die(), set(countdown, countdown-1)), if(countdown < 4, animation('danger'))]",
			"particle_system": {
				"animation": {
					"duration": 2,
					"frames": 3,
					"id": "sparkle",
					"image": "effects/particles2.png",
					"pad": 4,
					"rect": [6,30,12,36]
				},
				"id": "fuse_sparks",
				"max_x": 10,
				"max_y": 14,
				"min_x": 0,
				"min_y": 4,
				"spawn_rate": 150,
				"time_to_live": 6,
				"type": "simple",
				"velocity_x": -500,
				"velocity_x_random": 1000,
				"velocity_y": -500,
				"velocity_y_random": 1000
			},
			"properties": {
				"attack_damage": "if(vars.has_been_spat, 5, 1)",
				"damage_cooldown": 5,
				"team": "if(has_been_spat,'player','evil')"
			},
			"solid_area": [9,11,15,17],
			"tags": "swallowable",
			"timer_frequency": 20,
			"vars": {
				"bounces": 3,
				"countdown": 14,
				"has_been_spat": 0
			},
			"zorder": 10
		}
	],
	"on_add_object_fail": "[if(collide_with.team != team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]",
	"on_bounced_on": "fire_event('lose_wings')",
	"on_change_animation_failure": "fire_event('solidity_fail')",
	"on_change_solid_dimensions_fail": "fire_event('solidity_fail')",
	"on_collide_feet": "set(velocity_y, -velocity_y/2)",
	"on_collide_head": "set(velocity_y, -velocity_y/2)",
	"on_collide_object_body": "if(collide_with.team != team and collide_with.team != 'evil_harmless' and (not (collide_with.team = 'evil' and team = 'evil_harmless')), if(collide_with_area = 'attack', get_hit_by(collide_with)))",
	"on_collide_side": "[if(not (animation in ['hurt']), fire_event('turn')),set(velocity_x, -velocity_x/2)]",
	"on_create": "[animation('fly'), if(vars.desired_height = null, set(vars.desired_height, midpoint_y)), set(activation_border, abs(vars.x_bound - vars.x2_bound))]",
	"on_die": "[score(level,points_value), spawn_item(self), death_burst_tracked(self)]",
	"on_end_anim": "animation('fly')",
	"on_end_hurt_anim": "animation('fly')",
	"on_enter_water": "die()",
	"on_leave_turn_anim": "set(facing, -facing)",
	"on_lose_wings": "[set(type, consts.basic_type),animation(consts.basic_animation), map(range(1+1d3),spawn('broken_wing_shard',mid_x,mid_y,facing)),spawn('impact_cloud',mid_x,y,facing)]",
	"on_process": "[null, if(vars.bomb, [
	    set(vars.bomb.midpoint_x, midpoint_x), set(vars.bomb.midpoint_y, midpoint_y + 30), set(vars.bomb.time_in_animation, vars.bomb.time_in_animation+1)])]",
	"on_process_fly": "[if(solid(level, front + facing*100, y, 1, y2 - y),
	            fire_event('turn')),fire_event('test_bounds'),
	            set(velocity_y, wave( min(250,max(-250, destination_height-midpoint_y ) ) ))
	            ] where destination_height = target_height()",
	"on_solidity_fail": "if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1,60),
			   resolve_solid(me,2,-1,250),
			   resolve_solid(me,-2,-1,250),
			   resolve_solid(me,0,-1,500),
			   resolve_solid(me),
			   set(tmp.in_solidity_fail, 0)
			  ])",
	"on_spat": "[set(vars.bomb, null), set(attached_objects, []),null]",
	"on_surface_damage": "die()",
	"on_test_bounds": "[if(not animation in ['turn'],if(facing < 0 and x < vars.x_bound or
	                facing > 0 and x2 > vars.x2_bound,
					fire_event('turn')))]",
	"on_timer": "[null, if(animation = 'fly' and (not vars.bomb) and cycle > vars.launch_at,
	            [set(vars.bomb, new_object), set(attached_objects, [new_object]), set(vars.launch_at, cycle+25)] where new_object = object('moth_brown.bomb', midpoint_x, midpoint_y + 30, -1, {'animation' -> 'normal'})),
				if(vars.bomb and cycle > vars.launch_at and
				   midpoint_x > level.player.midpoint_x - 200 and
				   midpoint_x < level.player.midpoint_x + 200 and
				   facing_player,
				   [
				    set(vars.launch_at, cycle + 25)
				   ]
						),
				if(vars.bomb and cycle > vars.launch_at,
					   [
						set(vars.bomb.velocity_x, velocity_x),
						set(vars.bomb, null),
						set(vars.bomb.animation, 'normal2'),
						set(attached_objects, []),
						add_object(vars.bomb),
						set(vars.launch_at, cycle+25)
					   ]
				)
				]",
	"on_turn": "if(cycle-vars.last_turned > 30 and (not animation in ['turn']),[set(vars.last_turned,cycle),animation('turn')])",
	"properties": {
		"attack_damage": 1,
		"attack_knockback": 0,
		"cause_flinch": "def(collide_with) execute(me, [
			add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y),
			if('hurt' in available_animations,set(me.animation, 'hurt'))
			])",
		"damage_cooldown": 0,
		"difficulty_casual": 0,
		"difficulty_intense": 1,
		"difficulty_unfair": 2,
		"display_hurt_visuals": "def() execute(me, 
					[
					hurt_flash_sequence()
					])",
		"display_posthit_invincibility_flash_sequence": "def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )",
		"facing_player": "facing = if(level.player.midpoint_x < midpoint_x, -1, 1)",
		"flash_bright": "def() [set(me.brightness, 1023)]",
		"flash_off": "def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]",
		"flash_red": "def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]",
		"flinch_threshold": 3,
		"get_hit_by": "def(collide_with) execute(me, [
						if((not is_invincible) and (collide_with.attack_damage > 0) and (collide_with.attack_damage >= armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])",
		"handle_damage": "def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))",
		"handle_damage_type": "def(collide_with) null #virtual#",
		"handle_flinch": "def(collide_with) 
			execute(me, if(collide_with.attack_damage >= flinch_threshold, cause_flinch(collide_with)))",
		"handle_knockback": "def(collide_with) execute(me,add(velocity_x, collide_with.facing * collide_with.attack_knockback))",
		"hurt_flash_sequence": "def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]",
		"hurt_velocity_x": -200,
		"hurt_velocity_y": -400,
		"is_invincible": "if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)",
		"is_invincible_posthit": "if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)",
		"standard_thrown_damage": 400,
		"target_height": "def(target) vars.desired_height",
		"team": "'evil'"
	},
	"solid_area": [5,10,20,25],
	"solid_dimensions": ["enemy","common"],
	"tags": "swallowable",
	"timer_frequency": 50,
	"tmp": null,
	"traction": 1000,
	"traction_in_air": 1000,
	"variations": null,
	"vars": {
		"bomb": null,
		"last_turned": 0,
		"launch_at": 0,
		"points_value": 23,
		"turns_at_cliffs": 1
	}
}