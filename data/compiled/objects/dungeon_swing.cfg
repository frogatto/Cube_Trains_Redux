[object_type]
id="dungeon_swing"
on_create="[
		set(activation_area, activation_rectangle), #Use activation_border?#
		set(controller.activation_area, activation_rectangle),
		#debug([midpoint_x, midpoint_y], activation_rectangle),
		#if(not attached in level.chars, add_object(attached)),
		set(controller.x_schedule, transform(targets, v[0]-attached.img_w/2)),
		set(controller.y_schedule, transform(targets, v[1]-attached.img_h/2)),
		set(controller.schedule_speed, 2),
		[	set(vars.chain, chain),
			set(chain.animation, 'chain'),
			set(chain.z, self.z-1),
			add_object(chain),
		]	where chain = object('rope_angled_controller', self.x, self.y, 0),
		set(vars.attached_obj, attached),
		add_object(controller),
		set(vars.ctrl_obj, controller),
		set(attached.schedule_speed, 2),
		#if(weight_rotates, set(attached.rotation_schedule, 
			transform(targets, angle(v[0], v[1], self.midpoint_x, self.midpoint_y)+90)
			)),# #becomes offset from the motion schedule, don't know why# 
		] where targets = transform(list_single_multiply(range(360/speed), speed),
			orbit(	midpoint_x,
					midpoint_y,
					sin(decimal(v))*angle+90,
					orbit_length))
		where arc_size = list_subtract(
			orbit(	midpoint_x,
					midpoint_y,
					angle,
					orbit_length),
			orbit(	midpoint_x,
					midpoint_y,
					90,
					orbit_length))
		where speed = 1000/orbit_length		#← TWEAK SPEED HERE#
		where activation_rectangle = [	-1*(orbit_length+attached.img_w) + x - 500, 
										-1*(orbit_length+attached.img_h) + y - 500, 
										(orbit_length+attached.img_w) + x + 500, 
										(orbit_length+attached.img_h) + y + 1500] #fudge. it's tasty#
		where orbit_length = length(vars.length, vars.arc, self.midpoint_y, self.midpoint_x)
		where angle = 90-angle_to(self, {'midpoint_y' -> length, 'midpoint_x' -> arc})
		where attached = if(_object, 
			_object, 
			object('dungeon_retracting_bridge.segment')
			) where _object = if(by_string != '', 
				object(switch(vars.by_string, 
					'ball', '{self.type}.spiked_ball',
					'platform', 'dungeon_retracting_bridge.segment',
					vars.by_string)), 
				if(level.in_editor, object(
					if(labelled_obj, 
						labelled_obj.type, 
						'dungeon_retracting_bridge.segment')
					) where labelled_obj = get_object(level, vars.by_label), 
					get_object(level, vars.by_label)))
		where controller = object('target', x, y+200, 0)"
on_process="[
		vars.chain.set_ends(self.midpoint_x+5, #Off-center otherwise for some reason.#
							self.midpoint_y, 
							vars.ctrl_obj.x+attached_obj.img_w/2, 
							vars.ctrl_obj.y+attached_obj.img_h/2),
		set(vars.attached_obj.x, vars.ctrl_obj.x), set(vars.attached_obj.y, vars.ctrl_obj.y), 
		if(weight_rotates, set(attached_obj.rotate, angle_to(attached_obj, self)+90)),
		]"
	[editor_info]
	category="machines"
	help="A chain with an object attached to the end of it.
		Be careful when typing text to by_string, if you type in an object id
		that doesn't exst the game will crash. Tip: Save now.
		You can give some special shortcut values for commmon objects.
		    > 'ball' - Makes a big purple spikeball. (don't type the ' btw)
		    > 'platform' - Makes the default platform you can ride on.
		  by_string: An object id (or above shortcut) to swing around.
		  by_label: Subordinate to by_string, swing the object with this label.
		  weight_rotates: Should we orient the thing being swung with the chain?"
		[var]
		name="by_string"
		type="text"
		value="''"
		[/var]

		[var]
		name="by_label"
		type="label"
		value="''"
		[/var]

		[var]
		name="length"
		type="y"
		value="self.y+200"
		[/var]

		[var]
		name="arc"
		type="x"
		value="self.x+100"
		[/var]

		[var]
		name="weight_rotates"
		type="boolean"
		value="0"
		[/var]

	[/editor_info]

	[vars]
	by_string="''"
	[/vars]

	[animation]
	collide="0,0,16,16"
	duration="10000000"
	frame_info="0,0,1,1,990,523,16,16"
	id="normal"
	image="compiled-0.png"
	rect="990,523,1006,539"
	[/animation]

	[object_type]
	id="spiked_ball"
		[properties]
		attack_damage="2"
		team="'evil'"
		[/properties]

		[animation]
		attack_area="all"
		collide="8,8,32,32"
		duration="10000000"
		id="normal"
		image="props/spikedball.png"
		rect="1,18,42,60"
		[/animation]

	[/object_type]

[/object_type]

