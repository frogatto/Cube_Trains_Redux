[prototype]
feet_width="4"
friction="1000"
functions="#looks for the player and turns to face it#	
	  def set_facing(obj,level) if(desired_facing != obj.facing, [animation('turn'),set(obj,'facing', desired_facing)], animation('walk')
	           ) where desired_facing = if(level.player.x < obj.x, -1, 1);
	1"
hitpoints="6"
id="kitty_spear"
mass="5"
on_bounced_on="[if(jumped_on_by.mass >= 1000, die(), animation('spring'))]"
on_collide="if(animation in ['readyspearthrust', 'spearthrust'], [set(velocity_x, 0)], if(collide_with != level.player, [set(velocity_x,-velocity_x/2),set(facing, -facing),animation('turn')]))"
on_collide_object_body="if(collide_with.vars.team != vars.team and collide_with_area = 'attack', get_hit_by(collide_with))"
on_create="animation('stand')"
on_die="[score(level,points_value), spawn_item(self), spawn('die_cloud', midpoint_x, midpoint_y, facing)]"
on_end_alert_anim="if(facing != desired_facing,
	                    [animation('turn'), set(facing, desired_facing)],
						animation('dash'))"
on_end_dash_anim="if(abs(level.player.midpoint_x - self.midpoint_x) < 120 or facing != desired_facing, [animation('readyspearthrust'),set(vars.attack_counter,3)], animation('dash'))"
on_end_hurt_anim="if(is_standing,[set(vars.posthurt_counter, 3),animation('posthurt')],animation('hurt'))"
on_end_posthurt_anim="if(vars.posthurt_counter > 0,[set(vars.posthurt_counter, vars.posthurt_counter - 1),animation('posthurt')],animation('stand'))"
on_end_readyspearthrust_anim="if(vars.attack_counter > 0,[set(vars.attack_counter, vars.attack_counter - 1),animation('readyspearthrust')],[animation('spearthrust'),set(velocity_x, 400*facing)])"
on_end_spearthrust_anim="if(facing != desired_facing,
	                          [animation('turn'), set(facing, desired_facing)],
	                           animation('stand'))"
on_end_spring_anim="animation('walk')"
on_end_stand_anim="choose_action()"
on_end_turn_anim="if(abs(level.player.midpoint_x - midpoint_x) < 90 and
	                     level.player.y > y2 and level.player.y2 < y,
	                     animation('readyspearthrust'), animation('walk'))"
on_end_walk_anim="choose_action()"
on_enter_anim="set(tmp, 'already_hit', [])"
on_enter_water="die()"
on_hurtflicker="if(green = 100,[set(green, 255), set(blue, 255)],[set(green, 100), set(blue, 100)])"
on_leave_hurt_anim="[set(green, 255), set(blue, 255)]"
on_process="set(rotate, slope_standing_on)"
on_process_dash="if(abs(level.player.midpoint_x - self.midpoint_x) < 70, [animation('readyspearthrust'), set(vars.attack_counter, 3)])"
on_surface_damage="die()"
on_timer="if(turns_at_cliffs and is_standing and animation = 'walk' and distance_to_cliff < 30,[set(facing, -facing),animation('turn')],null())"
solid_area="6,10,26,33"
solid_dimensions="enemy,common"
timer_frequency="5"
traction="1000"
	[properties]
	get_hit_by="def(collide_with) execute(me,
	             if(not (me in collide_with.tmp.already_hit), [
				set(collide_with.tmp, 'already_hit', collide_with.tmp.already_hit + [me]),
				if(collide_with.vars.damage > consts.armor,
				  [
				   if(me.hitpoints > collide_with.vars.damage,
				    [
				      if(collide_with.vars.damage <= consts.flinch_threshold,
						schedule(4, [set(me.green, 255), set(me.blue, 255)]),
					    set(me.animation, 'hurt')),
				      set(me.green, 100), set(me.blue, 100)
					]),
				   set(me.hitpoints, me.hitpoints - collide_with.vars.damage)
				  ]),
				if(collide_with.vars.damage > consts.flinch_threshold and me.hurt_velocity_y and (not collide_with.tmp.no_flinch_attack), set(me.velocity_y,(me.hurt_velocity_y))),
				if(collide_with.vars.damage > consts.flinch_threshold and me.hurt_velocity_x and (not collide_with.tmp.no_flinch_attack), set(me.velocity_x, ((me.hurt_velocity_x * collide_with.facing + collide_with.velocity_x/2)*collide_with.mass*if(collide_with.attack_force, collide_with.attack_force, 100))/(me.mass*100)))]))"
	hurt_velocity_x="400"
	hurt_velocity_y="-800"
	[/properties]

	[vars]
	attack_counter="0"
	damage="1"
	points_value="10"
	posthurt_counter="0"
	team="'evil'"
	turns_at_cliffs="1"
	turns_towards_player="0"
	[/vars]

	[consts]
	flinch_threshold="1"
	normal_damage="1"
	springiness="160"
	thrown_damage="10"
	[/consts]

	[properties]
	choose_action="def() animation('walk')"
	desired_facing="if(level.player.midpoint_x < self.midpoint_x, -1, 1)"
	[/properties]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="8"
	frame_info="7,5,0,3,285,719,34,28,7,6,0,3,319,719,34,27,7,7,0,3,353,719,34,26,7,5,0,3,387,719,34,28,7,6,0,3,421,719,34,27,7,7,0,3,455,719,34,26,7,6,0,3,489,719,34,27"
	frames="7"
	id="stand"
	image="compiled-1.png"
	rect="278,714,318,749"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="12"
	frame_info="8,6,10,3,729,775,23,27"
	frames="1"
	id="turn"
	image="compiled-1.png"
	rect="721,769,761,804"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="300"
	accel_y="80"
	body_area="all"
	duration="6"
	frame_info="7,5,0,3,853,719,34,28,7,6,0,3,887,719,34,27,7,5,1,3,921,719,33,28,7,6,0,3,954,719,34,27"
	frames="4"
	id="walk"
	image="compiled-1.png"
	rect="846,714,886,749"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="1000"
	accel_y="80"
	body_area="all"
	duration="6"
	frame_info="5,6,1,3,505,775,35,27,5,8,1,3,540,775,35,25,5,6,1,3,575,775,35,27,5,8,1,3,610,775,35,25"
	frames="4"
	id="dash"
	image="compiled-1.png"
	rect="500,769,540,804"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="2"
	frame_info="4,8,7,3,405,883,35,25,4,8,7,3,440,883,35,25"
	frames="2"
	id="readyspearthrust"
	image="compiled-1.png"
	rect="401,875,446,910"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	attack_area="30,23,38,32"
	body_area="all"
	duration="6"
	frame_info="1,6,1,3,0,747,44,27,3,6,1,3,44,747,42,27,5,6,1,3,86,747,40,27,5,5,3,3,126,747,38,28,5,5,5,3,164,747,36,28"
	frames="5"
	id="spearthrust"
	image="compiled-1.png"
	rect="-1,741,44,776"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="4"
	frame_info="7,12,0,3,0,567,34,21,6,16,0,3,34,567,35,17,7,6,0,3,69,567,34,27,8,4,1,3,103,567,32,29,9,1,2,3,135,567,30,32"
	frames="5"
	id="spring"
	image="compiled-1.png"
	rect="-7,555,33,590"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="12"
	events="4:8:12:hurtflicker"
	frame_info="5,3,1,5,939,690,35,28"
	frames="1"
	id="hurt"
	image="compiled-1.png"
	rect="934,687,974,722"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="4"
	frame_info="5,8,1,3,643,883,35,25,5,8,1,3,678,883,35,25"
	frames="2"
	id="posthurt"
	image="compiled-1.png"
	rect="638,875,678,910"
	rotate_on_slope="yes"
	[/animation]

	[animation]
	accel_x="0"
	accel_y="80"
	body_area="all"
	duration="6"
	frame_info="7,9,0,0,705,428,34,27,6,5,0,3,739,428,35,28,6,2,0,1,774,428,35,33,7,1,0,0,809,428,34,35,7,1,0,0,843,428,34,35,7,1,0,0,877,428,34,35"
	frames="6"
	id="alert"
	image="compiled-1.png"
	rect="698,419,738,454"
	rotate_on_slope="yes"
	[/animation]

	[properties]
	choose_action="def() if(level.player.midpoint_y > self.y and level.player.midpoint_y < self.y2 and abs(level.player.midpoint_x - self.midpoint_x) < if(facing = desired_facing, 400, 200), animation('alert'), animation('walk'))"
	[/properties]

[/prototype]

