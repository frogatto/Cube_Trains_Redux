[prototype]
activation_border="1000"
friction="1000"
has_feet="no"
hitpoints="5"
id="red_mosquito_shooter"
mass="5"
on_add_object_fail="[if(collide_with.team != team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]"
on_bounced_on="fire_event('lose_wings')"
on_change_animation_failure="fire_event('solidity_fail')"
on_change_solid_dimensions_fail="fire_event('solidity_fail')"
on_collide_feet="set(velocity_y, -velocity_y/2)"
on_collide_head="set(velocity_y, -velocity_y/2)"
on_collide_object_body="if(collide_with.team != team and collide_with.team != 'evil_harmless' and (not (collide_with.team = 'evil' and team = 'evil_harmless')), if(collide_with_area = 'attack', get_hit_by(collide_with)))"
on_collide_side="[if(not (animation in ['hurt']), fire_event('turn')),set(velocity_x, -velocity_x/2)]"
on_create="set(vars.behavior,'regular')"
on_die="[score(level,points_value), spawn_item(self), death_burst_tracked(self)]"
on_end_anim="animation('fly')"
on_end_hurt_anim="animation('fly')"
on_enter_water="die()"
on_leave_turn_anim="set(facing, -facing)"
on_lose_wings="#don't lose wings#"
on_process_fly="switch(vars.behavior,
							'dive', process_dive(),
							'climb', process_climb(),
							'regular', [[if(solid(level, front + facing*100, y, 1, y2 - y),
	            fire_event('turn')),fire_event('test_bounds'),
	            set(velocity_y, wave( min(250,max(-250, destination_height-midpoint_y ) ) ))
	            
	            ] where destination_height = vars.desired_height + (wave(cycle*5+1000)/50) , if(should_dive, begin_dive())])"
on_solidity_fail="if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me,0,-1,60),
			   resolve_solid(me,2,-1,250),
			   resolve_solid(me,-2,-1,250),
			   resolve_solid(me,0,-1,500),
			   set(tmp.in_solidity_fail, 0)
			  ])"
on_surface_damage="die()"
on_test_bounds="[if(not animation in ['turn'],if(facing < 0 and x < vars.x_bound or
	                facing > 0 and x2 > vars.x2_bound,
					fire_event('turn')))]"
on_turn="if(cycle-vars.last_turned > 30 and (not animation in ['turn']),[set(vars.last_turned,cycle),animation('turn')])"
solid_area="5,10,20,25"
solid_dimensions="enemy,common"
tags="swallowable"
traction="1000"
traction_in_air="1000"
	[consts]
	basic_animation="'fly'"
	basic_type="'red_mosquito'"
	bounce_roundness="10"
	flinch_threshold="3"
	normal_damage="1"
	solid_dimensions="['enemy', 'common']"
	spring_amount="1200"
	springiness="190"
	thrown_damage="5"
	thrown_type="'red_mosquito.thrown'"
	[/consts]

	[properties]
	attack_damage="0"
	attack_knockback="0"
	cause_flinch="def() execute(me, [add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y)])"
	damage_cooldown="0"
	display_hurt_visuals="def() execute(me, 
					[if('hurt' in available_animations,set(me.animation, 'hurt')),
					hurt_flash_sequence()
					])"
	display_posthit_invincibility_flash_sequence="def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )"
	flash_bright="def() [set(me.brightness, 1023)]"
	flash_off="def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]"
	flash_red="def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]"
	get_hit_by="def(collide_with) execute(me, [
						if((not is_invincible) and (collide_with.attack_damage > 0) and (collide_with.attack_damage > consts.armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])"
	handle_damage="def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))"
	handle_damage_type="def(collide_with) null() #virtual#"
	handle_flinch="def(collide_with) 
			execute(me, if(collide_with.attack_damage > consts.flinch_threshold, cause_flinch()))"
	handle_knockback="def(collide_with) execute(me,add(velocity_x, collide_with.facing * collide_with.attack_knockback))"
	hurt_flash_sequence="def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]"
	hurt_velocity_x="-200"
	hurt_velocity_y="-400"
	is_invincible="if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)"
	is_invincible_posthit="if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)"
	[/properties]

	[editor_info]
	category="bugs"
		[var]
		name="x_bound"
		type="x"
		value="x - 200"
		[/var]

		[var]
		name="x2_bound"
		type="x"
		value="x2 + 200"
		[/var]

		[var]
		name="desired_height"
		type="y"
		value="midpoint_y"
		[/var]

	[/editor_info]

	[vars]
	damage="1"
	last_turned="0"
	points_value="14"
	team="'evil'"
	turns_at_cliffs="1"
	[/vars]

	[properties]
	attack_damage="1"
	team="'evil'"
	[/properties]

	[animation]
	accel_x="13"
	accel_y="0"
	attack_area="15,18,26,26"
	body_area="all"
	duration="6"
	frame_info="4,4,3,4,341,317,24,23,3,4,3,4,365,317,25,23"
	frames="2"
	id="fly"
	image="compiled-2.png"
	rect="337,313,367,343"
	[/animation]

	[animation]
	accel_y="0"
	body_area="all"
	duration="3"
	frame_info="4,4,3,4,467,293,24,23,4,7,3,3,491,293,24,21,4,9,3,4,515,293,24,18,4,4,3,4,539,293,24,23,4,3,3,4,563,293,24,24"
	frames="5"
	id="spring"
	image="compiled-2.png"
	rect="463,289,493,319"
	[/animation]

	[animation]
	accel_y="0"
	attack_area="0,18,26,26"
	body_area="all"
	duration="10"
	frame_info="6,4,6,4,390,317,19,23"
	frames="1"
	id="turn"
	image="compiled-2.png"
	rect="384,313,414,343"
	[/animation]

	[animation]
	accel_y="0"
	body_area="all"
	duration="18"
	frame_info="4,4,3,4,409,317,24,23"
	frames="1"
	id="hurt"
	image="compiled-2.png"
	rect="405,313,435,343"
	[/animation]

	[properties]
	begin_climb="def() [	set(vars.behavior, 'climb')]"
	begin_dive="def() [		set(vars.behavior, 'dive'),
								set(vars.target_x, level.player.midpoint_x),
								set(vars.target_y, level.player.y)]"
	consider_shot="def() if(player_in_front, shoot() )"
	player_in_front="(((level.player.midpoint_x - midpoint_x) * facing) > 0)"
	process_climb="def() [	if(y <= vars.desired_height, set(vars.behavior,'regular'),
									if(-velocity_y < abs(velocity_x),
					    				set(velocity_y, velocity_y - 30)))]"
	process_dive="def() [if(abs(velocity_y) < abs(velocity_x), add(velocity_y, 30)),
							   if(y > level.player.y-20, [consider_shot(),begin_climb()] )]"
	shoot="def() [spawn('red_mosquito_shooter.shot', midpoint_x + 10*facing, midpoint_y, facing, [set(velocity_x, 1600*facing)])]"
	should_dive="if(animation = 'fly' and
						 level.player.y > y + 50 and level.player.y < y + 300 and
						 level.player.x > min(x + facing*300, x + facing*1000) and
						 level.player.x < max(x + facing*300, x + facing*1000), 1, 0)"
	[/properties]

	[object_type]
	id="shot"
	on_timer="die()"
	prototype="shot"
	timer_frequency="200"
	traction_in_air="1000"
		[animation]
		accel_x="-30"
		attack_area="all"
		duration="60"
		frames="1"
		id="normal"
		image="enemies/generic.png"
		rect="90,5,102,17"
		[/animation]

	[/object_type]

	[object_type]
	id="thrown"
	on_spat="[%PROTO%, set(vars.bomb, null()), set(attached_objects, [])]"
	prototype="throwable_small_enemy"
	solid_dimensions="enemy,common"
		[consts]
		basic_animation="'fly'"
		basic_type="'red_mosquito'"
		thrown_type="'red_mosquito.thrown'"
		[/consts]

		[animation]
		body_area="none"
		duration="60"
		frames="1"
		id="thrown"
		image="enemies/generic.png"
		rect="29,1,53,28"
		thrown_area="all"
		[/animation]

		[animation]
		body_area="all"
		duration="5"
		frames="2"
		id="on_back"
		image="enemies/generic.png"
		rect="29,1,53,28"
		[/animation]

	[/object_type]

[/prototype]

