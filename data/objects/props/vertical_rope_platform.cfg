[object_type]
id=vertical_rope_platform
platform_area=0,26,42,27

	[vars]
	pos=0
	[/vars]

	[editor_info]
	category=props
		[var]
		name=rope_length
		value=50
		[/var]
		[var]
		name=winch_length
		value=100
		[/var]
		[var]
		name=move_speed
		value=5
		[/var]
		[var]
		name=move_y1
		type=x
		value="y"
		[/var]
		[var]
		name=move_y2
		type=y
		value="y + img_h"
		[/var]
		[var]
		name=is_moving
		type=boolean
		value="1"
		[/var]
	[/editor_info]


	[properties]
	fixed_rope="get_object(level, vars.ropes[0])"
	moving_wheel="get_object(level, vars.wheels[0])"
	fixed_wheel="get_object(level, vars.wheels[1])"
	left_rope="get_object(level, vars.ropes[1])"
	right_rope="get_object(level, vars.ropes[2])"

	#we need to fire two process events to fully refresh everything to a completely new position
	refresh="def() [fire_event(me, 'process'), fire_event(me, 'process')]"
	[/properties]

	on_draw="
	def rotate_wheel(wheel, rotate) set(wheel.rotate, rotate%360);
	def move_rope(rope, pos, len) rope.set_pos_len(pos, len);

    if(tmp.redraw,
	 [
	 if(HIGH_END_SYSTEM,
	map(vars.wheels, 'wheel', rotate_wheel(get_object(level, wheel), ypos*2))),
	   if(vars.ropes and vars.ropes[2], [
	   move_rope(get_object(level, vars.ropes[1]), ypos/4, wheel_distance),
	   move_rope(get_object(level, vars.ropes[2]), -ypos/4, wheel_distance)]),
	 fixed_rope.set_y(y - rope_length),
	 set(moving_wheel.midpoint_y, y - rope_length),
	 set(tmp.redraw, 0)
	 ]
	  where wheel_distance = 6 + (y - rope_length) - fixed_wheel.midpoint_y
	 )
	"

	on_process="
    if(vars.is_moving,
	 [
	 set(vars.pos, vars.pos+1),
	 set(vars.ypos, (wave(vars.pos*move_speed)*((vars.move_y2 - vars.move_y1) - img_h))/2000),
	 set(y, vars.ybase + ypos),
	 set(tmp.redraw, 1)
	 ])"
	
	on_create="[set(activation_area, [x, (vars.move_y1 - vars.rope_length) - vars.winch_length, 42*2, abs(vars.move_y2 - vars.move_y1) + vars.rope_length + vars.winch_length + 34*2]),
	            set(vars.starting_pos, vars.pos),
	            set(vars.ybase, ((vars.move_y2 - img_h) + vars.move_y1)/2),
	            spawn('vertical_rope', midpoint_x - 6, y - rope_length, 1, [set_var('length', vars.rope_length)]),
	            spawn('vertical_rope', midpoint_x - 13, (y - rope_length) - winch_length, 1, [set_var('length', vars.winch_length)]),
	            spawn('vertical_rope', midpoint_x + 1, (y - rope_length) - winch_length, 1, [set_var('length', vars.winch_length)]),
	            spawn('wheel_rope', midpoint_x - 7, y - rope_length, 1, [set(z, z+1)]),
	            spawn('wheel_rope', midpoint_x - 7, (y - rope_length) - winch_length, 1, [set(z, z+1)]),

	    #if we're not moving, make on_process get called once with
		 moving set to on, just to seed our position#
		if((not vars.is_moving), [set(vars.is_moving, 1), me.refresh(), set(vars.is_moving, 0)])
	]"

	on_child_spawned="switch(child.type,
	  'vertical_rope', set(vars.ropes, vars.ropes + [child.label]),
	  'wheel_rope', set(vars.wheels, vars.wheels + [child.label]))"

	[animation]
	image=props/rope.png
	id=normal
	x=18
	y=0
	w=42
	h=34
	[/animation]
[/object_type]
