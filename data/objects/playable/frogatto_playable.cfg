
	[object_type]
	id=frogatto_playable
	hitpoints=5
	feet_width=1
	mass=5
	springiness=100
	friction=1000
	solid_area=9,8,23,30
	solid_dimensions=player
	vehicle=false
	body_harmful=no

		[vars]
		damage=1
		jump_power=1100
		jump_boost=100
		jump_glide=20
		swim_accel=40
		unlocked_items="['heart_object','heart_object','fire_powerup']"
		[/vars]

	functions="
	  #function which returns true iff the object is in an animation that
	   requires frogatto be on the ground#	
	  def animation_requires_standing(obj)
	    obj.animation in ['stand', 'stand_up_slope', 'stand_down_slope', 'run', 'walk', 'lookup', 'crouch', 'enter_crouch', 'leave_crouch', 'turn', 'roll','skid'];
	  def set_facing(obj, facing) if(obj.facing != facing and (not (obj.animation in ['interact', 'slide'])),
	           [facing(facing), if(obj.is_standing, animation('turn'))]);

	  def stand(obj)
	   if(abs(obj.velocity_x) > 240 and (not obj.animation in ['walk']), animation('skid'),
	     if(abs(obj.slope_standing_on) < 20, animation('stand'),
		   if(obj.slope_standing_on*obj.facing > 0, animation('stand_down_slope'),
			                                animation('stand_up_slope'))));


	  #make Frogatto walk. anim can be either 'walk' or 'run'. Does checking
	   to make sure Frogatto is in a state where he can walk or run.
	   Will make Frogatto 'glide' if in mid air.#
	  def walk(obj, dir, anim)
	    if(obj.is_standing and (not (obj.animation in ['walk', 'run', 'jump', 'turn', 'run', 'crouch', 'enter_crouch', 'roll', 'run_attack', 'attack', 'up_attack', 'interact'])), [animation(anim), if(anim = 'run', [blur(10, 1, 20),sound('run.ogg')])],
	       #Frogatto is in the air, so make him glide.#
		   if(((not obj.is_standing) and obj.animation != 'slide'), set(obj.velocity_x, obj.velocity_x + obj.jump_glide*dir)));

	  #Function to attempt to make Frogatto crouch; does checking to make
	   sure he's in a state that allows entering a crouch.#
	  def crouch(obj)
	  	if(((not obj.animation in ['crouch', 'enter_crouch', 'roll', 'interact'] ) and obj.is_standing), animation('enter_crouch'));
	  def roll(obj)
	    if( obj.animation in ['crouch'] and obj.is_standing, animation('roll'));
	  
	  #Function to make Frogatto attack. Does checking and chooses the
	   appropriate type of attack animation, if any.#
	  def attack(obj)
	    if(obj.animation in ['stand', 'stand_up_slope', 'stand_down_slope', 'walk', 'lookup','skid'], animation(if(obj.ctrl_up, 'up_attack', 'attack')),
		  if(obj.animation in ['run'], animation('run_attack'),
		   if(obj.animation in ['jump', 'fall'], animation(if(obj.ctrl_down, 'fall_spin_attack', 'jump_attack')))));

	  #Function to do a water-equivalent of standing.#
	  def float(obj)
		animation('swim_side_idle');
	    
	  #Function to enter swimming frames.#
	  def swim(obj,dirx,diry)
	    [if(obj.underwater and (not (obj.animation in ['swim_side','swim_down','swim_up'])), [if(dirx,animation('swim_side')),if(diry < 0,animation('swim_up')),if(diry > 0,animation('swim_down'))]), if(obj.underwater, set(velocity_x, obj.velocity_x + obj.swim_accel*dirx ))];
	   
		   
	  #Function to test if frogatto should have post-hit invinicibility.  This elegantly(?) results in frogatto being invincible for the first few seconds of a level.#
	  def is_invincible(obj)
	  	if((abs(obj.tmp.time_last_hit - obj.cycle) < 100) and (obj.cycle > 100), 1, 0);
		def can_slide(obj)
           solid(obj.level, if(obj.facing > 0, obj.solid_rect.x2+1, obj.solid_rect.x-1), (obj.solid_rect.y+obj.solid_rect.y2)/2) and obj.velocity_y < 300;
	  1"

	on_create="[animation('stand')]"
	on_enter_level="[animation('stand')]"
	
	#on_collide_with="set('hitpoints', hitpoints - 1)"
	on_die="[spawn('die_cloud', midpoint_x, midpoint_y, facing)]"
	on_ctrl_left="[set_facing(self, -1), roll(self), if(tmp.left > cycle - 25, walk(self, -1, 'run')), set(tmp.left, cycle)]"
	on_ctrl_right="[set_facing(self, 1), roll(self), if(tmp.right > cycle - 25, walk(self, 1, 'run')), set(tmp.right, cycle)]"
	on_ctrl_jump="[if(is_standing and (not (animation in ['interact'])), [animation('jump'), if(ctrl_down and is_standing_on_platform, [debug('jump_down'), set(fall_through_platforms, 10), set(velocity_y, velocity_y + jump_power/10), debug('fall')], set(velocity_y, velocity_y - jump_power))]),
	            if(animation = 'slide', [facing(-facing), animation('jump'), set('velocity_x', -facing*800), set('velocity_y', -1000)])]"
	on_ctrl_attack="[attack(self)]"
	on_ctrl_up="[if(abs(velocity_x) < 100, map(filter(level.active_chars, 'char', collides(context.me, 'body', char, 'interact')), 'obj', [fire_event(obj, 'interact'), animation('interact')]))]"

	on_end_interact="if(animation = 'interact', animation('stand'))"


	on_process="[
	    if((not is_standing) and animation_requires_standing(self), [animation('fall')]),
	    if(ctrl_up and (animation in ['stand','stand_up_slope','stand_down_slope']), animation('enter_lookup')),
	    if((animation in ['enter_lookup', 'lookup']) and (not ctrl_up), stand(self)),
		if(underwater,
			[if(ctrl_left,swim(self, -1, 0)),
			if(ctrl_right,swim(self, 1, 0)),
			if(ctrl_up,swim(self, 0, -1)),
			if(ctrl_down,swim(self, 0, 1)),
			if((not (ctrl_left or ctrl_right or ctrl_up or ctrl_down)) and (animation in ['swim_side','swim_up','swim_down']),
		   float(self)) ],
			[if(ctrl_left, walk(self, -1, 'walk')),
			if(ctrl_right, walk(self, 1, 'walk')),
			if(ctrl_down, crouch(self)),
			if((not (ctrl_left or ctrl_right)) and (animation in ['walk', 'run']),
		   stand(self))		]),
		if(is_invincible(self), set(alpha,(wave(cycle*300)+1000)/10 + 100 ), set(alpha,255))
				]"
					
	on_process_jump="if(ctrl_jump, [set(velocity_y, velocity_y - jump_boost)])"
	on_process_fall="if(is_standing, animation('stand'))"

	#check if we end up on a slope in which case we re-calculate our standing.
	on_process_stand="if(abs(slope_standing_on) > 20, stand(self))"
	on_process_stand_up_slope="if(slope_standing_on*facing > -20, stand(self))"
	on_process_stand_down_slope="if(slope_standing_on*facing < 20, stand(self))"

	on_process_slide="if(not can_slide(self), animation('fall'))"
	on_leave_slide_anim="[if(ctrl_left, facing(-1)), if(ctrl_right, facing(1))]"

	on_enter_water="float(self)"
	on_exit_water="stand(self)"

	on_end_enter_crouch_anim="animation('crouch')"
	on_end_crouch_anim="if(ctrl_down, animation('crouch'), animation('leave_crouch'))"
	on_change_animation_failure="[debug('fail ', previous_animation, ' ', animation), animation(previous_animation)]"
	on_end_leave_crouch_anim="stand(self)"
	
	on_end_roll_anim="stand(self)"
	on_end_turn_anim="stand(self)"
	on_end_jump_anim="animation('fall')"
	on_end_walk_anim="animation('walk')"
	on_end_run_anim="animation('run')"
	on_end_stand_anim="stand(self)"
	on_end_skid_anim="stand(self)"
	on_end_stand_up_slope_anim="stand(self)"
	on_end_stand_down_slope_anim="stand(self)"
	on_end_attack_anim="stand(self)"
	on_end_enter_lookup_anim="animation('lookup')"
	on_end_lookup_anim="animation('lookup')"
	on_end_run_attack_anim="stand(self)"
	on_end_up_attack_anim="stand(self)"
	on_end_jump_attack_anim="animation('fall')"
	on_end_fall_spin_attack_anim="animation('fall')"
	on_end_swim_side_idle_anim="float(self)"
	on_end_swim_side_anim="if(underwater,animation('swim_side_anim'),stand(self))"
	on_end_swim_up_anim="if(underwater,animation('swim_up_anim'),stand(self))"
	on_end_swim_down_anim="if(underwater,animation('swim_down_anim'),stand(self))"

	on_collide_feet="if(standing_on and standing_on.springiness > 0, set(velocity_y, -(velocity_y*standing_on.springiness)/100), stand(self))"
	on_collide_head="[if(animation = 'jump', animation('fall')), if(velocity_y < 0, set(velocity_y, 0)), debug('head')]"
	on_collide="[set(velocity_x, 0), if((animation in ['jump', 'fall']) and can_slide(self) and abs(velocity_x) > 200, [animation('slide'), set(velocity_y, 0)])]"

	##Damage handlers:
			# If we get hit, it's important that we're only hit once by an attack.  Each attacker keeps a list of what they've already hit to make sure that doesn't happen.  This checks/populates that list as appropriate.  The attacker is responsible for clearing the list as appropriate.
			# we also have a primitive window of 3 seconds of post-hit invincibility here for all sources of damage
	on_collide_object_body=" if( collide_with_area = 'attack' and (not is_invincible(self)),
		if(not (me in collide_with.tmp.already_hit), [set(collide_with.tmp.already_hit, collide_with.tmp.already_hit + [me]),
	
			set(hitpoints, hitpoints - collide_with.vars.damage), animation('hurt'), set(green, 100), set(blue, 100), set(velocity_y,-1000), set(velocity_x,400 * collide_with.facing), set(tmp.time_last_hit, cycle),debug('frog hp: ' + (hitpoints-collide_with.vars.damage))]))"

	on_collide_damage="if((not is_invincible(self)), [set(hitpoints, hitpoints - collide_with.vars.damage), animation('hurt'), set(green, 100), set(blue, 100), set(tmp.time_last_hit, cycle)])"


	on_enter_anim="set(tmp.already_hit, [])"

	
	on_hurtflicker="if(green = 100,[set(green, 255), set(blue, 255)], [set(green, 100), set(blue, 100)])"
	on_leave_hurt_anim="[set(green, 255), set(blue, 255)]"
	on_end_hurt_anim="animation('stand')"

	#when we leave the running animation, remove any blur
	on_leave_run_anim="blur(0, 1, 0)"

	[vars]
		unlocked_items="['heart_object','heart_object','fire_powerup']"
	[/vars]

	[portrait]
	image=gui/inventory.png
	rect=85,239,162,312
	[/portrait]
	[name]
	image=gui/inventory.png
	rect=9,252,75,270
	[/name]

		[base:animation]
		image=characters/frogatto-spritesheet1.png
		accel_x=0
		accel_y=80
		pad=3
		body_area=all
		[/animation]
		
		
		[animation]
		id=stand
		rect=2,2,33,34
		frames=3
		duration=6
		reverse=yes
		[/animation]

		[animation]
		id=stand_up_slope
		x=212
		y=2
		w=32
		h=35
		frames=3
		duration=6
		reverse=yes
		[/animation]

		[animation]
		id=stand_down_slope
		x=317
		y=2
		w=32
		h=35
		frames=3
		duration=6
		reverse=yes
		[/animation]

		[animation]
		id=lookup
		rect=37,233,68,265
		frames=1
		duration=3
		reverse=yes
		[/animation]

		[animation]
		id=enter_lookup
		rect=2,233,33,265
		frames=1
		duration=3
		reverse=yes
		[/animation]
		
		[animation]
		id=crouch
		solid_area=8,17,24,30
		rect=107,197,138,229
		frames=1
		duration=1
		rotate_on_slope=yes
		[/animation]

		[animation]
		id=enter_crouch
		solid_area=8,17,24,30
		rect=2,197,33,229
		frames=3
		duration=3
		rotate_on_slope=yes
		[/animation]

		[animation]
		id=leave_crouch
		rect=2,197,33,229
		frames=3
		duration=3
		play_backwards=yes
		rotate_on_slope=yes
		[/animation]


		[animation]
		id=roll
		solid_area=8,17,24,30
		sound=roll.ogg
		accel_x=500
		velocity_x=500
		x=107
		y=197
		w=32
		h=33
		frames=11
		duration=3
		scale=2		
		[/animation]

		
		[animation]
		id=walk
		solid_area=17,18,31,40
		rect=2,110,49,157
		accel_x=600
		frames=8
		duration=5
		[/animation]

		[animation]
		id=run
		solid_area=17,18,31,40
		accel_x=1400
		x=410
		y=95
		w=48
		h=48
		frames=4
		frames_per_row=2
		duration=5
		blur=80
		[/animation]

		[animation]
		id=skid
		solid_area=17,18,31,40
		x=461
		y=40
		w=48
		h=48
		frames=1
		duration=1
		[/animation]

		[animation]
		id=turn
		x=387
		y=40
		w=32
		h=33
		frames=1
		duration=5
		[/animation]

		[animation]
		id=jump
		solid_area=9,13,23,35
		sound=FrogJump1.ogg,FrogJump2.ogg
		x=2
		y=38
		w=32
		h=48
		frames=2
		duration=6
		[/animation]
	
		[animation]
		id=fall
		solid_area=9,13,23,35
		x=72
		y=38
		w=32
		h=48
		duration=12
		frames=2
		[/animation]

		[animation]
		id=attack
		sound=punch.ogg
		events="3:side_attack_fx_one,6:side_attack_fx_two,9:side_attack_fx_three,8:side_attack_contact"
		
		x=2
		y=269
		w=49
		h=37
		solid_area=7,12,21,34
		attack_area=32,24,49,34
		body_area=6,11,24,36
		frames=8
		duration=3
		reverse=no
		[/animation]

		[animation]
		id=up_attack
		sound=punch.ogg
		events="6:up_attack_contact"
		x=2
		y=351
		w=41
		h=44
		
		solid_area=7,19,21,41
		attack_area=16,0,28,10
		frames=6
		duration=2
		reverse=no
		[/animation]

		[animation]
		id=run_attack
		events="6:7:8:9:10:11:run_attack_contact"
		sound=slash.ogg

		solid_area=18,6,32,28
		accel_x=1600
		x=2
		y=403
		w=68
		h=29
		attack_area=20,14,70,40
		frames=5
		duration=3
		reverse=no
		[/animation]

		[animation]
		id=jump_attack
		events="3:side_attack_fx_one,6:side_attack_fx_two,9:side_attack_fx_three,8:side_attack_contact"
		sound=kick.ogg
		accel_x=25
		x=2
		y=310
		w=49
		h=37
		attack_area=28,19,43,31
		body_area=6,11,24,36
		frames=9
		duration=2
		reverse=no
		[/animation]

		[animation]
		id=fall_spin_attack
		events="3:6:9:12:15:18:21:24:spin_attack_contact"
		sound=SpinAttack.ogg
		x=3
		y=436
		w=32
		h=42
		attack_area=8,30,24,42
		frames=8
		duration=3
		reverse=no
		[/animation]

		[animation]
		id=hurt
		sound=TakeDamage.wav
		velocity_x=-1000
		velocity_y=-1000
		rect=271,351,303,383
		frames=1
		duration=18
		events="6:12:18:hurtflicker"
		[/animation]

		[animation]
		id=interact
		image=characters/frogatto-spritesheet1.png
		collide_x=10
		collide_y=6
		collide_w=15
		collide_h=16
		feet_x=16
		feet_y=32
		accel_y=80
		x=72
		y=161
		w=32
		h=32
		frames=4
		duration=4
		scale=2
		pad=3
		[/animation]



		[animation]
		id=slide
		image=characters/frogatto-spritesheet1.png
		accel_y=10
		x=352
		y=40
		w=32
		h=34
		duration=30
		frames=1
		solid_area=14,17,28,30
		[/animation]


		[animation]
		id=push
		image=characters/frogatto-spritesheet2.png
		x=413
		y=49
		w=47
		h=48
		frames=6
		frames_per_row=2
		duration=5
		[/animation]





		[animation]
		id=swim_side_idle
		image=characters/frogatto-spritesheet2.png
		accel_y=5
		x=3
		y=85
		w=39
		h=36
		frames=6
		frames_per_row=3
		duration=6
		reverse=yes
		[/animation]

		[animation]
		id=swim_down_idle
		image=characters/frogatto-spritesheet2.png
		accel_y=0
		x=129
		y=85
		w=39
		h=36
		frames=6
		frames_per_row=3
		duration=6
		reverse=yes
		[/animation]

		[animation]
		id=swim_up_idle
		image=characters/frogatto-spritesheet2.png
		accel_y=0
		x=255
		y=85
		w=39
		h=36
		frames=6
		frames_per_row=3
		duration=6
		reverse=yes
		[/animation]

		[animation]
		id=swim_side
		image=characters/frogatto-spritesheet2.png
		sound=Paddle4.ogg,Paddle5.ogg,Paddle6.ogg,Paddle7.ogg
		accel_y=5
		accel_x=0
		x=3
		y=163
		w=39
		h=36
		frames=3
		duration=6
		[/animation]

		[animation]
		id=swim_down
		image=characters/frogatto-spritesheet2.png
		sound=Paddle4.ogg,Paddle5.ogg,Paddle6.ogg,Paddle7.ogg
		accel_y=100
		x=129
		y=163
		w=39
		h=36
		frames=3
		duration=6
		[/animation]

		[animation]
		id=swim_up
		image=characters/frogatto-spritesheet2.png
		sound=Paddle4.ogg,Paddle5.ogg,Paddle6.ogg,Paddle7.ogg
		accel_y=-100
		x=255
		y=163
		w=39
		h=36
		frames=3
		duration=6
		[/animation]


	[/object_type]
