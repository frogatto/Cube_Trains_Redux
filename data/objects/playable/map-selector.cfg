[object_type]
	id=map-selector
	zorder=20
	is_human=true
	always_active=true
	
	#	[editor_info]
	#	category=player
	#	[/editor_info]
	
	#We multiply by two for position because frogatto scales up the graphics by two. We then subtract by 16 to center the 16-pixel image.#
	[vars]
		team="'player'"
		#points are the locations in the main-map image of each location for frogatto to go.#
		points="[		[350,180],						[317,214],			[280,250],				[232,271],				[173,255],				[190,204]			]"
		locations="[	'frogatto-grotto-inside.cfg', 	'grassy-path.cfg',	'to-nenes-house.cfg',	'stonepipe-flats.cfg',	'crevice-village.cfg',	'airplane-boss.cfg'	]"
	[/vars]
	
	functions = "def maploc(index, points) if(index < 0, 0, if(index > points.size-1, 0, [set(x, points[index][0]*2-16), set(y, points[index][1]*2-16)]));1"
	
	#tmp.place is the index number for each location, in the points list.#
	on_create="[set(tmp.place, 0), maploc(0,points)]"
	
	on_ctrl_left  = "[set(tmp.place,tmp.place+1), maploc(tmp.place+1,points), debug(vars.spawna)]"
	on_ctrl_right = "[set(tmp.place,tmp.place-1), maploc(tmp.place-1,points)]"
	on_ctrl_attack= "[debug('teleported1'), teleport(locations[tmp.place]), debug('teleported2')]"
	on_process= "[if(tmp.place < 0, set(tmp.place, 0)), if(tmp.place > locations.size-1, set(tmp.place, locations.size-1))]"
	
	[animation]
		id=normal
		image=characters/stand_in_selector.png
		rect=0,0,15,15
	[/animation]
[/object_type]

#<Sirp>	DDR: so, when you enter the map level, save the player object in a variable.
#<Sirp>	like set(vars.player_backup, level.player)
#<Sirp>	then add the cursor object, which is playable. Since the cursor object is playable it will automatically remove the old player from the level.
#<Sirp>	then, when it's time to exit the map into a new level, before doing so, add the player back into the level. .... add_object(vars.player_backup)