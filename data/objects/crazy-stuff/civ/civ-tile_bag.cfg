[object_type]
	id=civ-tile_bag
	hitpoints=2
	zorder=-10
	
	[editor_info]
		category=crazy-stuff
	[/editor_info]
	
	[consts]
		num_farm 	= 8
		num_mine 	= 2
		num_war 	= 2
		num_settle 	= 2
	[/consts]
	
	[vars]
		on_deal_tile = 0
	[/vars]
	
	[properties]
		#Returns an object (list index 0), and the commands to remove that object from the list of objects we can return (list index 1).
		extract = "def() if(size(vars.pile) > 0, [vars.pile[index], [#debug('pile: ', map(vars.piles.white, 'pile', pile.type)),# set(vars.pile, vars.pile[0:index] + vars.pile[index+1:size(vars.pile)])]] where index = (1 d size(vars.pile)) - 1)"
		
	[/properties]
	
	on_create="[
		set(piles, [
			[]
				+ map(range(consts.num_farm), object('civ-tile_farm', bag_x, bag_y, facing))
				+ map(range(consts.num_mine), object('civ-tile_mine', bag_x, bag_y, facing))
				+ map(range(consts.num_war), object('civ-tile_war', bag_x, bag_y, facing))
				+ map(range(consts.num_settle), object('civ-tile_settle', bag_x, bag_y, facing))
				,
			[]
				+ map(range(consts.num_farm), object('civ-tile_farm', bag_x, bag_y, facing))
				+ map(range(consts.num_mine), object('civ-tile_mine', bag_x, bag_y, facing))
				+ map(range(consts.num_war), object('civ-tile_war', bag_x, bag_y, facing))
				+ map(range(consts.num_settle), object('civ-tile_settle', bag_x, bag_y, facing))
				,
			[]
				+ map(range(consts.num_farm), object('civ-tile_farm', bag_x, bag_y, facing))
				+ map(range(consts.num_mine), object('civ-tile_mine', bag_x, bag_y, facing))
				+ map(range(consts.num_war), object('civ-tile_war', bag_x, bag_y, facing))
				+ map(range(consts.num_settle), object('civ-tile_settle', bag_x, bag_y, facing))
				,
			[]
				+ map(range(consts.num_farm), object('civ-tile_farm', bag_x, bag_y, facing))
				+ map(range(consts.num_mine), object('civ-tile_mine', bag_x, bag_y, facing))
				+ map(range(consts.num_war), object('civ-tile_war', bag_x, bag_y, facing))
				+ map(range(consts.num_settle), object('civ-tile_settle', bag_x, bag_y, facing)) 
		] where bag_x = midpoint_x where bag_y = y),
		
		set(vars.pile, [] + map(range(consts.num_farm), object('civ-tile_blank', bag_x, bag_y, facing))
		) where bag_x = midpoint_x where bag_y = y,
		]"

	on_done_create="
		map(range(size(evts)), 'evt_num', 
			schedule(evt_num*4, evts[evt_num])
			)
		where evts = map(range(vars.spawner.consts.hand_size), fire_event('deal_p1'))
		"
	
	on_one="debug('1')"
	on_two="debug('2')"
	on_pile="debug('vp', vars.pile)"
	
	#deal player 1 a new tile for hand slot vars.on_deal_tile, enlarging the hand list if needed#
	on_deal_p1 = "[set(vars.on_deal_tile, vars.on_deal_tile + 1),
		#debug(to_pop[0].type),#
		add_object(to_pop[0]), 
		set(to_pop[0].vars.hand_pos, vars.on_deal_tile),
		to_pop[0].go_to([loc[0],loc[1]]) where loc = vars.spawner.dealt_hand_loc(0, vars.on_deal_tile),
		if(size(vars.spawner.vars.hand) <= on_deal_tile, 
			set(vars.spawner.vars.hand, vars.spawner.vars.hand + [to_pop[0]]), 
			set(vars.spawner.vars.hand, vars.spawner.vars.hand[0:vars.on_deal_tile] + [to_pop[0]] + vars.spawner.vars.hand[vars.on_deal_tile+1:size(vars.spawner.vars.hand)])),
		to_pop[1],
		] where to_pop = extract()"
	
	on_end_anim="animation('normal')"
	
	[animation]
		id=normal
		image=experimental/civ-stuff.png
		x=79
		y=35
		w=74
		h=105
		pad=0
		frames=1
		duration=6431
	[/animation]
	
	
[/object_type]