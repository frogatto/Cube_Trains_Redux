	[object_type]
	id=worm_jumping
	#hitpoints=25

	zorder=20

	[editor_info]
	category=bugs
		[var]
		name=x_bound
		type=x
		value="x - 200"
		[/var]
		[var]
		name=x2_bound
		type=x
		value="x + 200"
		[/var]
		[var]
		name=desired_height
		type=y
		value="midpoint_y"
		[/var]
	[/editor_info]

	[vars]
		team="'evil'"
		points_value="14"
		damage=1
		spots=[]
	[/vars]
	[tmp]
		oldrotate=[]
	[/tmp]
	[consts]
		basic_type="'worm_jumping'"
		thrown_type="'worm_jumping.thrown'"
		basic_animation="'fly'"
	[/consts]
	prototype=hittable
	object_level_collisions=yes

	[properties]
		attack_damage=2
		attack_cooldown=10
	
		x_target="min(vars.x_bound,vars.x2_bound) + 1d(abs(vars.x_bound-vars.x2_bound))"
		y_target="vars.desired_height - (vars.desired_height%8)"
		find_floor="def(u,v) find_floor_wrapped(u,v,0)"
		find_floor_wrapped="def(u,v,counter) if(solid(level,u-5,v,10,4), if(counter<50, find_floor_wrapped(u,v-4,counter+1), [u,v]), [u,v])"
		
		set_rotation="def() set(rotate, sign(velocity_x)*(90 + 90*decimal(min(max(velocity_y,-1000),1000))/1000))"
		delayed_rotate="if(tmp.oldrotate.size>=4, tmp.oldrotate[ tmp.oldrotate.size-4 ], rotate)"
		
		segment_count="4 #hitpoints/5#"
	[/properties]



		on_create="[add_particles('particles'),animation('invisible'),schedule(50+1d100, fire_event('begin_burrow_up'))]"
		
		on_remove_segment="[remove_object(vars.segments[vars.segments.size-1]), set(vars.segments, vars.segments[0: vars.segments.size-1])]"

		
		#for now, we just kill everything at once;  I poked at some delayed-action timing things, and they're a bit hairy - and we don't want them anyways because we're going to move to killing one segment at a time.
		on_die="[map(vars.segments, 'thing', set(thing.hitpoints,0)), set(vars.segments, []),
			[score(level,points_value), spawn_item(self), death_burst_tracked(self)]]"



		on_collide_level="if(animation in ['leap'] and abs(cycle - vars.leaptime) > 10, [set(velocity_y,0), set(velocity_x,0), fire_event('begin_burrow_down')])"

### underground_handlers:
		on_finish_burrowing_down="[animation('invisible'),set(particles.spawn_rate, 0),schedule(50+1d100, fire_event('begin_burrow_up'))]"

		on_end_invisible_anim="animation('invisible')"  


### burrow-down handlers:
		on_begin_burrow_down="[set(particles.spawn_rate, 1000), set(velocity_y,20), animation('burrow_down'), schedule(40, fire_event('finish_burrowing_down')),
			map(range(vars.segments.size), 'thing', schedule(thing*4, fire_event('remove_segment')))]"

		on_end_burrow_down_anim="animation('burrow_down')"


### burrow-up handlers:
		on_begin_burrow_up="[schedule(60,fire_event('begin_leap')), set(particles.spawn_rate, 1000),set(rotate,0),set(velocity_y,0), animation('burrow_up'), 
			[[set(midpoint_x, xval), set(midpoint_y, 0 + find_floor(xval, y_target)[1])] where xval = x_target]]"

		on_end_burrow_up_anim="animation('burrow_up')"


### leap handlers:
		on_begin_leap="[
			map(range(segment_count),'thing',schedule(thing*2,spawn('worm_jumping.segment',midpoint_x,midpoint_y,facing,set(rotate,rotate)))),
			set(vars.leaptime, cycle),
			set(velocity_y,-1000),
			set(velocity_x,1d500 - 250),
			set(particles.spawn_rate, 0),
			animation('leap')
			]"


		on_end_leap_anim="animation('leap')"

		on_process_leap="[set_rotation(),add(oldrotate, [rotate])]"

		on_child_spawned="[set(child.tmp.head, if(vars.segments.size = 0, me, vars.segments[vars.segments.size-1])),add(vars.segments, [child])]"

		[base:animation]
		image=enemies/worm-burrowing.png
		pad=0
		body_area=all
		accel_y=0
		rect=0,32,31,63
		feet_x=16
		feet_y=32
		[/animation]
		
		[animation]
		id=burrow_up
		rect=0,64,31,95
		frames=4
		duration=5
		[/animation]

		[animation]
		id=invisible
		rect=0,0,1,1
		frames=1
		duration=100
		[/animation]


		[animation]
		id=burrow_down
		frames=1
		duration=40
		rect=128,32,159,63
		[/animation]


		[animation]
		id=leap
		frames=4
		duration=5
		accel_y=20
		attack_area=all
		[/animation]

		[animation]
		id=spring
		frames=1
		duration=3
		[/animation]

		[animation]
		id=turn
		frames=1
		duration=10
		[/animation]

		[animation]
		id=hurt
		[/animation]


				[particle_system]
				id=particles
				zorder=9
				type=simple
				spawn_rate=0
				time_to_live=40
				min_x=18
				max_x=20
				min_y=38
				max_y=40
				accel_y=40
				velocity_magnitude=1000
				velocity_magnitude_random=500
				velocity_rotate=90
				velocity_rotate_random=180
					[animation]
					image=enemies/worm-burrowing.png
					id=normal
					duration=60
					rect=0,96,15,111
					frames=1
					[/animation]
					[animation]
					image=enemies/worm-burrowing.png
					id=normal
					duration=60
					rect=16,96,31,111
					frames=1
					[/animation]
					[animation]
					image=enemies/worm-burrowing.png
					id=normal
					duration=60
					rect=0,112,15,127
					frames=1
					[/animation]
					[animation]
					image=enemies/worm-burrowing.png
					id=normal
					duration=60
					rect=16,112,31,127
					frames=1
					[/animation]
				[/particle_system]



		[object_type]	
		id=segment
			[properties]
				segdist=20
				set_position_relative="def(rotation) [set(relative_x, cos(rotation+90*parent.facing) * segdist -img_w/2),
												set(relative_y, sin(rotation+90*parent.facing) * segdist -img_h/2),
												set(rotate,rotation)]"
		delayed_rotate="if(tmp.oldrotate.size>=4, tmp.oldrotate[ tmp.oldrotate.size-4 ], rotate)"								

				get_hit_by="def(collide_with) parent.get_hit_by(collide_with)"
			[/properties]
	[tmp]
		oldrotate=[]
	[/tmp]
		
		on_die="death_burst(self)"
		
		on_spawned="[set(parent,tmp.head),set(zorder,tmp.head.zorder -1)]"
		on_process="[set_position_relative(parent.delayed_rotate),add(tmp.oldrotate, [rotate])]"
		
		on_end_normal_anim="animation('normal')"
		
			[base:animation]
			image=enemies/worm-burrowing.png
			pad=0
			body_area=all
			accel_y=0
			rect=0,0,31,31
			[/animation]

			[animation]
			id=normal
			frames=4
			duration=5
			[/animation]

		[/object_type]
		
		[object_type]	
		id=thrown
		prototype=throwable_small_enemy
		solid_dimensions=enemy,common

		[consts]
			basic_type="'worm_jumping'"
			thrown_type="'worm_jumping.thrown'"
			basic_animation="'fly'"
		[/consts]

		on_spat="[%PROTO%, set(vars.bomb, null()), set(attached_objects, [])]"

			[base:animation]
			image=enemies/generic.png
			[/animation]

			[animation]
			id=thrown
			thrown_area=all
			duration=60
			rect=29,1,53,28
			frames=1
			body_area=none
			[/animation]
	
			[animation]
			id=on_back
			rect=29,1,53,28
			frames=2
			duration=5
			body_area=all
			[/animation]
		[/object_type]
	[/object_type]
