[object_type]
id="forest_shooting_plant_wallmounted"
prototype="stationary_vulnerable"
hitpoints="4"
zorder="30"
#on_end_normal_anim="if(tmp.anim_repeat > consts.normal_repeat,
#                      [animation('prepare'), set(tmp.anim_repeat, 0)],
#					  [animation('normal'), add(tmp.anim_repeat, 1)])"
#on_end_prepare_anim="animation('chargeup')"
#on_end_chargeup_anim="if(tmp.anim_repeat > consts.chargeup_repeat,
#                      [animation('shoot'), set(tmp.anim_repeat, 0)],
#					  [animation('chargeup'), add(tmp.anim_repeat, 1)])"
#on_end_shoot_anim="animation('normal')"
#on_shoot="spawn('pollen_ball_huge', midpoint_x, midpoint_y, facing)"
#solid_area="4,13,23,27"

on_create="[%PROTO%, fire_event('shoot')]"
on_timer="fire_event('shoot')"

[vars]
	child=null()
[/vars]

on_shoot="if(filter(level.chars, 'foo', foo.type = 'forest_shooting_plant_wallmounted.shot').size = 0,
				spawn('forest_shooting_plant_wallmounted.shot', x + 70*facing, midpoint_y, facing, [set(velocity_x,200*facing),set_var('x_init',x),set_var('y_init',y)]  ))"

timer_frequency=20

on_child_spawned="set(vars.child, [child])"

	[editor_info]
	category="plants"
	[/editor_info]

	[vars]
	points_value="7"
	[/vars]

	[properties]
	handle_knockback="def(collide_with) null()"
	[/properties]

	[consts]
	basic_type="'forest_shooting_plant_wallmounted'"
	normal_repeat="1"
	chargeup_repeat="1"
	frogourmet_tag="'super_shooting_plant'"
	[/consts]

	[tmp]
	anim_repeat="0"
	[/tmp]

	[base:animation]
	image="enemies/forest-shooting-plant.png"
	pad="3"
	accel_y="00"
	body_area="all"
	[/animation]

	[animation]
	id="normal"
	duration="6"
	frames="1"
	rect=32,32,63,63
	reverse="yes"
	[/animation]

		[object_type]	
		id=shot
		prototype=shot
		traction_in_air=1000
		dies_on_inactive=yes

			[base:animation]
			image=enemies/generic.png
			[/animation]
			
			[properties]
				shot_speed=10
				shot_max=450
				capped="def(value,cap) max(-cap,min(cap,value))"
	
				
				desired_x_vel="250 * cos(vars.angle)"
				desired_y_vel="250 * sin(vars.angle)"
				
				player_angle="angle_to(me,level.player)"
				shorter_rotation_direction="if( mod(vars.angle - player_angle, 360) > mod(player_angle - vars.angle, 360), 1,0)"


				correct_angle="if(shorter_rotation_direction, add(vars.angle,2), add(vars.angle,-2))"
				
				track_player="def() [correct_angle,
										#set(vars.angle, integer(vars.angle)%360),#
										set(velocity_x, desired_x_vel),
										set(velocity_y, desired_y_vel)
									]"

			[/properties]
			
			[vars]
			angle=90
			[/vars]

			on_process="[track_player(),if(length(x,y,vars.x_init,vars.y_init) > 500, die())]"

			timer_frequency=300
			on_timer="die()"
			
			[animation]
			id=normal
			duration=60
			rect=90,5,102,17
			frames=1
			attack_area=all
			[/animation]
		
		[/object_type]	



[/object_type]

