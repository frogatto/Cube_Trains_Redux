[object_type]
	id=ct-tree1-center
	prototype = ct-tree
	
	[vars]
		group=['plant', 'center']
	[/vars]
	
	[properties]
		additionalPlacementRequirementsMet="def(chars) 
			if('{self.type}.tip' in transform(potentially_at_coord(list_add(self.vars.location, [0,0,1]), chars), v.type),
				{'ok' -> 1}, {'error' -> 'The tree is too tall to fit here.'})"
		additionalBlocks="def(chars)
			[{'id' -> '{self.type}.tip', 'pos' -> [0,0,1]}]"
	[/properties]
	
	[animation]
		image=experimental/cube trains/plant-0001.png
		rect=255,0,511,255
	[/animation]
	
	[object_type]
		id=tip
		prototype = ct-tree
		
		[properties]
			setToGrid = "def(crd) [ #takes a three-integer list, and sets screen position based on those.#
				set(self.x, lpfc[0]),
				set(self.y, lpfc[1]+tall),
				set(self.z, lpfc[2]+crd[2]*5+self.vars.encloses), #5z for additional layers, to give some breathing room for the raises.#
				set(self.vars.location, crd),
				] where lpfc = level_position_from_coordinate(crd)"
		[/properties]
		
		[vars]
			group=['plant', 'center']
		[/vars]
		
		[properties]
		additionalPlacementRequirementsMet="def(chars) 
			if('ct-tree1-center' in transform(potentially_at_coord(list_add(self.vars.location, [0,0,-1]), chars), v.type),
				{'ok' -> 1}, {'error' -> 'Missing trunk. Timber!'})"
		[/properties]
		
		[animation]
			image=experimental/cube trains/plant-0001.png
			rect=0,0,255,255
		[/animation]
	[/object_type]
	
[/object_type]