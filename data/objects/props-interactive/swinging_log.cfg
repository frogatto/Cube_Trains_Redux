#onetime level controllers are like the regular type, except with respawns=no set.  Meaning that their script only happens once per playthrough.

	[object_type]
	id=swinging_log
	next_animation="'normal'"
	
	[editor_info]
		category=controllers
		help="A swinging bar."
		[var]
			name=length
			type=y
			value="midpoint_y+200"
		[/var]
	[/editor_info]
	
	[vars]
		swingpower=100
	[/vars]
	[properties]
		length="abs(midpoint_y-vars.length)"
		tilt="(sin(cycle*2)*swingpower)/2000+90"
		swinging_right="if(sin(cycle*2 +90) > 0, 0,1)"
	[/properties]
	
	## origin is done by the controller
	## set up the object straight vertical, give it a editor-specced distance
	## it's already given a base momentum.
	##
	## treat the whole object as having a second "key point" where the platform should be
	## each frame, 'orbit' the key point by some sine function, relative to the current momentum, and relative to the period.  Period determines where we are in the swing, momentum determines the width of the swing.
	## also, each frame, modify the momentum depending on which side of the object (relative to the swing direction) that frogatto is standing on.
	
	
	on_create = "[
		set(alpha, 0),
		spawn('swinging_log.platform', midpoint_x,y+length,facing),
		spawn('rope_angled_controller',midpoint_x,y,facing)
		]"

on_child_spawned="switch(child.type,	#'swinging_log.platform', set(vars.platform, child),#
										'rope_angled_controller', set(vars.cross_rope, child))"
		
	on_process="[	set(platform.midpoint_x, orbit_obj(x,y,tilt,length)[0]),
					set(platform.midpoint_y, orbit_obj(x,y,tilt,length)[1]),
					cross_rope.set_ends(x,y,platform.midpoint_x,platform.midpoint_y),
					debug(swingpower)]"
					
	timer_frequency=5
	on_timer="if(swingpower > 100, add(swingpower,-6))"
	
	on_end_anim="animation('normal')"
	zorder=50

		[animation]
		id=normal
		image=effects/particles.png
		x=117
		y=73
		w=28
		h=28
		#collide="0,0,28,28"
		frames=1
		duration=1000
		[/animation]
		
		[object_type]
			id=platform
			next_animation="'normal'"
			
			[properties]
					being_stood_on="(level.player.is_standing_on_platform and distance(level.player, self) < 200)"
			[/properties]
			
			
			on_spawned="[set(spawner.vars.platform, spawner.vars.platform + child),
				set(vars.spawner, spawner)]"
			
on_process="if(being_stood_on, 
							[if(level.player.midpoint_x > midpoint_x and spawner.swinging_right, if(spawner.vars.swingpower < 1800, add(spawner.vars.swingpower, 2))),
							
							if(level.player.midpoint_x < midpoint_x and (not spawner.swinging_right), if(spawner.vars.swingpower < 1800, add(spawner.vars.swingpower, 2))),
							
							#purely cosmetic tilt to let the player know this state matters#
							set(rotate,if(level.player.midpoint_x > midpoint_x, 2, -2))],
						set(rotate,0)
			)"
			
			platform_area=0,21,63,22
			[animation]
				image=props/forest-props.png
				id=normal
				x=0
				y=0
				w=63
				h=63
			[/animation]
		[/object_type]
		
		
	[/object_type]