{
id: "treasure_chest",
zorder: -1,
on_create: "animation('normal')",
on_interact: "[animation('opening'),sound('DoorOpen.ogg'),fire_event(level.player, 'start_interact')]",
on_end_normal_anim: "animation('normal')",
on_end_opening_anim: "[animation('open'),fire_event(level.player, 'end_interact'),fire_event('treasure_give'),schedule(50, fire_event('force_loot_acquire'))]",
on_end_open_anim: "animation('open')",

#
#
#We must put this in a separate function, because loot only exists *after* the treasure_give event has fired.  If we called it above, it would have no target.
on_force_loot_acquire: "if(tmp.loot.size > 0,fire_event(tmp.loot[0],'acquired'))",
on_child_spawned: "[if(vars.acquirable_child, set(child.collide_dimensions_in, [])),
	                   set(tmp.loot, tmp.loot + [child])]",
on_treasure_give: "if((not event_name in level.player.vars.triggered_events),[ spawn(spawn_type,midpoint_x,y-50,facing,[set(velocity_y,-1000),set(accel_y,40),set(zorder,21)]),set(level.player.vars.triggered_events, level.player.vars.triggered_events + [event_name])] )",
solid_dimensions: ["npc"],
	editor_info: {
	category: "props",
		var: [
			{
			name: "spawn_type",
			type: "text",
			value: "'points_cube'",
			},
			{
			name: "event_name",
			type: "text",
			value: "''",
			},
			{
			name: "acquirable_child",
			type: "boolean",
			value: 1,
			},
		],
	},
	tmp: {
	loot: [],
	},
	animation: [

		#solid_area=16,16,47,47
		{
		image: "props/interactive-props.png",
		id: "normal",
		rect: [0,0,63,48],
		duration: 200,
		interact_area: "all",
		},

		#solid_area=16,16,47,47
		{
		image: "props/interactive-props.png",
		id: "opening",
		rect: [0,0,63,48],
		frames: 6,
		frames_per_row: 3,
		pad: 0,
		duration: 5,
		},

		#solid_area=16,16,47,47
		{
		image: "props/interactive-props.png",
		id: "open",
		rect: [128,49,191,97],
		duration: 200,
		},
	],
}