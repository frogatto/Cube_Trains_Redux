{
id: "wheel_rolling",
zorder: -5,
on_child_spawned: "[
	if(child.type = 'wheel_rolling.rope_platform', set(vars.platforms, vars.platforms + [child])),
	if(child.type = 'wheel_rolling.shadow', set(vars.shadow, [child])),
	if(child.type = 'rope_angled_controller', set(vars.ropes, vars.ropes + [child]))
]",
on_create: "[
	map(
		range(vars.nplatforms),
		spawn('wheel_rolling.rope_platform',x,y,facing, set(parent, me))
	),
	spawn('wheel_rolling.shadow',midpoint_x-10,midpoint_y-4,facing, [set('zorder', zorder-2)]),
	spawn('rope_angled_controller', x,y,facing, [set('zorder', zorder-1)]),
	spawn('rope_angled_controller', x,y,facing, [set('zorder', zorder-1)]),
	spawn('wheel_rolling.mount',vars.left_x,y,facing,  [set('zorder', zorder-3)]),
	spawn('wheel_rolling.mount',vars.right_x,y,facing,  [set('zorder', zorder-3)])
]",
on_process: "[
	set(vars.rotation_speed, vars.rotation_speed*0.95),

	#check if the player is on any of our platforms, and then add momentum accordingly#
	map(vars.platforms,	'platform',
		if(level.player.standing_on = platform,
			set(vars.rotation_speed, max( -max_speed, min(max_speed, new_speed)))
			
			where new_speed = vars.rotation_speed*0.98 + (platform.midpoint_x - midpoint_x)/inertia
		)
	),
	
	#deal with horizontal momentum#
	[set(velocity_x, new_speed),
	if(midpoint_x > right_x, set(velocity_x, min(new_speed, 0))),
	if(midpoint_x < left_x,  set(velocity_x, max(new_speed, 0)))
	
	] where new_speed = (vars.rotation_speed * x_per_degree),

	#regardless of whether the player is on our platforms, decay the speed#
	
	# do the actual rotation of the wheel and platforms#
	set(rotate, rotate + vars.rotation_speed),
	
	map(vars.shadow, 'shadow', [
		set(shadow.rotate, rotate),	set(shadow.x, x-10)
	]),
	
	map( vars.platforms, 'platform', [
		set(vars.platforms[index].relative_x,  platform_pos(angle)[0] - vars.platforms[index].img_w/2),
		set(vars.platforms[index].relative_y,  platform_pos(angle)[1] - vars.platforms[index].img_h/2),
	] where angle = (-rotate + (index*360/vars.nplatforms))%360
	),
	
	vars.ropes[0].set_ends(vars.left_x,y,midpoint_x,midpoint_y+6),
	vars.ropes[1].set_ends(vars.right_x,y,midpoint_x,midpoint_y+6)
	
]",
editor_info: {
	category: "platforms",
	help: "A wheel which rotates when the player jumps on it",
	var: [
		{
			name: "left_x",
			type: "x",
			value: "x",
		},
		{
			name: "right_x",
			type: "x",
			value: "x + img_w",
		},
		{
			help: "Number of platforms at the edge of the wheel",
			name: "nplatforms",
			value: 3,
		},
	],
},
vars: {
	shadow: [],
	platforms: [],
	ropes: [],
	rotation_speed: 0,
},
properties: {
	radius: "midpoint_y-y -10",
	platform_pos: "def(angle) [sin(angle)*radius, cos(angle)*radius]",
	inertia: 400.5,
	max_speed: 3,
	x_per_degree: 90,
},
animation: {
	image: "props/wooden-wheel.png",
	id: "normal",
	x: 104,
	y: 4,
	w: 80,
	h: 80,
},
object_type: [
	{
		id: "mount",
		zorder: -1,
		next_animation: "'normal'",
		animation: {
			image: "props/forest/log-swing.png",
			id: "normal",
			rect: [64,0,95,31],
		},
	},
	{
		id: "rope_platform",
		platform_area: [0,26,31,27],
		animation: {
			image: "props/rope.png",
			id: "normal",
			x: 0,
			y: 36,
			w: 38,
			h: 34,
		},
	},
	{
		id: "shadow",
		animation: {
			image: "props/wooden-wheel.png",
			id: "normal",
			x: 5,
			y: 4,
			w: 80,
			h: 80,
		},
	},
],
}