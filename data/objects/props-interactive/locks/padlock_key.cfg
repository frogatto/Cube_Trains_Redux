{
id: "padlock_key",
prototype: "hittable",
solid_dimensions: ["thrown"],
collide_dimensions: ["~key"],
friction: 1000,
tags: "swallowable",
zorder: -1,
on_start_level: "[ if(level.player.vars.stored_events[event_name] = 1, remove_object(me)),
					add(variations, [vars.color]),animation('normal')]",
solid_area: [0,0,15,15],
on_collide_object_body: "if(collide_with_area in ['attack'], get_hit_by(collide_with))",
on_collide_side: "set(velocity_x, -(velocity_x*70)/100)",
on_collide_head: "set(velocity_y, -velocity_y)",
on_collide_feet: "[set(velocity_x, (velocity_x*50)/100), if(abs(velocity_x) < 50, set(velocity_x, 0)), set(velocity_y, if(abs(velocity_y) > 50, -velocity_y/2, 0))]",
no_compile_image: "props/keys.png",
	editor_info: {
	category: "props",
		var: [
			{
			name: "color",
			type: "enum",
			value: "'gold'",
			enum_values: "gold,silver,green,red,purple,blue,cyan",
			},
			{
			name: "event_name",
			type: "text",
			value: "''",
			},
		],
	},
	properties: {
	get_hit_by: "def(collide_with)  null",
	},
	animation: [

		#gold is the default
		{
		image: "props/keys.png",
		accel_y: 80,
		body_area: "all",
		duration: 10000,
		rect: [0,0,15,15],
		id: "normal",
		},
		{
		image: "props/keys.png",
		accel_y: 80,
		body_area: "all",
		duration: 10000,
		rect: [0,0,15,15],
		id: "thrown",
		},
	],
	object_variation: [
		{
		id: "gold",
		},

		#do nothing, but still have the variation for logic simplicity
		{
		id: "silver",
			set_str: {
			_target: "filter(elements.animation, rect='0,0,15,15')",
			rect: [16,0,31,15],
			},
		},
		{
		id: "green",
			set_str: {
			_target: "filter(elements.animation, rect='0,0,15,15')",
			rect: [32,0,47,15],
			},
		},
		{
		id: "red",
			set_str: {
			_target: "filter(elements.animation, rect='0,0,15,15')",
			rect: [48,0,63,15],
			},
		},
		{
		id: "purple",
			set_str: {
			_target: "filter(elements.animation, rect='0,0,15,15')",
			rect: [64,0,79,15],
			},
		},
		{
		id: "blue",
			set_str: {
			_target: "filter(elements.animation, rect='0,0,15,15')",
			rect: [80,0,95,15],
			},
		},
		{
		id: "cyan",
			set_str: {
			_target: "filter(elements.animation, rect='0,0,15,15')",
			rect: [96,0,111,15],
			},
		},
	],
}