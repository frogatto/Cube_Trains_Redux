#Note regarding use of motion_lock controller:
#	Colours range between one and five, visually. Logically, any value works even if it is not displayed.
#	A motion lock's 'unlocked' event is fired, once, when all of it's matching colours are lit.
#	The event is fired regardless of which order the controllers were hit in.

[object_type]
	id=motion_lock
	next_animation="'normal'"
	always_active=no
	
	[editor_info]
		category=controllers
		help="Like colours (range 0 to 5) throw unlocked event in FFL when all lit."
		[var]
			name=red
			type=int
			value="5"
		[/var]
		[var]
			name=green
			type=int
			value="0"
		[/var]
		[var]
			name=blue
			type=int
			value="0"
		[/var]
	[/editor_info]
	
	[properties]
		colour="def(obj) [set(obj.red, vars.red*50), set(obj.green, vars.green*50), set(obj.blue, vars.blue*50)]"
	[/properties]
	
	on_end_anim="animation('normal')"
	zorder=-5
	
	timer_frequency=3
	on_timer="if(length(midpoint_x, midpoint_y, level.player.midpoint_x, level.player.midpoint_y) < 35, fire_event('triggered'))"

	on_triggered="if(not vars.light, [
		add_object(obj),
		colour(obj),
		set(vars.light, obj),
		fire_event('check_lit'),
		] where obj = object('motion_lock.dim', midpoint_x, midpoint_y, facing))"
		
	on_check_lit="[
		if(find(match_sensors, 'match', not match.vars.light),
			map(all_sensors, 'sensor', if(not sensor in match_sensors, fire_event(sensor, 'off'))),
			map(all_sensors, 'sensor', if(not sensor in match_sensors, fire_event(sensor, 'off'), fire_event(sensor, 'on')))
		) where match_sensors = filter(all_sensors, 'sensor', sensor.vars.red=red_value and sensor.vars.blue=blu_value and sensor.vars.green=gre_value)
		where all_sensors = filter(level.chars, 'char', char.type = 'motion_lock')
		where red_value = vars.red
		where blu_value = vars.blue
		where gre_value = vars.green]"
		
	on_off="if(vars.light.type = 'motion_lock.dim', [
		fire_event(vars.light, 'nix'),
		set(vars.light, null()),
		])"
		
	on_on="if(vars.light.type = 'motion_lock.dim', [
		schedule(25, [
			fire_event(vars.light, 'nix'),
			add_object(obj)]),
		colour(obj),
		set(vars.light, obj),
		fire_event('unlocked'),
		] where obj = object('motion_lock.bright', midpoint_x, midpoint_y, facing))"
		
	[animation]
		id=normal
		image=experimental/wall_switch.png
		x=24
		y=5
		w=14
		h=14
		collide="0,0,28,28"
		frames=1
		duration=1000
	[/animation]
		
	[object_type]
		id=dim
		next_animation="'normal'"
		always_active=no
		
		on_end_anim="animation('normal')"
		zorder=-4

		on_triggered="[]"
		
		on_nix="die()"

		[animation]
			id=normal
			image=experimental/wall_switch.png
			x=7
			y=5
			w=14
			h=14
			collide="0,0,28,28"
			frames=1
			duration=1000
		[/animation]
	[/object_type]
		
	[object_type]
		id=bright
		next_animation="'normal'"
		always_active=no
		
		on_end_anim="animation('normal')"
		zorder=-4

		on_triggered="[]"

		[animation]
			id=normal
			image=experimental/wall_switch.png
			x=7
			y=22
			w=14
			h=14
			collide="0,0,28,28"
			frames=1
			duration=1000
		[/animation]
	[/object_type]
[/object_type]