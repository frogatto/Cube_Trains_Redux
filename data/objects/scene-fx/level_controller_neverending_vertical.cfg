#onetime level controllers are like the regular type, except with respawns=no set.  Meaning that their script only happens once per playthrough.

	[object_type]
	id=level_controller_neverending_vertical
	next_animation="'normal'"
	always_active=yes
	respawns="no"
	zorder=50

	[editor_info]
	category=controllers
	[/editor_info]
	
	[vars]
	segments="[]"
	top_edge="0"
	bot_edge="0"
	cosmic_shift_threshhold="16384"
	cosmic_shift_amount="15360"
	[/vars]
	
	
	on_process="if(level.player.midpoint_y > vars.cosmic_shift_threshhold, [cosmic_shift(0, -vars.cosmic_shift_amount),
				  add(vars.top_edge, -vars.cosmic_shift_amount), add(vars.bot_edge, -vars.cosmic_shift_amount)],
                if(level.player.midpoint_y < -vars.cosmic_shift_threshhold, [cosmic_shift(0, vars.cosmic_shift_amount),
				  add(vars.top_edge, vars.cosmic_shift_amount), add(vars.bot_edge, vars.cosmic_shift_amount)],
					
	            [
	            set(level.dimensions, [level.dimensions[0], min(level.dimensions[1], level.player.midpoint_y-300), level.dimensions[2], level.dimensions[3]]),
	            if(level.player.midpoint_y < vars.top_edge + 500,
				   if(new_segment = null(),
				     debug('ERROR: could not find valid segment'),
	               [
	               add(vars.segments, [new_segment]),
				   add_level_module(new_segment, level.dimensions[0], vars.top_edge - level.segment_height),
				   add(vars.top_edge, -level.segment_height),
				   add(level.player.difficulty, 1)
				   ])
				   where new_segment = choose(filter(query(level, 'segments_after_' + vars.segments.last), 'n', query(level, 'segment_difficulty_start_' + n) <= level.player.difficulty and (not (n in vars.segments))))
				   ),
				 if(level.player.midpoint_y < (vars.bot_edge - 600) - level.segment_height,
				   fire_event('recycle_segment'))
	            ]))"
	
	on_recycle_segment="
				   [remove_level_module(vars.segments[0]),
				    add(vars.bot_edge, -level.segment_height),
					set(vars.segments, filter(vars.segments, 'n', n != vars.segments[0]))]
	"


	on_create="if(level.in_editor, die(),
	            [set(alpha, 0),
				if(level.dimensions[1]%32, debug('illegal top dimension of level: not divisible by 32')),
				if(level.dimensions[3]%32, debug('illegal bottom dimension of level: not divisible by 32')),
				set(level.dimensions, [level.dimensions[0], level.dimensions[1] - 1000000, level.dimensions[2], level.dimensions[3] + 1000000]),
	            add_level_module(str(first_segment), level.dimensions[0], level.dimensions[3] - level.segment_height),
				add(vars.segments, [first_segment]),
	            set(vars.top_edge, level.dimensions[3] - level.segment_height), set(vars.bot_edge, level.dimensions[3])]
				 where first_segment = (level.player.y - level.dimensions[1])/level.segment_height
				)"



		[animation]
		id=normal
		image=effects/particles.png
		x=117
		y=73
		w=28
		h=28
		#collide="0,0,28,28"
		frames=1
		duration=1000000
		[/animation]
	[/object_type]
