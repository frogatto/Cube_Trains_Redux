[object_type]
id=waterfall

	[editor_info]
	category=controllers
		[var]
		name=zone_x1
		type=x
		value="x"
		[/var]
		[var]
		name=zone_x2
		type=x
		value="x+64"
		[/var]
		[var]
		name=zone_y1
		type=y
		value="y"
		[/var]
		[var]
		name=zone_y2
		type=y
		value="y+128"
		[/var]
	[/editor_info]

	[vars]
	max_length=300
	length=300
	start_pos=0
	offset=0
	[/vars]

	[properties]
	set_pos_len="def(pos, len) [set(vars.length, len), set(vars.start_pos, pos%5), fire_event(me, 'calculate_segments')]"
	move_pos="def(amount) [set(vars.start_pos, (vars.start_pos+amount)%5), fire_event(me, 'calculate_segments')]"
	set_y="def(new_y) if(new_y != y, set(me.y, y + diff))
	   where diff = new_y - y"
	[/properties]


	on_create="[set(alpha,120),set_pos_len(y,256),fire_event('calculate_segments'),spawn('waterfall.waterfall_overlay',midpoint_x,midpoint_y,facing),
	
	spawn('sfx_falloff_generator',midpoint_x,midpoint_y,1,[set(effect_name,'ambient/waterfall-heavy.ogg'),set(x_bound,x-50),set(x2_bound,x+50),set(y_bound,y-50),set(y2_bound,y+50),set(max_volume,40),set(master_volume,64)])]"

	on_spawned="fire_event('calculate_segments')"
	on_calculate_segments="[set(x,vars.zone_x1),set(y,vars.zone_y1),set(draw_area, [0, vars.offset, abs(vars.zone_x2-vars.zone_x1)/2, abs(vars.zone_y2-vars.zone_y1)/2])]"

	on_process="[add(vars.offset,-8),fire_event('calculate_segments')]"
	#we don't want to compile the image since we rely on it tiling.
	no_compile_image="waterfall.png"

	[animation]
	image=effects/waterfall.png
	id=normal
	x=0
	w=32
	y=0
	h=64
	[/animation]






	[object_type]
	id=waterfall_overlay
	zorder=2
	
		[vars]
		max_length=300
		length=300
		start_pos=0
		offset=0
		[/vars]
	
		[properties]
		set_pos_len="def(pos, len) [set(vars.length, len), set(vars.start_pos, pos%5), fire_event(me, 'calculate_segments')]"
		move_pos="def(amount) [set(vars.start_pos, (vars.start_pos+amount)%5), fire_event(me, 'calculate_segments')]"
		set_y="def(new_y) if(new_y != y, set(me.y, y + diff))
		   where diff = new_y - y"
		[/properties]
	
		on_create="[set_pos_len(y,256),fire_event('calculate_segments'),set(alpha,120),add_particles('steam'),add_particles('steam_rising')]"
		on_spawned="fire_event('calculate_segments')"
		on_calculate_segments="set(draw_area, [0, vars.offset, 32, vars.length])"
	
		on_process="[add(vars.offset,-5),fire_event('calculate_segments')]"
		#we don't want to compile the image since we rely on it tiling.
		no_compile_image="waterfall.png"
	
		[animation]
		image=effects/waterfall_overlay.png
		id=normal
		x=0
		w=32
		y=0
		h=64
		[/animation]
	

		[particle_system]
		id=steam
		type=simple
		spawn_rate=600
		time_to_live=300
		min_x=-10
		max_x=54
		min_y=-14
		max_y=14
		velocity_y=00
		velocity_x=-200
		velocity_x_random=400
		velocity_y_random=800
		accel_y=80
		color=100,255,255,255
		delta_a=2
			[animation]
			id=sparkle
			image=effects/particles.png
			x=3
			y=67
			w=9
			h=9
			pad=3
			frames=5
			duration=4
			[/animation]
		[/particle_system]

		[particle_system]
		id=steam_rising
		type=simple
		spawn_rate=2000
		time_to_live=300
		min_x=-10
		max_x=54
		min_y=484
		max_y=494
		velocity_y=00
		velocity_x=-400
		velocity_x_random=800
		velocity_y_random=800
		accel_y=-10
		color=100,255,255,255
		delta_a=2
			[animation]
			id=sparkle
			image=effects/particles.png
			x=3
			y=67
			w=9
			h=9
			pad=3
			frames=5
			duration=20
			[/animation]
		[/particle_system]

	[/object_type]



[/object_type]
