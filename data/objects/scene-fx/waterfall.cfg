[object_type]
id=waterfall

	[editor_info]
	category=controllers
	[/editor_info]

	[vars]
	max_length=300
	length=300
	start_pos=0
	offset=0
	[/vars]

	[properties]
	set_pos_len="def(pos, len) [set(vars.length, len), set(vars.start_pos, pos%5), fire_event(me, 'calculate_segments')]"
	move_pos="def(amount) [set(vars.start_pos, (vars.start_pos+amount)%5), fire_event(me, 'calculate_segments')]"
	set_y="def(new_y) if(new_y != y, set(me.y, y + diff))
	   where diff = new_y - y"
	[/properties]

	on_create="[set_pos_len(y,256),fire_event('calculate_segments'),spawn('waterfall_overlay',midpoint_x,midpoint_y,facing),
	
	spawn('sfx_falloff_generator',midpoint_x,midpoint_y,1,[set(effect_name,'ambient/waterfall-heavy.ogg'),set(x_bound,x-50),set(x2_bound,x+50),set(y_bound,y-50),set(y2_bound,y+50),set(max_volume,40),set(master_volume,64)])]"

	on_spawned="fire_event('calculate_segments')"
	on_calculate_segments="set(draw_area, [0, vars.offset, 32, vars.length])"

	on_process="[add(vars.offset,-8),fire_event('calculate_segments')]"
	#we don't want to compile the image since we rely on it tiling.
	no_compile_image="waterfall.png"

	[animation]
	image=effects/waterfall.png
	id=normal
	x=0
	w=32
	y=0
	h=64
	[/animation]









[/object_type]
