[object_type]
id=waterfall
	zorder=2

	[editor_info]
	category=controllers
		[var]
		name=zone_x1
		type=x
		value="x"
		[/var]
		[var]
		name=zone_x2
		type=x
		value="x+64"
		[/var]
		[var]
		name=zone_y1
		type=y
		value="y"
		[/var]
		[var]
		name=zone_y2
		type=y
		value="y+128"
		[/var]
	[/editor_info]

	[vars]
	offset=0
	[/vars]

	[properties]
	width="(vars.zone_x2 - vars.zone_x1)"
	[/properties]


	on_create="[
				if(not vars.zone_x1%2=0, add(vars.zone_x1,-1)), #Make sure we're drawing on the x2 grid.#

				set(alpha,120),fire_event('calculate_segments'),
				add_particles('steam'),add_particles('steam_rising'), fire_event('setup_particles'),
				spawn('waterfall.waterfall_overlay',midpoint_x,midpoint_y,facing,set_var('parent', me)),
				spawn('waterfall.waterfall_left_sidecap',midpoint_x,midpoint_y,facing,set_var('parent', me)),
				spawn('waterfall.waterfall_right_sidecap',midpoint_x,midpoint_y,facing,set_var('parent', me)),
				spawn('sfx_falloff_generator',midpoint_x,midpoint_y,1,[set(effect_name,'ambient/waterfall-heavy.ogg'),set(x_bound,x-50),set(x2_bound,x+50),set(y_bound,y-50),set(y2_bound,y+50),set(max_volume,40),set(master_volume,64)])]"

	on_calculate_segments="[set(x,vars.zone_x1),set(y,vars.zone_y1),set(draw_area, [0, vars.offset, abs(vars.zone_x2-vars.zone_x1)/2, abs(vars.zone_y2-vars.zone_y1)/2])]"

	on_process="[add(vars.offset,-8),fire_event('calculate_segments')]"
	#we don't want to compile the image since we rely on it tiling.
	no_compile_image="waterfall.png"


	on_setup_particles="[
		set(steam.pos_x, -20),
		set(steam.pos_y, 20),
		set(steam.pos_x_rand, (vars.zone_x2-vars.zone_x1)+40),
		set(steam_rising.min_x, vars.zone_x1 - x -36),
		set(steam_rising.max_x, vars.zone_x2 - x +12),
		set(steam_rising.min_y, (vars.zone_y2 - 5) - y),
		set(steam_rising.max_y, (vars.zone_y2 + 5) - y),
		set(steam_rising.spawn_rate, 200*(zone_x2 - zone_x1))
		]"


	[animation]
	image=effects/waterfall.png
	id=normal
	x=0
	w=32
	y=0
	h=64
	[/animation]

		[particle_system]
		id=steam
		type=point
		generation_rate_millis=4000
		time_to_live=122
		red=255
		green=255
		blue=255
		alpha=123
		alpha_delta=-1
		dot_size=20
		dot_rounded=yes
		
		pos_x=-10
		pos_x_rand=180
		pos_y=-60
		velocity_x=-150
		velocity_x_rand=300
		velocity_y=1500
		velocity_y_rand=2500
		[/particle_system]

	[particle_system]
	id=steam_rising
	type=simple
	spawn_rate=2000
	time_to_live=300
	min_x=-10
	max_x=54
	min_y=484
	max_y=494
	velocity_y=00
	velocity_x=-400
	velocity_x_random=800
	velocity_y_random=800
	accel_y=-10
	color=100,255,255,255
	delta_a=2
		[animation]
		id=sparkle
		image=effects/particles.png
		x=3
		y=67
		w=9
		h=9
		pad=3
		frames=5
		duration=20
		[/animation]
	[/particle_system]



	[object_type]
	id=waterfall_left_sidecap
	zorder=-2

		[vars]
		offset=0
		zone_x1=0
		zone_x2=0
		zone_y1=0
		zone_y2=0
		[/vars]


		on_create="[fire_event('calculate_segments'),set(alpha,180)]"
		on_spawned="[set(zone_x1,vars.parent.zone_x1-32),set(zone_x2,vars.parent.zone_x1),set(zone_y1,vars.parent.zone_y1),set(zone_y2,vars.parent.zone_y2),fire_event('calculate_segments')]"
		
		on_calculate_segments="[set(x,vars.zone_x1),set(y,vars.zone_y1),set(draw_area, [0, vars.offset, abs(vars.zone_x2-vars.zone_x1)/2, abs(vars.zone_y2-vars.zone_y1)/2])]"
	
		on_process="[add(vars.offset,-5),fire_event('calculate_segments')]"
		#we don't want to compile the image since we rely on it tiling.
		no_compile_image="waterfall_edge_left.png"

		[animation]
		image=effects/waterfall_edge_left.png
		id=normal
		x=0
		w=16
		y=0
		h=64
		[/animation]
	[/object_type]

	[object_type]
	id=waterfall_right_sidecap
	zorder=-2

		[vars]
		offset=0
		zone_x1=0
		zone_x2=0
		zone_y1=0
		zone_y2=0
		[/vars]


		on_create="[fire_event('calculate_segments'),set(alpha,180)]"
		on_spawned="[set(zone_x1,vars.parent.zone_x2),set(zone_x2,vars.parent.zone_x2+32),set(zone_y1,vars.parent.zone_y1),set(zone_y2,vars.parent.zone_y2),fire_event('calculate_segments')]"
		
		on_calculate_segments="[set(x,vars.zone_x1),set(y,vars.zone_y1),set(draw_area, [0, vars.offset, abs(vars.zone_x2-vars.zone_x1)/2, abs(vars.zone_y2-vars.zone_y1)/2])]"
	
		on_process="[add(vars.offset,-5),fire_event('calculate_segments')]"
		#we don't want to compile the image since we rely on it tiling.
		no_compile_image="waterfall_edge_right.png"

		[animation]
		image=effects/waterfall_edge_right.png
		id=normal
		x=0
		w=16
		y=0
		h=64
		[/animation]
	[/object_type]


	[object_type]
	id=waterfall_overlay
	zorder=-2
	
		[vars]
		offset=0
		zone_x1=0
		zone_x2=0
		zone_y1=0
		zone_y2=0
		[/vars]
	
		on_create="[fire_event('calculate_segments'),set(alpha,120)]"
		on_spawned="[set(zone_x1,vars.parent.zone_x1),set(zone_x2,vars.parent.zone_x2),set(zone_y1,vars.parent.zone_y1),set(zone_y2,vars.parent.zone_y2),fire_event('calculate_segments')]"
		
		on_calculate_segments="[set(x,vars.zone_x1),set(y,vars.zone_y1),set(draw_area, [0, vars.offset, abs(vars.zone_x2-vars.zone_x1)/2, abs(vars.zone_y2-vars.zone_y1)/2])]"
	
		on_process="[add(vars.offset,-5),fire_event('calculate_segments')]"
		#we don't want to compile the image since we rely on it tiling.
		no_compile_image="waterfall_overlay.png"
	
		[animation]
		image=effects/waterfall_overlay.png
		id=normal
		x=0
		w=32
		y=0
		h=64
		[/animation]
	


	[/object_type]



[/object_type]
