{
id: "heart_object",
always_active: true,

#hearts should not move when spawned, so if our parent gave us some
#velocity, kill it here.
#on_spawned="[set(velocity_x, 0), set(velocity_y, 0)]"
on_die: "[spawn('silhouette_heart',level.player.driver.midpoint_x,level.player.driver.midpoint_y,1),map([0]*10, spawn('heart_sparkle_large', level.player.driver.midpoint_x, level.player.driver.y2, 0))]",
on_create: "set(vars.time_to_live, level.cycle + vars.time_to_live)",
on_collide_object_item: "if(collide_with.is_player_body_part,if(diff > 0,
                [set(level.status_gui, 'objects', level.status_gui.objects + [object('heart_object', 20, 20, 1)] * diff), die(), sound('PickUp-Heart.ogg'), set(level.player.driver, 'hitpoints', level.player.driver.hitpoints + diff)]))
				where diff = min(2, level.player.driver.max_hitpoints - level.player.driver.hitpoints)",
on_end_anim: "animation('normal')",
solid_dimensions: [],
friction: 100,

#on_process="set(brightness,(wave(cycle*30)+1000)/3 + 255)"
timer_frequency: 10,
on_timer: "[spawn('heart_sparkle',midpoint_x,midpoint_y,0),if(level.cycle > vars.time_to_live, remove_object(me))]",
on_collide_feet: "[set(velocity_y, -velocity_y), set(velocity_x, (velocity_x*9)/10 + (velocity_y*slope_standing_on)/270),animation('flash')]",
on_collide_side: "[set(velocity_y, velocity_y/2), set(velocity_x, -velocity_x),animation('flash')]",
vars: {
	time_to_live: 5000,
},
animation: [
	{
		id: "normal",
		image: "props/items.png",
		rect: [198,69,212,83],
		pad: 3,
		frames: 12,
		frames_per_row: 3,
		duration: 2,
		item_area: "all",
		solid_area: [4,4,8,8],
		accel_y: 30,
	},
	{
		id: "flash",
		image: "props/items.png",
		rect: [180,105,194,119],
		pad: 3,
		frames: 1,
		duration: 4,
		item_area: "all",
		solid_area: [4,4,8,8],
		accel_y: 20,
	},
],
}