{
id: "trophy",
on_create: "add_particles('particles')",
collide_dimensions: ["~item"],
traction_in_air: 1000,
properties: {
	event_name: "'trophy_' + vars.kind + '_acquired'",
},
on_start_level: "[ if(level.player.vars.stored_events[event_name] = 1, remove_object(me)),
					add(variations, [vars.kind]),animation('normal')]",
on_collide_object_item: "if(collide_with.is_player_body_part and vars.time_acquired = 0,[fire_event('acquired'),set(level.player.control_lock, []),schedule(1,set(level.player.animation, 'item_get_begin'))  ])",
on_end_anim: "animation('normal')",
respawns: false,
on_acquired: "[set(vars.time_acquired,cycle),
		set(alpha,0),
		
		set(level.zoom, 2),
		schedule(40, [set(alpha,255),set(midpoint_x,level.player.mid_x),set(midpoint_y,level.player.mid_y-60),set(velocity_y,-30),set(accel_y,00),set(zorder,50)]),
		schedule(90, fire_event('force_loot_acquire')),
		set(level.player.vars.triggered_events, level.player.vars.triggered_events + [event_name]),
		schedule(160, set(level.player.animation, 'item_get_end')),
		schedule(200, [set(level.player.control_lock, null),set(level.zoom, 1),]),
		schedule(210, die()),
		schedule(40,speech_dialog([~You found a golden trophy!~],[~It has no special use, but hey - it's solid gold.\nThat can't be bad!~]))
	
	]",
	
on_force_loot_acquire: "[set(alpha,0),map([0,0,0,0],spawn('coin_sparkle',midpoint_x + 1d40-20,midpoint_y + 1d40-20,0)),sound('coin.ogg')]",
	
editor_info: {
	category: "props",
	var: [
		{
			name: "kind",
			type: "enum",
			value: "'ant'",
			enum_values: "ant,kitty,bunny,milgramblock,fumper,bat,fish,squirrel",
		}],
},

vars: {
	time_acquired: 0,
},
variations: {
	ant:	"null",
	kitty:	"[map(filter(doc.animation, value.rect = [0,0,31,31]), 'anim', set(anim.rect, [32,0,63,31]))]",
	bunny:	"[map(filter(doc.animation, value.rect = [0,0,31,31]), 'anim', set(anim.rect, [64,0,95,31]))]",
	milgramblock:	"[map(filter(doc.animation, value.rect = [0,0,31,31]), 'anim', set(anim.rect, [96,0,127,31]))]",
	fumper:	"[map(filter(doc.animation, value.rect = [0,0,31,31]), 'anim', set(anim.rect, [0,32,31,63]))]",
	bat:	"[map(filter(doc.animation, value.rect = [0,0,31,31]), 'anim', set(anim.rect, [32,32,63,63]))]",
	fish:	"[map(filter(doc.animation, value.rect = [0,0,31,31]), 'anim', set(anim.rect, [64,32,95,63]))]",
	squirrel:	"[map(filter(doc.animation, value.rect = [0,0,31,31]), 'anim', set(anim.rect, [96,32,127,63]))]",
},

animation: {
	id: "normal",
	image: "props/trophies.png",
	rect: [0,0,31,31],
	feet_x:16,
	feet_y:32,
	frames: 1,
	duration: 8,
	item_area: "all",
},
particle_system: {
	id: "particles",
	type: "simple",
	min_y: -10,
	max_y: 30,
	min_x: -10,
	max_x: 30,
	spawn_rate: 10,
	time_to_live: 18,
	animation: [
		{
			id: "sparkle",
			image: "props/items.png",
			rect: [139,88,149,98],
			frames: 4,
			pad: 3,
			duration: 6,
		},
		{

			#
			#same thing, but skip the first frame
			id: "sparkle",
			image: "props/items.png",
			rect: [153,88,163,98],
			frames: 3,
			pad: 3,
			duration: 4,
		},
		{

			#
			#same thing, but skip the first 2 frames
			id: "sparkle",
			image: "props/items.png",
			rect: [167,88,177,98],
			frames: 2,
			pad: 3,
			duration: 6,
		},
	],
},
}