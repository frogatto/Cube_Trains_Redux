[editor_scripts]

[script]
id="Simple World"
script="
def add_enemy(left, right, ypos)
   add_object(enemy[0], left + (1d max(1, (right - left) - enemy[1])), ypos - enemy[2], -1)
   where enemy = choose(
    [
	  ['black_ant', 40, 60],
	  ['black_ant', 40, 60],
	  ['black_ant', 40, 60],
	  ['red_ant', 40, 60],
	  ['red_ant', 40, 60],
	  ['mosquito', 40, 150],
	  ['mosquito', 40, 190],
	  ['mosquito', 40, 240]
	]
   )
;
def add_prop(left, right, ypos)
   add_object(prop[0], left + (1d max(1, (right - left) - prop[1])), ypos - prop[2]*2, 1)
   where prop = choose(
    [
     ['tree-stage1', 80, 120],
     ['tree-dark-stage1', 80, 120],
 #    ['bush-floral1-stage1', 62, 34],
 #    ['bush-floral2-stage1', 62, 34],
     ['bush-huge-stage1', 62, 34],
     ['bush-large-stage1', 62, 34],
     ['bush-med-stage1', 62, 34]
	]
   )
;
def prettify_platform(left, right, ypos)
  map([0] * 1d((right - left)/32), add_prop(left, right, ypos))
;

def add_enemies_to_platform(left, right, ypos)
  map([0] * 1d((right - left)/128), add_enemy(left, right, ypos))
;


def generate_heights(tile_id, left, top, right, bottom, last_height)
  if(left < right and height < bottom,
     [prettify_platform(left*32, min(right, left + platform_length)*32, height*32),
      add_enemies_to_platform(left*32, min(right, left + platform_length)*32, height*32),
	  add_tiles(tile_id, left, height, min(right, left + platform_length), bottom),
	  generate_heights(tile_id, left + platform_length, top, right, bottom, height)])
		  where platform_length = 2d6, height = last_height + (1d5 - 1d5);

      generate_heights('grk', left, top, right, bottom, (top+bottom)/2)
         where top = min(map(cells, y)), bottom = max(map(cells, y)),
		       left = min(map(cells, x)), right = max(map(cells, x))"
[/script]

[script]
id="Add Grass"
script="
map(cells, if(find(down.tiles, 'tile', tile = 'grk') and (not find(tiles, 'tile', tile = 'grk')), add_tiles('grs', x, y)))"
[/script]
[script]
id="Smooth Rocks"
script="
#function which counts the gray rocks in a column. 'cell' is the cell at
 the top of the column, and 'count' is the number of cells in the column.#
def count_grk_in_column(cell, count)
  if(count <= 0, 0, if('grk' in cell.tiles, 1, 0) + count_grk_in_column(cell.down, count-1));

#function which counts the gray rocks in a rectangle. 'cell' is the cell
 at the top-left of the rect, and 'nrows' and 'ncols' give the size of the rect#
def count_grk_in_rect(cell, nrows, ncols)
  if(ncols <= 0, 0, count_grk_in_column(cell, nrows) + count_grk_in_rect(cell.right, nrows, ncols-1));

#for all cells with 'grk' in them, calculate the number of grk tiles in a
 3 tile radius. If this number is greater than 30, leave the grk there. If
 it's greater than 15, then make leaving the grk there random; otherwise clear
 the grk.#
map(filter(cells, 'grk' in tiles), 'cell',
  if(count < 15 or count < 30 and 1d2 = 1, remove_tiles('grk', cell.x, cell.y)) where count = count_grk_in_rect(cell.left.left.left.up.up.up, 7, 7))
"
[/script]
[/editor_scripts]
