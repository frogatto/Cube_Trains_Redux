[prototype]
	hitpoints=2
	zorder=0
	
	[properties]
		#Returns an object (list index 0), and the commands to remove that object from the list of objects we can return (list index 1).
		go_to = "def(pos) map(range(frames), 'step', schedule(frames - step, [	set(self.x, pos[0] + ((self.x-pos[0])/frames)*step ) , 
																				set(self.y, pos[1] + ((self.y-pos[1])/frames)*step ) ])) where frames = 20"

		tile_left="find(vars.logic.vars.play, 'obj', obj.x = (context.x - 32) and obj.y = context.y)"
		tile_right="find(vars.logic.vars.play, 'obj', obj.x = (context.x + 32) and obj.y = context.y)"
		tile_up="find(vars.logic.vars.play, 'obj', obj.x = context.x and obj.y = (context.y - 32))"
		tile_down="find(vars.logic.vars.play, 'obj', obj.x = context.x and obj.y = (context.y + 32))"
		kingdom_internal="def(already_found) if([x,y] in already_found, [],
		   [me] + if(tile_left, tile_left.kingdom_internal(fnd), [])
			    + if(tile_right, tile_right.kingdom_internal(fnd), [])
			    + if(tile_up, tile_up.kingdom_internal(fnd), [])
			    + if(tile_down, tile_down.kingdom_internal(fnd), []))
		      where fnd = already_found + [[x,y]]"
		kingdom="kingdom_internal([])"
	[/properties]
	
	on_create = "set(vars.logic, get_object(level, 'logic'))"
	
	on_lmb_down="
		if(abs(arg.pos_x()-midpoint_x) < logic.consts.tile_size and abs(arg.pos_y()-midpoint_y) < logic.consts.tile_size, 
			[fire_event('track_mouse'), set(zorder, zorder + 1)])
		"
	
	on_track_mouse="[
		set(midpoint_x, level.player.vars.mouse.pos_x()),
		set(midpoint_y, level.player.vars.mouse.pos_y()),
		if('left' in level.player.vars.mouse.vars.parent_player.ctrl_mice[level.player.vars.mouse.vars.parent_player.vars.number], 
			schedule(1, fire_event('track_mouse')), 
			[fire_event(get_object(level, 'logic'), 'release_tile', self), set(zorder, zorder - 1)]),
		]"
	
	[base:animation]
		pad=0
		frames=1
		surface_area=all
	[/animation]
	
	
	

[/prototype]
