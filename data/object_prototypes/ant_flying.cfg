[prototype]
	[vars]
		team="'evil'"
		points_value="75"
		turns_at_cliffs=1
		damage=1
	[/vars]

	[editor_info]
	category=bugs
		[var]
		name=x_bound
		type=x
		value="x - 200"
		[/var]
		[var]
		name=x2_bound
		type=x
		value="x2 + 200"
		[/var]
		[var]
		name=desired_height
		type=y
		value="midpoint_y"
		[/var]
	[/editor_info]

	[consts]
		thrown_damage=5
		normal_damage=1
		springiness=190
		spring_amount=1200
		bounce_roundness=10
		basic_animation="'stand'"
		basic_type="'null'"
		solid_dimensions="['enemy', 'common']"
	[/consts]

	prototype=hittable
	mass=5
	friction=1000
	traction=1000
	traction_in_air=1000
	timer_frequency=5
	hitpoints=5
	solid_area=5,10,20,25
	solid_dimensions=enemy,common
	tags=swallowable


	
	on_die="[score(level,points_value), spawn_item(self), if(vars.died_in_water,
																		[if(abs(water_bounds[1] - midpoint_y) > 40, 
																		spawn('water_splash_underwater_big', midpoint_x, midpoint_y, if(1d2=2,facing,-facing)),
																		spawn('water_splash', midpoint_x, water_bounds[1]+10, if(1d2=2,facing,-facing))),
																	sound('water-enter.ogg'),],
																spawn('die_cloud', midpoint_x, midpoint_y, facing))]"
	

	

	on_create="[animation('fly'), if(vars.desired_height = null(), set(vars.desired_height, midpoint_y))]"

### collision handling:	
	on_collide_side="if(not (animation in ['hurt']), [set(facing, -facing), animation('turn'), set(velocity_x,0)])"
	on_collide_head="set(velocity_y, -velocity_y/2)"
	on_collide_feet="set(velocity_y, -velocity_y/2)"

	on_bounced_on="fire_event('lose_wings')"
	
	on_lose_wings="[set(type, consts.basic_type),animation(consts.basic_animation)]"
	
	on_surface_damage="die()"


### animation switching:
	on_end_anim="[if(strstr(animation, 'Glow'), animation('flyGlow'), animation('fly')),fire_event('test_bounds')]"
	on_enter_anim="set(tmp.already_hit, [])"
	
	on_enter_water="[set(vars.died_in_water,1),die()]"
		
	on_end_hurt_anim="animation('fly')"
	
	on_test_bounds="[if(facing < 0 and x < vars.x_bound or
	                facing > 0 and x2 > vars.x2_bound,
					[facing(-facing), animation('turn')],
					animation('fly'))]"
	on_process_fly="[if(solid(level, front + facing*50, y, 1, y2 - y),
	            [facing(-facing), animation('turn')], null()),
	            set(velocity_y, wave( min(250,max(-250, destination_height-midpoint_y ) ) ))
	            
	            ] where destination_height = vars.desired_height"

### error condition handling:
	on_change_solid_dimensions_fail="if(tmp.in_change_dimensions_fail or (not collide_with), die(),
	          [set(tmp.in_change_dimensions_fail, 1),
			   fire_event(collide_with, 'blocking_thrown_object'),
			   set(solid_dimensions_in, consts.solid_dimensions),
			   set(tmp.in_change_dimensions_fail, 0)
			  ])"
	on_change_animation_failure="[die()]"
	on_add_object_fail="[if(collide_with.vars.team != vars.team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]"
	

[/prototype]
