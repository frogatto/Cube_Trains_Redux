[prototype]
	[editor_info]
	category=bugs
		[var]
		name=x_bound
		type=x
		value="x - 200"
		[/var]
		[var]
		name=x2_bound
		type=x
		value="x2 + 200"
		[/var]
		[var]
		name=desired_height
		type=y
		value="midpoint_y"
		[/var]
	[/editor_info]

	[vars]
		points_value="75"
		turns_at_cliffs=1
		last_turned=0
	[/vars]
	[consts]
		springiness=190
		spring_amount=1200
		bounce_roundness=10
		basic_animation="'stand'"
		basic_type="'null'"
		solid_dimensions="['enemy', 'common']"
	[/consts]
	[properties]
		attack_damage=1
		team="'evil'"
	[/properties]


	prototype=hittable
	mass=5
	friction=1000
	traction=1000
	traction_in_air=1000
	has_feet=no
	hitpoints=50
	solid_area=5,10,20,25
	solid_dimensions=enemy,common
	tags=swallowable
	activation_border=150


	
	on_die="[score(level,points_value), spawn_item(self), death_burst_tracked(self)]"
	

	
	on_create="[animation('fly'), if(vars.desired_height = null(), set(vars.desired_height, midpoint_y)), set(activation_border, abs(vars.x_bound - vars.x2_bound))]"

### collision handling:	
	on_collide_side="[if(not (animation in ['hurt']), fire_event('turn')),set(velocity_x, -velocity_x/2)]"
	on_collide_head="set(velocity_y, -velocity_y/2)"
	on_collide_feet="set(velocity_y, -velocity_y/2)"

	on_bounced_on="fire_event('lose_wings')"
	
	on_lose_wings="[set(type, consts.basic_type),animation(consts.basic_animation)]"
	
	on_surface_damage="die()"


### animation switching:
	on_turn="if(cycle-vars.last_turned > 30 and (not animation in ['turn']),[set(vars.last_turned,cycle),animation('turn')])"
	on_leave_turn_anim="set(facing, -facing)"

	on_end_anim="animation('fly')"
	
	on_enter_water="die()"
		
	on_end_hurt_anim="animation('fly')"
	
	on_test_bounds="[if(not animation in ['turn'],if(facing < 0 and x < vars.x_bound or
	                facing > 0 and x2 > vars.x2_bound,
					fire_event('turn')))]"
	on_process_fly="[if(solid(level, front + facing*100, y, 1, y2 - y),
	            fire_event('turn')),fire_event('test_bounds'),
	            set(velocity_y, wave( min(250,max(-250, destination_height-midpoint_y ) ) ))
	            
	            ] where destination_height = vars.desired_height"

[/prototype]
