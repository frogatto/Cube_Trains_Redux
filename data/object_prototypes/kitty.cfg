[prototype]
	prototype=hittable
	solid_dimensions=enemy,common


	[vars]
		team="'evil'"
		damage=2
		points_value=10
		turns_at_cliffs=1
		turns_towards_player=0
	[/vars]

	[consts]
	thrown_damage=10
	normal_damage=2
	springiness=200
	flinch_threshold=1
	spring_amount=1400
	bounce_roundness=80
	[/consts]

	[properties]
	choose_action="def() animation('walk')"
	desired_facing="if(level.player.midpoint_x < self.midpoint_x, -1, 1)"
	[/properties]

	[editor_info]
	category=milgramen
	[/editor_info]
	
	friction=1000
	traction=1000
	timer_frequency=5
	hitpoints=6
	on_create="animation('stand')"
	on_enter_anim="set(tmp, 'already_hit', [])"
	
	on_die="[score(level,points_value), spawn_item(self), spawn('die_cloud', midpoint_x, midpoint_y, facing)]"
	on_collide_side="if(collide_with != level.player, [set(velocity_x,-velocity_x/2),set(facing, -facing),animation('turn')])"
	on_bounced_on="[add(hitpoints, -5), set(me.green, 0), set(me.blue, 0), schedule(4, [set(me.green, 255), set(me.blue, 255)]), if(jumped_on_by.mass >= 1000, die(), animation('spring'))]"
	on_enter_water="die()"
	
	on_process="set(rotate, slope_standing_on)"
	on_timer="if(turns_at_cliffs and is_standing and animation = 'walk' and distance_to_cliff < 30,[set(facing, -facing),animation('turn')],null())"
	on_end_turn_anim="animation('walk')"
	on_end_walk_anim="choose_action()"
	
	on_end_stand_anim="if(is_standing and 1d2 = 2, if(turns_towards_player,set_facing(self,level), choose_action()), animation('stand'))"
	
	
	
	on_end_hurt_anim="animation('stand')"
	
	on_end_spring_anim="animation('walk')"
	
	
	on_surface_damage="die()"
	feet_width=4

	functions="
	  #looks for the player and turns to face it#	
	  def set_facing(obj,level) if(desired_facing != obj.facing, [animation('turn'),set(obj,'facing', desired_facing)], animation('walk')
	           ) where desired_facing = if(level.player.x < obj.x, -1, 1);
	1"

[/prototype]
