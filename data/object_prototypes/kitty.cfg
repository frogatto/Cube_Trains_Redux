[prototype]
	[vars]
		team="'evil'"
		damage=1
		points_value=10
		turns_at_cliffs=1
		turns_towards_player=0
	[/vars]
	springiness=100
	friction=1000
	traction=1000
	timer_frequency=5
	hitpoints=6
	on_create="[animation('stand'),debug('cat starting hp: ' + hitpoints)]"
	on_enter_anim="set(tmp, 'already_hit', [])"
	
	on_die="[score(level,points_value), spawn_item(self), spawn('die_cloud', midpoint_x, midpoint_y, facing)]"
	on_collide="[set('velocity_x',-velocity_x/2),set('facing', -facing),animation('turn')]"
	on_jumped_on="animation('spring')"
	
	on_process="set('rotate', slope_standing_on)"
	on_timer="if(turns_at_cliffs and is_standing and animation = 'walk' and distance_to_cliff < 30,[set('facing', -facing),animation('turn')],null())"
	on_end_turn_anim="animation('walk')"
	on_end_walk_anim="if(1d4 = 4, animation('stand'),animation('walk'))"
	
	on_end_stand_anim="if(is_standing and 1d2 = 2, if(turns_towards_player,set_facing(self,level), animation('walk')), animation('stand'))"
	
	
	
	on_collide_object_body=" if(collide_with.vars.team != vars.team and collide_with_area = 'attack',
		if(not (me in collide_with.tmp.already_hit), [set(collide_with.tmp, 'already_hit', collide_with.tmp.already_hit + [me]),
	
			set('hitpoints', hitpoints - collide_with.vars.damage), debug(collide_with.vars.damage), animation('hurt'), set('green', 100), set('blue', 100), set('velocity_y',-1000), set('velocity_x',400 * collide_with.facing),debug(~cat hp: ~ + (hitpoints))]))"

	
	
	on_hurtflicker="if(green = 100,[set('green', 255), set('blue', 255)],[set('green', 100), set('blue', 100)])"
	on_leave_hurt_anim="[set('green', 255), set('blue', 255)]"
	on_end_hurt_anim="animation('stand')"
	
	on_end_spring_anim="animation('walk')"
	
	
	on_surface_damage="die()"
	feet_width=4

	functions="
	  #looks for the player and turns to face it#	
	  def set_facing(obj,level) if(desired_facing != obj.facing, [animation('turn'),set(obj,'facing', desired_facing)], animation('walk')
	           ) where desired_facing = if(level.player.x < obj.x, -1, 1);
	1"

[/prototype]
