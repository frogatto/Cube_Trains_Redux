[prototype]
	prototype = base_input
	zorder = 99
	
	[vars]
		targetSelect = 0
		targets = []
		button_separation = 10
	[/vars]
	
	[properties]
		getCameraAnchor = "def(mode)
			list_add(
				level.camera_position[0:2], 
				[	if(mode in [1,4,7], 0, if(mode in [2,5,8], level.camera_position[2]/2-self.img_w/2, if(mode in [3,6,9], level.camera_position[2]-self.img_w))),
					if(mode in [7,8,9], 0, if(mode in [4,5,6], level.camera_position[3]/2-self.img_h/2+capButton.img_h, if(mode in [1,2,3], level.camera_position[3]-self.img_h-capButton.img_h)))]
			)	where capButton = object('{self.type}.button', self.midpoint_x, self.midpoint_y, self.facing)"
			
		button_offset = "def(target, index) index*(target.img_h+self.vars.button_separation)"
		
		scroll_to = "def(delta) if(size(targets) > 0, [
			set(self.vars.targetSelect, constrain(0, self.vars.targetSelect+delta, size(self.vars.targets)-1)),
			map(range(size(self.vars.targets)), 'index',
				add(self.vars.targets[index].y, delta*button_offset(self.vars.targets[0], 1))
				)
			])"
	[/properties]
	
	on_process = "[%PROTO%,
		set(clip_area, my_clip_area),
		map(vars.targets, 'target', set(target.clip_area, my_clip_area)),
		] where my_clip_area = [x/2,y/2+img_h,img_w/2,img_h/2]"
	
	on_done_create = "[
		add_object(over),
		set(over.parent, self),
		
		add_object(topCap),
		set(topCap.parent, self),
		
		add_object(bottomCap),
		set(bottomCap.parent, self),
		set(bottomCap.upside_down, 1),
		set(bottomCap.y, self.y+self.img_h+3), #+3 why? It just needed the extra pixel of room that '3' gave it, to match up with the offest of the top button.#
		
		#debug(vars.targets),#
		map(range(size(vars.targets)), 'index', [
			add_object(target),
			set(target.parent, self),
			#the target below is /highly/ suspect#
			set(target.reference_anchor, [	level.camera_position[0]-level.camera_position[2]/2+self.x+target.img_w*2-3, 
											level.camera_position[1]-level.camera_position[3]/2+self.y-269+target.img_h*2+button_offset(target, index)]),
			] where target = vars.targets[index])
		
		] where over = object('{self.type}.overlay', self.midpoint_x, self.midpoint_y, self.facing)
		where topCap = object('{self.type}.button', self.midpoint_x, self.y-bottomCap.img_h/2, self.facing)
		where bottomCap = object('{self.type}.button', self.midpoint_x, 0, self.facing)"
[/prototype]