[prototype]
	prototype = base_input
	zorder = 99
	
	[vars]
		targetSelect = 0
		targets = []
		button_separation = 10
		overlays = []	#keep these in synch with self#
		buttons=[]		#scrollable#
	[/vars]
	
	[properties]
		getCameraAnchor = "def(mode)
			list_add(
				level.camera_position[0:2], 
				[	if(mode in [1,4,7], 0, if(mode in [2,5,8], level.camera_position[2]/2-self.img_w/2, if(mode in [3,6,9], level.camera_position[2]-self.img_w))),
					if(mode in [7,8,9], 0, if(mode in [4,5,6], level.camera_position[3]/2-self.img_h/2+capButton.img_h, if(mode in [1,2,3], level.camera_position[3]-self.img_h-capButton.img_h)))]
			)	where capButton = object('{self.type}.button', self.midpoint_x, self.midpoint_y, self.facing)"
			
		button_offset = "def(target, index) index*(target.img_h+self.vars.button_separation)"
		
		scroll_to = "def(delta) if(size(targets) > 0, [
			set(self.vars.targetSelect, newSelect),
			set(vars.buttons, 
				transform(vars.buttons, [
					v[0], v[3](self, v[2]+newSelect), v[2], v[3]])),
			debug(vars.buttons),
			debug(newSelect),
			] where newSelect = constrain(0, self.vars.targetSelect+delta, size(self.vars.targets)-1))"
			
		 #for the buttons
	[/properties]
	
	on_done_create = "[
		add_object(over),
		set(over.base, self),
		add(vars.overlays, [[over, [0,0]]]),
		
		add_object(topCap),
		set(topCap.base, self),
		add(vars.overlays, [[topCap, [0,-topCap.img_h]]]),
		
		add_object(bottomCap),
		set(bottomCap.base, self),
		set(bottomCap.upside_down, 1),
		set(bottomCap.y, self.y), #+3 why? It just needed the extra pixel of room that '3' gave it, to match up with the offest of the top button.#
		add(vars.overlays, [[bottomCap, [0,self.img_h]]]),
		
		#debug(vars.targets),#
		map(range(size(vars.targets)), 'index', [
			add_object(target),
			set(target.vars.base, self),
			[	set(target.vars.formula, formula),
				set(target.vars.index, index),
				add(vars.buttons, [[target, formula, index, target.positionFormula]]),
			] where formula = target.positionFormula(self, index),
			set(target.reference_anchor, [0,0]), #Needed, not used?#
			] where target = vars.targets[index])
		
		] where over = object('{self.type}.overlay', self.midpoint_x, self.midpoint_y, self.facing)
		where topCap = object('{self.type}.button', self.midpoint_x, self.y-bottomCap.img_h/2, self.facing)
		where bottomCap = object('{self.type}.button', self.midpoint_x, 0, self.facing)"
		
	on_draw = "[[
		setAnchor(vars.anchorPoint, myReferenceAnchor),
		transform(vars.overlays + vars.buttons, [
			set(v[0].x, v[1][0]+myReferenceAnchor[0]+self.vars.offset[0]),
			set(v[0].y, v[1][1]+myReferenceAnchor[1]+self.vars.offset[1]),
			]),
		] where myReferenceAnchor = vars.reference_anchor(),
		[ #this slews#
		set(clip_area, my_clip_area),
		map(vars.targets, 'target', set(target.clip_area, my_clip_area)),
		] where my_clip_area = [x/2,y/2+level.camera_position[3]/2,img_w/2,img_h/2],
		]"
[/prototype]