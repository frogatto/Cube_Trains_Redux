[gui]

includes=score

### Character and weapon icons
	[animation]
	id=frogatto_portrait
	image=gui/hud.png
	rect=1,36,20,55
	frames=1
	duration=6
	[/animation]

	[animation]
	id=frogatto_energy_ball_portrait
	image=gui/hud.png
	rect=27,36,46,55
	frames=1
	duration=6
	[/animation]
	
	[animation]
	id=nene_portrait
	image=gui/hud.png
	rect=1,62,20,81
	frames=1
	duration=6
	[/animation]

	[animation]
	id=nene_flamethrower_portrait
	image=gui/hud.png
	rect=27,62,46,81
	frames=1
	duration=6
	[/animation]

	[animation]
	id=pato_portrait
	image=gui/hud.png
	rect=1,88,20,107
	frames=1
	duration=6
	[/animation]

	[animation]
	id=pato_glove_portrait
	image=gui/hud.png
	rect=27,88,46,107
	frames=1
	duration=6
	[/animation]


	
	[animation]
	id=score_background
	image=gui/hud.png
	rect=1,17,66,27
	frames=1
	duration=100
	[/animation]
	
	[animation]
	id=gold_background
	image=gui/hud.png
	rect=1,1,58,11
	frames=1
	duration=100
	[/animation]


	[animation]
	id=small_heart_full
	image=gui/hud.png
	rect=72,17,82,28
	frames=1
	duration=100
	[/animation]

	[animation]
	id=small_heart_empty
	image=gui/hud.png
	rect=114,17,124,28
	frames=1
	duration=100
	[/animation]
	
	[animation]
	id=heart_full
	image=gui/hud.png
	rect=72,2,82,13
	frames=1
	duration=100
	[/animation]
	
	[animation]
	id=heart_half
	image=gui/hud.png
	rect=72,17,82,28
	frames=1
	duration=100
	[/animation]

	[animation]
	id=heart_empty
	image=gui/hud.png
	rect=114,2,124,13
	frames=1
	duration=100
	[/animation]

	[animation]
	id=bar_frame
	image=gui/hud.png
	rect=4,115,43,126
	[/animation]

	[animation]
	id=bar_element
	image=gui/hud.png
	rect=98,105,109,112
	[/animation]

	no_compile_image="gui/progress-bar-center.png,gui/progress-bar-endcaps.png,gui/progress-bar-well-center.png"
	[animation]
	id=charge_bar_center
	image=gui/progress-bar-center.png
	rect=0,0,7,7
	[/animation]

	[animation]
	id=charge_bar_left
	image=gui/progress-bar-endcaps.png
	rect=3,0,7,6
	[/animation]

	[animation]
	id=charge_bar_right
	image=gui/progress-bar-endcaps.png
	rect=0,8,4,14
	[/animation]
	
	[animation]
	id=charge_bar_well_center
	image=gui/progress-bar-well-center.png
	rect=0,0,15,11
	[/animation]

	[animation]
	id=charge_bar_well_left
	image=gui/progress-bar-well-endcaps.png
	rect=0,0,15,11
	[/animation]

	[animation]
	id=charge_bar_well_right
	image=gui/progress-bar-well-endcaps.png
	rect=0,16,15,27
	[/animation]


	[animation]
	id=boss_angryface_heart_icon
	image=gui/hud.png
	rect=101,47,126,72
	[/animation]

	
	on_process="[if(object.vars.score < level.local_player.vars.score*100, set(object.vars, 'score', object.vars.score + diff/20 + 1) where diff = level.local_player.vars.score*100 - object.vars.score),

	if(object.vars.score = null(), set(object.vars.score, level.local_player.vars.score*100)),

	if(object.vars.coins != level.local_player.vars.coins*100, set(object.vars.coins, object.vars.coins + diff/20 + if(diff > 0, 1, -1)) where diff = level.local_player.vars.coins*100 - object.vars.coins),
	
	if(object.vars.coins = null(), set(object.vars.coins, level.local_player.vars.coins*100)),

    if(object.vars.bosses or object.vars.boss_hitpoints,
	   [if(target_hitpoints <= 0, set(objects.vars.bosses, [])),
	    if(object.vars.boss_hitpoints != target_hitpoints,
			 set(object.vars.boss_hitpoints, object.vars.boss_hitpoints +
			         if(target_hitpoints > object.vars.boss_hitpoints, 1, -1)))
	    ] where target_hitpoints = if(object.vars.bosses, (32*sum(map(object.vars.bosses, if(boss_hitpoints != null(), boss_hitpoints, hitpoints))))/sum(map(object.vars.bosses, if(boss_max_hitpoints != null(), boss_max_hitpoints, max_hitpoints))), 0)),
	
	if(object.vars.powerup_time != level.local_player.vars.powerup_time,
		    set(object.vars.powerup_time, object.vars.powerup_time + max(-2, min(10, level.local_player.vars.powerup_time - object.vars.powerup_time)))
	    )
	]"
	
	
	on_draw="[
	       switch(level.local_player.type,
				 'frogatto_playable', draw_animation('frogatto_portrait', 10, 10),
				 'nene_playable', draw_animation('nene_portrait', 10, 10),
				 'pato_playable', draw_animation('pato_portrait', 10, 10)),

		   switch(level.local_player.type,
			      'frogatto_playable', if(level.local_player.vars.has_energy_shot, draw_animation('bar_frame', 10, 48)),
			      'nene_playable', draw_animation('bar_frame', 10, 48),
			      'pato_playable', draw_animation('bar_frame', 10, 48)),

	draw_animation('score_background', 48, 10),
	draw_number(object.vars.score, 7, 52, 14),
	draw_animation('gold_background', 178, 10),
	draw_number(object.vars.coins, 5, 202, 14),


    slice(
	[
	  draw_animation('heart_full', 52+24*0,32),
	  draw_animation('heart_full', 52+24*1,32),
	  draw_animation('heart_full', 52+24*2,32),
	  draw_animation('heart_full', 52+24*3,32),
	  draw_animation('heart_full', 52+24*4,32),
	  draw_animation('heart_full', 52+24*5,32),
	  draw_animation('heart_full', 52+24*6,32),
	  draw_animation('heart_full', 52+24*7,32),
	  draw_animation('heart_full', 52+24*8,32),
	  draw_animation('heart_full', 52+24*9,32),
	  draw_animation('heart_full', 52+24*10,32),
	], 0, max(0, level.local_player.hitpoints/2)),

    slice(
	[
	  draw_animation('heart_empty', 52+24*0,32),
	  draw_animation('heart_empty', 52+24*1,32),
	  draw_animation('heart_empty', 52+24*2,32),
	  draw_animation('heart_empty', 52+24*3,32),
	  draw_animation('heart_empty', 52+24*4,32),
	  draw_animation('heart_empty', 52+24*5,32),
	  draw_animation('heart_empty', 52+24*6,32),
	  draw_animation('heart_empty', 52+24*7,32),
	  draw_animation('heart_empty', 52+24*8,32),
	  draw_animation('heart_empty', 52+24*9,32),
	  draw_animation('heart_empty', 52+24*10,32),
	], max(0, (level.local_player.hitpoints+1)/2), level.local_player.max_hitpoints/2),

    if(level.local_player.hitpoints > 0 and level.local_player.hitpoints%2,
	[
	  draw_animation('heart_half', 52+24*0,32),
	  draw_animation('heart_half', 52+24*1,32),
	  draw_animation('heart_half', 52+24*2,32),
	  draw_animation('heart_half', 52+24*3,32),
	  draw_animation('heart_half', 52+24*4,32),
	  draw_animation('heart_half', 52+24*5,32),
	  draw_animation('heart_half', 52+24*6,32),
	  draw_animation('heart_half', 52+24*7,32),
	  draw_animation('heart_half', 52+24*8,32),
	  draw_animation('heart_half', 52+24*9,32),
	  draw_animation('heart_half', 52+24*10,32),
	] [level.local_player.hitpoints/2]),

	if(level.local_player.consts.tank_size, [draw_animation('bar_frame', 10, 50),
	map(range(max(0, (level.local_player.vars.tank_fuel*4)/level.local_player.consts.tank_size)), 'n', draw_animation('bar_element', 14 + n*20, 54))]),

	if(energy_charge > 0,
		if(energy_charge < 20,
		   [draw_animation_area('charge_bar_left', 14, 52, energy_charge/4),
		    draw_animation_area('charge_bar_right', 12 + energy_charge/2, 52, 5 - energy_charge/4, 0, energy_charge/4, 5)],
		   [
		    draw_animation('charge_bar_left', 14, 52),
		    draw_animation('charge_bar_right', 14 + energy_charge - 12, 52),
	        draw_animation_area('charge_bar_center', 14 + 10, 52, (energy_charge - 20)/2)
		   ]
	    )
	 )
     where energy_charge = if(level.local_player.vars.charge_time = 0, 0, (level.local_player.energy_charge*75)/level.local_player.vars.charge_time - 5),

	
	if(object.vars.boss_hitpoints,
		 [draw_animation('charge_bar_well_left', 90, SCREEN_HEIGHT - 44),
		 draw_animation_area('charge_bar_well_center', 106, SCREEN_HEIGHT - 44, 310),
		 draw_animation('charge_bar_well_right', 90 + 620, SCREEN_HEIGHT - 44),
		 #draw_text('door_label','BOSS:', 40, SCREEN_HEIGHT - 40),#
		 draw_animation('boss_angryface_heart_icon', 20, SCREEN_HEIGHT - 56),
		 
		 
		 if(boss_hitpoints < 20,
		   [draw_animation_area('charge_bar_left', 94, SCREEN_HEIGHT - 40, boss_hitpoints/4),
		    draw_animation_area('charge_bar_right', 94 + boss_hitpoints/2, SCREEN_HEIGHT - 40, 5 - boss_hitpoints/4, 0, boss_hitpoints/4, 5)],

		[draw_animation('charge_bar_left', 94, SCREEN_HEIGHT - 40),
		 draw_animation('charge_bar_right', 94 + boss_hitpoints - 11, SCREEN_HEIGHT - 40),
		 draw_animation_area('charge_bar_center', 94 + 10, SCREEN_HEIGHT - 40, (boss_hitpoints - 20)/2)
		])]
	   
	   where boss_hitpoints = object.vars.boss_hitpoints*20
	 ),

	 if(object.vars.powerup_time > 20,
	   [draw_animation('charge_bar_left', 14, 70),
		draw_animation('charge_bar_right', 14 + object.vars.powerup_time - 11, 70),
	    draw_animation_area('charge_bar_center', 14 + 10, 70, (object.vars.powerup_time - 20)/2)
	   ]
	 )
	 
	]"



	
	#example usage of an anim already defined in an object: #on_draw="[draw_animation('frogatto_playable', 'stand', 10, 10)]"
[/gui]
