[gui]
	
	[animation]
	id=iphone_b
	image=gui/iphone_controls.png
	rect=2,2,52,60
	frames=1
	duration=1
	scale=2
	[/animation]
	
	[animation]
	id=iphone_a
	image=gui/iphone_controls.png
	rect=2,62,52,120
	frames=1
	duration=1
	scale=2
	[/animation]
	
	[animation]
	id=iphone_b_down
	image=gui/iphone_controls.png
	rect=54,2,104,60
	frames=1
	duration=1
	scale=3
	[/animation]
	
	[animation]
	id=iphone_a_down
	image=gui/iphone_controls.png
	rect=54,62,104,120
	frames=1
	duration=1
	scale=3
	[/animation]

	[animation]
	id=iphone_action
	image=gui/iphone_controls.png
	rect=2,122,52,180
	frames=1
	duration=1
	scale=2
	[/animation]
	
	[animation]
	id=iphone_action_down
	image=gui/iphone_controls.png
	rect=54,122,104,180
	frames=1
	duration=1
	scale=2
	[/animation]


	[animation]
	id=iphone_up
	image=gui/iphone_controls3.png
	rect=78,0,124,54
	frames=1
	duration=1
	scale=2
	[/animation]

	[animation]
	id=iphone_up_pressed
	image=gui/iphone_controls3.png
	rect=78,96,124,150
	frames=1
	duration=1
	scale=2
	[/animation]

	[animation]
	id=iphone_down
	image=gui/iphone_controls3.png
	rect=126,44,172,74
	frames=1
	duration=1
	scale=2
	[/animation]

	[animation]
	id=iphone_down_pressed
	image=gui/iphone_controls3.png
	rect=126,140,172,170
	frames=1
	duration=1
	scale=2
	[/animation]

	[animation]
	id=iphone_left
	image=gui/iphone_controls3.png
	rect=0,46,74,92
	frames=1
	duration=1
	scale=2
	[/animation]

	[animation]
	id=iphone_left_pressed
	image=gui/iphone_controls3.png
	rect=0,142,74,188
	frames=1
	duration=1
	scale=2s
	[/animation]

	[animation]
	id=iphone_right
	image=gui/iphone_controls3.png
	rect=0,0,74,44
	frames=1
	duration=1
	scale=2
	[/animation]

	[animation]
	id=iphone_right_pressed
	image=gui/iphone_controls3.png
	rect=0,96,74,140
	frames=1
	duration=1
	scale=2
	[/animation]
	
	on_process="
		if (not object.vars.scheme_loaded,
			[
			set(object.vars.buttons,
				map(control_scheme_node.elements.button, 'button',
					{'id' -> button.id, 'x' -> eval(button.x), 'y' -> eval(button.y), 'anim' -> button.anim, 'anim_down' -> button.anim_down})
				where control_scheme_node = find(get_document('data/control_schemes.cfg').elements.control_scheme, id = 'iphone_classic')),
			set(object.vars.scheme_loaded, 1)
			])"
	
	on_draw="
		if(IPHONE_SYSTEM,
			if((not level.player.underwater_controls),
				[
				map(['up', 'down', 'left', 'right'], 'i',
					if(query(level.player, 'ctrl_'+i),
					[color(255, 255, 255, 255), draw_animation(b.anim_down, b.x, b.y)],
					[color(255, 255, 255, 128), draw_animation(b.anim, b.x, b.y)])
					where b = find(object.vars.buttons, 'button', button['id'] = i)
				),

			    [
					if(level.player.ctrl_tongue, color(255, 255, 255, 255), color(255, 255, 255, 128)),
					draw_animation(a.anim, if(level.player.ctrl_reverse_ab, b, a).x, if(level.player.ctrl_reverse_ab, b, a).y),

					if(level.player.ctrl_jump, color(255, 255, 255, 255), color(255, 255, 255, 128)),
					draw_animation(b.anim, if(level.player.ctrl_reverse_ab, a, b).x, if(level.player.ctrl_reverse_ab, a, b).y)
				]
				where b = find(object.vars.buttons, 'button', button['id'] = 'b')
				where a = find(object.vars.buttons, 'button', button['id'] = 'a'),

				color(255, 255, 255, 255),

				if(level.player.can_interact, draw_animation(b.anim, b.x, b.y)
					where b = find(object.vars.buttons, 'button', button['id'] = 'interact'))
				],

				#controls when underwater#
				[
					[
						if(level.player.ctrl_tongue, color(255, 255, 255, 255), color(255, 255, 255, 128)),
						draw_animation(a.anim, if(level.player.ctrl_reverse_ab, b, a).x, if(level.player.ctrl_reverse_ab, b, a).y),
					]
					where b = find(object.vars.buttons, 'button', button['id'] = 'b')
					where a = find(object.vars.buttons, 'button', button['id'] = 'a'),
					color(255, 255, 255, 255)
				]
			))"
	
[/gui]
