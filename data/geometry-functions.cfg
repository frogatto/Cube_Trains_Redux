[function]
	name="distance"
	args="a, b"
	formula="sqrt(ly^2 + lx^2) where lx = abs(a.midpoint_x-b.midpoint_x) where ly = abs(a.midpoint_y-b.midpoint_y)"
[/function]

[function]
	name="length"
	args="x, y, z, a"
	formula="sqrt(ly^2 + lx^2) where lx = abs(x-z) where ly = abs(y-a)"
[/function]

[function]
	name="angle"
	args="x, y, z, a"
	formula="private_angle_to(y-a,x-z) + if(x>z, 180)
	#private_angle_to does a the floating-point math needed for this function. It is found in formula_function.cpp.#"
[/function]

[function]
	name="angle_to"
	args="a, b"
	formula="private_angle_to(op,ad) where op = a.midpoint_y-b.midpoint_y where ad = if (a.midpoint_x < b.midpoint_x, -distance(a,b), distance(a,b)) #a.midpoint_x-b.midpoint_x#"
[/function]

[function]
	name="orbit_obj"
	args="x, y, rot, dist"
	formula="[(dist * cos(rot)) / 100 + x, (dist * sin(rot)) / 100 + y]"
[/function]

[function]
	name="angle_alpha"
	args="a, b, c"
	formula="acos(((b^2 + c^2 - a^2)*100)/(2*b*c))"
[/function]

[function]
	name="angle_beta"
	args="a, b, c"
	formula="acos(((a^2 + c^2 - b^2)*100)/(2*a*c))"
[/function]

[function]
	name="angle_theta"
	args="a, b, c"
	formula="acos(((a^2 + b^2 - c^2)*100)/(2*a*b))"
[/function]