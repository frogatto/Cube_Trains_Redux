## this one has falloff logic in it (i.e. the sound will fade as the player gets further away).  For optimization purposes, use this one only when we need it, because it polls the player's position to adjust the volume.

	[object_type]
	id=sfx_intermittent_falloff_generator
	always_active=true
	ignore_collide=true

	[editor_info]
	category=controllers
		[var]
		name=effect_name_root
		type=text
		value=''
		[/var]
		[var]
		name=effect_name_count
		[/var]
		[var]
		name=delay_random
		value=300
		[/var]
		[var]
		name=delay_forced
		value=100
		[/var]
		[var]
		name=falloff_distance
		value=800
		[/var]
		[var]
		name=master_volume
		value=128
		[/var]
		[var]
		name=max_volume
		value=128
		[/var]
		
		[var]
		name=x_bound
		type=x
		value="x-100"
		[/var]
		[var]
		name=x2_bound
		type=x
		value="x+150"
		[/var]
		[var]
		name=y_bound
		type=y
		value="y-100"
		[/var]
		[var]
		name=y2_bound
		type=y
		value="y+150"
		[/var]
	[/editor_info]
	
	[properties]
		nearest_edge="max( if(level.player.x > x_bound and level.player.x < x2_bound, 1,
			min(abs(level.player.x - x_bound),abs(level.player.x - x2_bound))),
		if(level.player.y > y_bound and level.player.y < y2_bound, 1,
			min(abs(level.player.y - y_bound),abs(level.player.y - y2_bound))) )"
			
		volume_level_base128=" ( if(desired_volume > 14, min(max_volume, (desired_volume * master_volume)/128), 0) ) where desired_volume = (128*((1000*160)/ max(1,nearest_edge) ))/1000"
		
		volume_level="1.0*(volume_level_base128/128.0)"
	[/properties]
	
	
	on_create="[set(alpha,0),if(effect_name_root and effect_name_count,fire_event('play_sound'))]"
	on_play_sound="[schedule(1d(delay_random)+delay_forced,fire_event('play_sound')),sound(effect_name_root + 1d(effect_name_count) + '.ogg', volume_level)]"
	


	on_end_anim="animation('normal')"
	zorder=50
		[animation]
		id=normal
		image=effects/particles.png
		x=179
		y=166
		w=28
		h=28
		frames=1
		duration=1000
		[/animation]
	[/object_type]
