[object_type]
always_active=yes
friction="1000"
functions="#looks for the player and turns to face it#	
	  def set_facing(obj,level) if(desired_facing != obj.facing, [animation('turn'),set(obj.facing, desired_facing)], animation('walk')
	           ) where desired_facing = if(level.player.x < obj.x, -1, 1);


	  #if the player is in an opportune spot, attack it#	
	  def consider_attacking(obj,level) if((desired_facing = obj.facing) and (abs(level.player.x - obj.x) < 150) and (abs(level.player.y - obj.y) < 50), animation('prepare_jump'), animation('walk')
	           ) where desired_facing = if(level.player.x < obj.x, -1, 1);
	1"
hitpoints="2000"
id="kitty_sword"
mass="64"
on_create="set(level.gui.vars.bosses, level.gui.vars.bosses + [me])"
on_bounced_on="if(is_invincible_posthit,null(),[add(hitpoints, -200),set(vars.time_last_hit, cycle), hurt_flash_sequence(),display_posthit_invincibility_flash_sequence(), if(jumped_on_by.mass >= 1000, die(), animation('spring'))])"
on_collide_side="
 if(collide_with = level.player,
   #make it so if we collide with the player we immediately jump/attack.
    this ensures the kitty can't simply get stuck between the player and a wall#
   animation('jump'),
  [
  if(animation = 'lunge_attack' and (not collide_with),
		    [animation('lunge_stuck'), add(x,-50*facing),set(velocity_x,0), set(tmp.stuck_count, 0)]),
  if(not (animation in ['jump_attack', 'lunge_attack', 'lunge_stuck', 'lunge_unstuck']), [set(facing, -facing), animation('turn'), set(velocity_x, 0)])
		 ])"
on_die="[score(level,points_value), spawn_item(self), death_burst(self)]"
on_end_hurt_anim="animation('stand')"
on_end_jump_attack_anim="[animation('walk'), set(tmp.can_attack_at, cycle+50)]"
on_end_lunge_anim="animation('walk')"
on_end_lunge_attack_anim="[animation('walk')]"
on_end_prepare_lunge_anim="if(cycle - vars.began_charging > consts.charge_duration,animation('lunge'),animation('prepare_lunge'))"
on_end_prepare_jump_anim="if(cycle - vars.began_charging > consts.charge_duration,fire_event('initiate_jump'),animation('prepare_jump'))"


on_end_lunge_stuck_anim="if(tmp.stuck_count > 4, animation('lunge_unstuck'), [animation('lunge_stuck'), set(tmp.stuck_count, tmp.stuck_count+1)])"
on_end_lunge_unstuck_anim="animation('stand')"
on_end_spring_anim="animation('stand')"
on_end_stand_anim="if(is_standing, animation('walk'), animation('stand'))"
on_end_turn_anim="animation('walk')"
on_end_walk_anim="if((not facing_player),
  if(abs(level.player.midpoint_x - midpoint_x) < 800, set(facing, -facing)),

  if(cycle > tmp.can_attack_at and abs(level.player.midpoint_x - midpoint_x) < (300 + 1d200),

   if((1d4 = 1) or (abs(level.player.y - y) > 50),
    [animation('prepare_jump'),set(vars.began_charging,cycle)],
	[animation('prepare_lunge'),set(vars.began_charging,cycle)]
	),

if(distance_to_cliff < 80, [set(facing, -facing), animation('turn')], animation('walk'))))"


on_initiate_jump="[animation('jump'), if(level.player.x > midpoint_x,facing(1),facing(-1)),set(velocity_x, (level.player.midpoint_x - midpoint_x)*4), if(level.player.y > y2 and is_standing_on_platform, [set(fall_through_platforms, 20), set(velocity_y, 0)], if(midpoint_y - level.player.midpoint_y > 200, [set(velocity_y, -2200)]))]"

on_enter_water="die()"
on_process_jump="if(abs(level.player.midpoint_x - midpoint_x) < 80 and level.player.y2 > y,
                       [animation('jump_attack')],
						if(is_standing, animation('stand')))"
on_process_lunge="if(abs(level.player.midpoint_x - midpoint_x) < 200,
                     animation('lunge_attack'))"
                     
                     
                     
prototype="hittable"
solid_area="13,9,33,34"
solid_dimensions="common"
traction="1000"
traction_in_air="200"
	[editor_info]
	category="milgramen"
	[/editor_info]

	[properties]
		attack_damage=2
		team="'evil'"
		facing_player="if(level.player.x < x, facing < 0, facing > 0)"
		hurt_velocity_x="0"
		hurt_velocity_y="0"
		flinch_threshold="40"
	[/properties]

	[vars]
		points_value="500"
		turns_at_cliffs="1"
		turns_towards_player="1"
		began_charging="0"
	[/vars]

	[consts]
		basic_type="'kitty_sword'"
		posthit_invicibility_period=100
		springiness="200"
		charge_duration=80
		spring_amount=1400
		bounce_roundness=200
	[/consts]

	[tmp]
		can_attack_at="-1"
	[/tmp]

	[base:animation]
	image="enemies/kitty-sword.png"
	pad="3"
	body_area="all"
	accel_x="0"
	accel_y="80"
	[/animation]
	

	[animation]
	id="stand"
	duration="18"
	frames="1"
	rect="1,1,41,36"
	[/animation]

	[animation]
	id="turn"
	duration="2"
	frames="1"
	frames_per_row="1"
	rect="1,1,41,36"
	[/animation]

	[animation]
	id="walk"
	accel_x="360"
	duplicates="6"
	duration="6"
	frames="3"
	rect="1,1,41,36"
	[/animation]

	#blink variation of walking
	[animation]
	id="walk"
	accel_x="300"
	duration="6"
	frames="3"
	frames_per_row="3"
	rect="133,1,173,36"
	[/animation]

	[animation]
	id="spring"
	duration="2"
	frames="5"
	frames_per_row="5"
	rect="1,40,51,75"
	reverse="yes"
	[/animation]

	[animation]
	id="hurt"
	duration="18"
	frames="1"
	rect="1,1,41,36"
	[/animation]

	[animation]
	id="prepare_lunge"
	duration="2"
	frames="3"
	frames_per_row="3"
	rect="1,79,41,114"
	[/animation]

	[animation]
	id="lunge"
	accel_x="2800"
	duration="10"
	frames="3"
	rect="133,79,173,114"
	[/animation]

	[animation]
	id="lunge"
	accel_x="2800"
	attack_area="12,0,40,34"
	duration="6"
	frames="3"
	frames_per_row="3"
	id="lunge_attack"
	rect="1,118,55,153"
	[/animation]

	[animation]
	id="lunge_stuck"
	accel_x="0"
	duration="5"
	frames="3"
	frames_per_row="3"
	solid_area="10,10,30,35"
	rect="1,157,55,192"
	rows="2"
	[/animation]

	[animation]
	id="jump"
	duration="10"
	frames="3"
	frames_per_row="3"
	rect="1,198,41,251"
	solid_area="13,29,33,54"
	velocity_y="-1600"
	[/animation]

	[animation]
	id="prepare_jump"
	duration="2"
	frames="2"
	frames_per_row="2"
	rect="207,242,247,290"
	[/animation]

	[animation]
	id="jump_attack"
	accel_x="-80"
	accel_y="120"
	attack_area="12,0,40,34"
	duration="10"
	frames="3"
	frames_per_row="3"
	rect="1,255,60,290"
	[/animation]

	[animation]
	id="lunge_unstuck"
	duration="10"
	frames="1"
	frames_per_row="1"
	solid_area="10,10,30,35"
	rect="181,157,235,192"
	[/animation]

[/object_type]

