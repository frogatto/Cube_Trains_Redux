[object_type]
	id=drive_line

	[editor_info]
	category=decor
	help = "A decorative rope meant to look like it's providing locomotion
			to a platform or machine, across some distance."

		[var]
		name=speed
		value=10
		[/var]
		[var]
		name=move_x1
		type=x
		value="x + if(facing < 0, 9, 0)"
		[/var]
		[var]
		name=move_x2
		type=x
		value="x + img_w - if(facing > 0, 9, 0)"
		[/var]
		[var]
		name=move_y1
		type=y
		value="y + img_h - 34"
		[/var]
		[var]
		name=move_y2
		type=y
		value="y + img_h"
		[/var]
	[/editor_info]


	[animation]
		id=normal
		image=effects/particles.png
		x=210
		y=166
		w=28
		h=28
		frames=1
		duration=1000
	[/animation]
	
	[properties]
		pulleyDiameter=18
		sagOffset=15
		topRopeH="pulleyDiameter+sagOffset"
		polarity="sign(vars.move_x2-vars.move_x1)"  #if the platform is flipped, some values need to run in the opposite direction - such as pulley rotation


		point1 = "[vars.move_x1, vars.move_y1]"
		point2 = "[vars.move_x2, vars.move_y2]"
		distance="mod(cycle,360)"
		setPos = "def() [
			set(left_pulley.midpoint_x, point1[0]),
			set(left_pulley.midpoint_y, point1[1]-sagOffset -pulleyDiameter/2),
			set(left_pulley.rotate, polarity-distance*5),
			set(right_pulley.midpoint_x, point2[0]),
			set(right_pulley.midpoint_y, point2[1]-sagOffset -pulleyDiameter/2),
			set(right_pulley.rotate, polarity-distance*5),


			top_rope.set_ends(point1[0], point1[1]-topRopeH, point2[0], point2[1]-topRopeH),
			top_rope.set_offset(distance),
			bottom_rope.set_ends(point2[0], point2[1]-sagOffset, point1[0], point1[1]-sagOffset),
			bottom_rope.set_offset(distance)
			
			]"
		actBsize="max(abs(vars.move_x1-vars.move_x2),abs(vars.move_y1-vars.move_y2))*2"

	[/properties]
		on_process="setPos()"

	on_start_level="set(activation_border, actBsize)"

	on_create = "[
		set(alpha,0),
		set(vars.move_x1, move_x1 - if(facing < 0, 9, 0)),
		set(vars.move_x2, move_x2 - if(facing > 0, 9, 0)),
		set(vars.move_y1, move_y1 - 34),
		set(vars.move_y2, move_y2),

		[add_object(obj),
		set(vars.left_pulley, obj)
		] where obj = object('platform_swaying.pulley',vars.move_x1,vars.move_y1,facing,{'activation_border'->actBsize}),

		[add_object(obj),
		set(vars.right_pulley, obj)
		] where obj = object('platform_swaying.pulley',vars.move_x1,vars.move_y1,facing,{'activation_border'->actBsize}),
		
		[add_object(obj),
		set(vars.top_rope, obj)
		] where obj = object('rope_angled_controller',vars.move_x1,vars.move_y1,facing,{'activation_border'->actBsize, 'animation'->'dark'}),

		[add_object(obj),
		set(vars.bottom_rope, obj)
		] where obj = object('rope_angled_controller',vars.move_x1,vars.move_y1,facing,{'activation_border'->actBsize, 'animation'->'dark'})
		]"


[/object_type]