[prototype]
	prototype=ct-block
	zsub_order = "2"
	
	[vars]
		group=['center']
		bonus=['tree']		#and this is for scoring
		editable=1
	[/vars]
	
	[properties]
		set_alpha = "def(val) map(objs, 'obj', set(obj.alpha, val+200 #Sort of nudge the alpha down a level so it matches the blocks below it, since it looks kind of funny otherwise.#)) where objs = vars.overlays + [self]"
		
		setToGrid = "def(crd) [ #This varient lowers the y drawing location as if by one z (tall), so as to render the top of the tree on the top of the trunk even though we raised it one z so it's z-level and selecting behaviour would be correct.#
			set(self.x, lpfc[0]),
			set(self.y, lpfc[1]+tall),
			set(self.z, lpfc[2]+crd[2]*5+1), #+1 so it goes in front of enclosing blocks.#
			set(self.vars.location, crd),
			] where lpfc = level_position_from_coordinate(crd)"
			
		additionalPlacementRequirementsMet="def(chars) 
			if(self.vars.parent in transform(potentially_at_coord(list_add(self.vars.location, [0,0,-1]), chars), v.type),
				{'ok' -> 1}, {'error' -> 'Missing trunk. Timber!'})"
	[/properties]
[/prototype]